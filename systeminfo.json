{
  "project": {
    "name": "HexTrackr",
    "version": "1.0.2",
    "description": "Dual-purpose cybersecurity management system with ticket management and vulnerability analysis",
    "repository": "https://github.com/lbruton/HexTrackr",
    "license": "MIT",
    "created": "2024",
    "lastUpdated": "2025-08-27"
  },
  "architecture": {
    "type": "Client-Side + API Hybrid",
    "deployment": "Docker Container",
    "database": "SQLite3 (server-side) + localStorage + IndexedDB",
    "frontend": "Vanilla JavaScript + Tabler.io (primary) + Bootstrap (legacy)",
    "backend": "Node.js Express Server",
    "port": 8080
  },
  "documentation": {
    "system": "Static portal with comprehensive technical documentation",
    "location": "docs-prototype/",
    "generator": "docs-prototype/generate-docs.js",
    "automation": "docs-prototype/AUTOMATION_INSTRUCTIONS.md",
    "features": [
      "API endpoint auto-discovery (22 endpoints found)",
      "Function reference auto-generation (353 functions)",
      "Framework usage detection (4 frameworks)",
      "Unified navigation with hash-based routing",
      "Documentation system self-documentation",
      "Project roadmap integration with sprint tracking",
      "UI-API interaction mapping",
      "Database schema visualization", 
      "Page flow navigation diagrams"
    ],
    "standards": {
      "apiDocumentation": "Auto-scanned from server.js route definitions",
      "functionDocumentation": "Pattern-based extraction from all .js files",
      "frameworkDocumentation": "Usage detection across HTML/CSS/JS files",
      "architectureDocumentation": "System analysis and visual diagrams"
    },
    "integration": "Seamless with HexTrackr UI using shared components"
  },
  "applications": {
    "tickets": {
      "file": "tickets.html",
      "purpose": "Hexagon security ticket workflow management",
      "storage": "localStorage",
      "storageKey": "hexagonTickets",
      "dependencies": [
        "Tabler.io v1.0.0-beta17 (primary UI framework)",
        "Font Awesome 6.4.0",
        "XLSX (SheetJS)",
        "jsPDF + AutoTable",
        "JSZip",
        "PapaParse"
      ],
      "jsFile": "app.js",
      "mainClass": "HexagonTicketsManager",
      "features": [
        "CSV import/export",
        "PDF generation with bundling",
        "Device smart naming",
        "Drag-and-drop reordering",
        "Local storage persistence"
      ],
      "apiDependency": false
    },
    "vulnerabilities": {
      "file": "vulnerabilities-new.html",
      "purpose": "Multi-vendor vulnerability data analysis and management",
      "storage": "SQLite3 database via API",
      "database": "hextrackr.db",
      "dependencies": [
        "Tabler.io v1.0.0-beta17",
        "Chart.js",
        "SortableJS",
        "AG-Grid Community",
        "ApexCharts",
        "PapaParse"
      ],
      "jsFile": "vulnerabilities.js",
      "mainClass": "ModernVulnManager",
      "features": [
        "CSV upload processing",
        "VPR scoring integration",
        "Device/vulnerability card views",
        "Advanced filtering and search",
        "Statistics dashboard",
        "API-based data persistence"
      ],
      "apiDependency": true,
      "apiEndpoints": [
        "/api/vulnerabilities/upload",
        "/api/vulnerabilities/stats",
        "/api/vulnerabilities/devices",
        "/api/vulnerabilities/search"
      ]
    }
  },
  "dataFlow": {
    "tickets": {
      "storage": "Client-side localStorage",
      "persistence": "Browser local storage only",
      "export": "CSV, Excel, JSON, PDF, HTML",
      "import": "CSV via Papa.parse"
    },
    "vulnerabilities": {
      "storage": "Server-side SQLite3 database",
      "persistence": "Database file at /app/data/hextrackr.db",
      "api": "RESTful Express.js endpoints",
      "upload": "Multipart form data processing",
      "processing": "Server-side CSV parsing and VPR calculations"
    }
  },
  "development": {
    "environment": "Docker containerized",
    "volumes": [
      ".:/app (source code mounting)",
      "/app/node_modules (dependency isolation)",
      "./data:/app/data (database persistence)"
    ],
    "devServer": "Express.js with live reload via volume mounting",
    "buildProcess": "Docker build with Alpine Linux + Node.js 18",
    "dependencies": {
      "native": ["sqlite3", "python3", "make", "g++"],
      "security": "npm audit, Codacy integration"
    }
  },
  "fileStructure": {
    "entryPoints": {
      "tickets.html": "Ticket management interface",
      "vulnerabilities.html": "Vulnerability analysis interface",
      "docs-prototype/index.html": "Comprehensive documentation portal"
    },
    "scripts": {
      "scripts/pages/tickets.js": "Ticket management logic (HexagonTicketsManager)",
      "scripts/pages/vulnerabilities.js": "Vulnerability management logic (ModernVulnManager)",
      "scripts/shared/header-loader.js": "Shared header component system",
      "scripts/shared/footer-loader.js": "Shared footer component system",
      "scripts/shared/settings-modal.js": "Unified settings modal",
      "docs-prototype/generate-docs.js": "Documentation auto-generation system",
      "docs-prototype/js/docs-tabler.js": "Documentation portal logic",
      "server.js": "Express.js API server with 22 documented endpoints"
    },
    "styles": {
      "styles/shared/base.css": "Global HexTrackr styling",
      "styles/shared/header.css": "Shared header component styles",
      "styles/pages/tickets.css": "Ticket-specific styling",
      "styles/pages/vulnerabilities.css": "Vulnerability-specific styling",
      "docs-prototype/css/docs-tabler.css": "Documentation portal styling",
      "framework": "Tabler.io v1.0.0-beta17 (primary), Bootstrap components (legacy support)"
    },
    "data": {
      "hextrackr.db": "SQLite database for vulnerabilities",
      "uploads/": "Temporary CSV upload directory"
    }
  },
  "criticalSeparation": {
    "warning": "NEVER mix ticket and vulnerability JavaScript logic",
    "tickets": {
      "scope": "tickets.html + app.js only",
      "storage": "localStorage with key 'hexagonTickets'",
      "framework": "Bootstrap 5",
      "offline": true
    },
    "vulnerabilities": {
      "scope": "vulnerabilities-new.html + vulnerabilities.js only",
      "storage": "API calls to /api/vulnerabilities/*",
      "framework": "Tabler.io",
      "offline": false,
      "serverRequired": true
    }
  },
  "uiApiInteractions": {
    "tickets": {
      "interface": "tickets.html",
      "dataFlow": "UI → localStorage (no API calls)",
      "interactions": {
        "saveTicket()": "Saves to localStorage['hexagonTickets']",
        "loadTickets()": "Reads from localStorage['hexagonTickets']",
        "exportData()": "Client-side file generation (CSV/PDF/Excel)",
        "importCSV()": "Client-side CSV parsing with PapaParse"
      }
    },
    "vulnerabilities": {
      "interface": "vulnerabilities.html",
      "dataFlow": "UI → API → SQLite Database",
      "interactions": {
        "uploadVulnerabilities()": "POST /api/vulnerabilities/upload",
        "loadDevices()": "GET /api/vulnerabilities/devices",
        "getStats()": "GET /api/vulnerabilities/stats",
        "searchVulnerabilities()": "GET /api/vulnerabilities/search"
      }
    },
    "documentation": {
      "interface": "docs-prototype/index.html",
      "dataFlow": "Static HTML content → Generated documentation files",
      "interactions": {
        "loadSection()": "Fetches content/[section]/[file].html",
        "generateDocs()": "node generate-docs.js scans codebase",
        "searchDocs()": "Client-side search through generated content"
      }
    }
  },
  "nextSteps": {
    "immediate": [
      "Complete UI-API interaction mapping documentation",
      "Add database schema visualization to docs portal",
      "Create page flow diagrams showing system architecture",
      "Integrate roadmap into documentation portal"
    ],
    "planned": [
      "API authentication with CryptoJS",
      "Cisco PSIRT integration",
      "SNMP polling capabilities",
      "Ansible automation integration",
      "Advanced documentation automation with AI"
    ]
  }
}
