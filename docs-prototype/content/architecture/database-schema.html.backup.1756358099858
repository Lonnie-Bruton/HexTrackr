<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Database Schema - HexTrackr Documentation</title>
    <!-- Tabler.io CSS Framework -->
    <link href="https://cdn.jsdelivr.net/npm/@tabler/core@1.0.0-beta17/dist/css/tabler.min.css" rel="stylesheet"/>
    <link href="https://cdn.jsdelivr.net/npm/@tabler/icons@latest/icons-sprite.svg" rel="stylesheet"/>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet"/>
    
    <style>
        /* Documentation Section Styling */
        .documentation-section {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            line-height: 1.6;
        }
        
        .documentation-section h2 {
            color: #2c3e50;
            margin-bottom: 1rem;
            font-weight: 600;
        }
        
        .documentation-section h3 {
            color: #34495e;
            margin-top: 2rem;
            margin-bottom: 1rem;
            font-weight: 500;
        }
        
        .documentation-section h4 {
            color: #5a6c7d;
            margin-top: 1.5rem;
            margin-bottom: 0.75rem;
            font-weight: 500;
        }
        
        .documentation-section .text-muted {
            color: #6c757d !important;
        }
        
        .documentation-section code {
            background: #f8f9fa;
            padding: 2px 6px;
            border-radius: 3px;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 0.875em;
            border: 1px solid #e9ecef;
        }
        
        .documentation-section pre {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 6px;
            padding: 1rem;
            overflow-x: auto;
            margin: 1rem 0;
        }
        
        .documentation-section pre code {
            background: none;
            border: none;
            padding: 0;
        }
        
        .documentation-section .alert {
            border-radius: 8px;
            border: none;
            margin: 1rem 0;
        }
        
        .documentation-section .card {
            border: 1px solid #dee2e6;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        }
        
        .documentation-section .card-header {
            background: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            padding: 1rem 1.25rem;
        }
        
        .documentation-section .card-body {
            padding: 1.25rem;
        }
        
        .documentation-section .badge {
            font-size: 0.75em;
            padding: 0.35em 0.65em;
        }
        
        .documentation-section table {
            margin: 1rem 0;
        }
        
        .documentation-section .table th {
            background: #f8f9fa;
            border-bottom: 2px solid #dee2e6;
            font-weight: 600;
            color: #495057;
        }
        
        .documentation-section .table td {
            border-bottom: 1px solid #dee2e6;
        }
        
        .documentation-section .table-striped tbody tr:nth-of-type(odd) {
            background-color: #f8f9fa;
        }
        
        /* Custom component styling for documentation */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin: 1.5rem 0;
        }
        
        .stat-card {
            text-align: center;
            padding: 1.5rem;
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        }
        
        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .stat-label {
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        /* Responsive design */
        @media (max-width: 768px) {
            .documentation-section {
                padding: 1rem;
            }
            
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 0.75rem;
            }
            
            .stat-card {
                padding: 1rem;
            }
            
            .stat-number {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="documentation-section">
        <h1>Database Schema</h1>
<p>Complete database schema documentation for HexTrackr&#39;s SQLite database architecture.</p>
<h2>Overview</h2>
<p><strong>Database:</strong> SQLite3 located at <code>data/hextrackr.db</code><br><strong>Initialization:</strong> <code>scripts/init-database.js</code><br><strong>Architecture:</strong> Time-series vulnerability tracking with normalized data structure</p>
<h2>Database Statistics</h2>
<ul>
<li><strong>Main Tables:</strong> 4</li>
<li><strong>Indexes:</strong> 5  </li>
<li><strong>Foreign Keys:</strong> 2</li>
<li><strong>Junction Tables:</strong> 1</li>
</ul>
<h2>Schema Relationships</h2>
<h3>tickets</h3>
<p>Main table for security ticket management and tracking.</p>
<div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">[object Object]</thead>
                    <tbody>undefined</tbody>
                </table>
            </div><h3>vulnerability_imports</h3>
<p>Tracks CSV import operations and metadata for vulnerability data.</p>
<div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">[object Object]</thead>
                    <tbody>undefined</tbody>
                </table>
            </div><h3>vulnerabilities</h3>
<p>Individual vulnerability records from scanned systems.</p>
<div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">[object Object]</thead>
                    <tbody>undefined</tbody>
                </table>
            </div><h3>ticket_vulnerabilities</h3>
<p>Junction table linking tickets to vulnerabilities for relationship tracking.</p>
<div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">[object Object]</thead>
                    <tbody>undefined</tbody>
                </table>
            </div><h2>Indexes</h2>
<ol>
<li><strong>idx_vulnerabilities_import_id</strong> - Optimizes import-based queries</li>
<li><strong>idx_vulnerabilities_hostname</strong> - Speeds up hostname searches  </li>
<li><strong>idx_vulnerabilities_cve</strong> - Accelerates CVE lookups</li>
<li><strong>idx_tickets_status</strong> - Improves status-based filtering</li>
<li><strong>idx_ticket_vulnerabilities_ticket</strong> - Junction table optimization</li>
</ol>
<h2>Foreign Key Constraints</h2>
<ol>
<li><p><strong>vulnerabilities.import_id → vulnerability_imports.id</strong></p>
<ul>
<li>Maintains referential integrity for import tracking</li>
<li>Cascade delete removes vulnerabilities when import is deleted</li>
</ul>
</li>
<li><p><strong>ticket_vulnerabilities.ticket_id → tickets.id</strong>  </p>
<ul>
<li>Links vulnerabilities to tickets</li>
<li>Cascade delete removes relationships when ticket is deleted</li>
</ul>
</li>
</ol>
<h2>Data Flow</h2>
<h3>Import Process</h3>
<ol>
<li>CSV files uploaded to <code>uploads/</code> directory</li>
<li>Import metadata recorded in <code>vulnerability_imports</code></li>
<li>Individual records parsed and stored in <code>vulnerabilities</code></li>
<li>UPSERT operations prevent duplicates based on hostname+CVE+import</li>
</ol>
<h3>Ticket Workflow</h3>
<ol>
<li>New tickets created in <code>tickets</code> table</li>
<li>Vulnerabilities linked via <code>ticket_vulnerabilities</code> junction</li>
<li>Status updates tracked with timestamps</li>
<li>Device information stored as JSON arrays</li>
</ol>
<h3>Query Patterns</h3>
<p><strong>Common Queries:</strong></p>
<ul>
<li>Vulnerabilities by severity: <code>SELECT * FROM vulnerabilities WHERE severity = &#39;Critical&#39;</code></li>
<li>Tickets by status: <code>SELECT * FROM tickets WHERE status = &#39;Open&#39;</code></li>
<li>Import history: <code>SELECT * FROM vulnerability_imports ORDER BY import_date DESC</code></li>
<li>Ticket relationships: Join through <code>ticket_vulnerabilities</code> junction table</li>
</ul>
<p><strong>Performance Optimizations:</strong></p>
<ul>
<li>Indexed columns for frequent WHERE clauses</li>
<li>JSON storage for flexible device arrays</li>
<li>Time-series approach for historical tracking</li>
<li>Normalized structure reduces data redundancy</li>
</ul>
<h2>Schema Evolution</h2>
<p>The database schema supports:</p>
<ul>
<li><strong>Backward compatibility</strong> - New columns added with defaults</li>
<li><strong>Migration scripts</strong> - Schema updates through versioned migrations  </li>
<li><strong>Data integrity</strong> - Foreign key constraints and validation</li>
<li><strong>Performance</strong> - Strategic indexing for common access patterns</li>
</ul>
<p>This architecture enables efficient vulnerability tracking while maintaining flexibility for ticket management workflows.</p>

    </div>
</body>
</html>
