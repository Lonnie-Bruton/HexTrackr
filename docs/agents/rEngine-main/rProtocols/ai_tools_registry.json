{
  "ai_tools_registry": {
    "version": "2.0.0",
    "last_updated": "2025-08-20T17:07:15.482Z",
    "status": "ACTIVE",
    "mcp_integration": {
      "status": "ACTIVE",
      "server_file": "rEngine/index.js",
      "interface": "VS Code Chat MCP",
      "workspace_settings": ".vscode/settings.json",
      "last_verified": "2025-08-20T17:07:15.482Z"
    },
    "critical_tools": {
      "analyze_with_ai": {
        "status": "OFFLINE",
        "priority": "P0",
        "function": "5-tier AI analysis with intelligent fallback",
        "providers": [
          "Groq",
          "Claude",
          "OpenAI",
          "Gemini",
          "Ollama"
        ],
        "auto_recording": true,
        "input_schema": {
          "content": "string (required)",
          "operation": "string (default: general_analysis)"
        },
        "use_cases": [
          "Code security/performance review",
          "Problem analysis and solution generation",
          "Content evaluation and optimization"
        ],
        "dependencies": [
          "All 5 AI providers",
          "memory system"
        ]
      },
      "rapid_context_search": {
        "status": "OFFLINE",
        "priority": "P0",
        "function": "Ollama-powered instant codebase search",
        "provider": "Ollama",
        "performance": "1-2 transaction resolution",
        "input_schema": {
          "query": "string (required)",
          "maxResults": "number (default: 5)"
        },
        "use_cases": [
          "Function/file location",
          "Code pattern discovery",
          "Problem description to code mapping"
        ],
        "dependencies": [
          "Ollama",
          "pre-built search matrix"
        ]
      },
      "get_instant_code_target": {
        "status": "OFFLINE",
        "priority": "P0",
        "function": "Precise file/function targeting for development tasks",
        "provider": "Ollama",
        "performance": "1-2 transaction targeting",
        "input_schema": {
          "task_description": "string (required)",
          "code_type": "string (default: any)"
        },
        "use_cases": [
          "Development task routing",
          "Code modification targeting",
          "Architecture navigation"
        ],
        "dependencies": [
          "Ollama",
          "project context matrix"
        ]
      },
      "ingest_full_project": {
        "status": "OFFLINE",
        "priority": "P0",
        "function": "Comprehensive project analysis with token efficiency",
        "provider": "Ollama",
        "performance": "Complete project understanding",
        "input_schema": {
          "query": "string (required)",
          "analysis_depth": "enum[quick|detailed|comprehensive] (default: detailed)"
        },
        "use_cases": [
          "Project onboarding",
          "Architecture review",
          "Comprehensive debugging"
        ],
        "dependencies": [
          "Ollama",
          "project ingestion system"
        ]
      }
    },
    "support_tools": {
      "get_agents_memory": {
        "status": "OFFLINE",
        "priority": "P1",
        "function": "Retrieve information from agents memory system",
        "provider": "rEngine memory system",
        "auto_recording": true,
        "input_schema": {
          "query": "string (optional)",
          "limit": "number (default: 5)"
        },
        "dependencies": [
          "Agent memory system",
          "MCP fallback"
        ]
      },
      "get_continuation_context": {
        "status": "OFFLINE",
        "priority": "P1",
        "function": "Intelligent context for conversation continuation",
        "provider": "Memory analysis system",
        "performance": "Instant context bridging",
        "input_schema": {
          "include_recent_work": "boolean (default: true)"
        },
        "dependencies": [
          "Memory system",
          "work tracking"
        ]
      },
      "vscode_system_status": {
        "status": "UNKNOWN",
        "priority": "P1",
        "function": "VS Code MCP integration status monitoring",
        "provider": "System diagnostics",
        "real_time": true,
        "input_schema": {},
        "dependencies": [
          "VS Code MCP",
          "all AI providers"
        ]
      }
    },
    "provider_chain": {
      "tier_1": {
        "name": "Groq",
        "use_case": "Fast responses",
        "status": "UNKNOWN"
      },
      "tier_2": {
        "name": "Claude",
        "use_case": "Intelligent analysis",
        "status": "UNKNOWN"
      },
      "tier_3": {
        "name": "OpenAI",
        "use_case": "Balanced performance",
        "status": "UNKNOWN"
      },
      "tier_4": {
        "name": "Gemini",
        "use_case": "Multimodal capabilities",
        "status": "UNKNOWN"
      },
      "tier_5": {
        "name": "Ollama",
        "use_case": "Local/privacy operations",
        "status": "UNKNOWN"
      }
    },
    "restoration_requirements": {
      "immediate": [
        "Rebuild VS Code MCP connection",
        "Verify rEngine/index.js MCP server functionality",
        "Test all 4 critical tools accessibility",
        "Confirm 5-tier AI provider chain"
      ],
      "validation": [
        "Performance testing: rapid_context_search < 2s",
        "Targeting testing: get_instant_code_target 1-2 transactions",
        "Analysis testing: analyze_with_ai < 10s complex analysis",
        "Memory recording: 100% operation capture"
      ],
      "monitoring": [
        "Tool availability dashboard",
        "Provider fallback testing",
        "Performance metrics collection",
        "Error rate tracking"
      ]
    },
    "related_files": {
      "mcp_server": "rEngine/index.js",
      "protocol_docs": "rProtocols/ai_tools_registry_protocol.md",
      "architecture_docs": "rAgents/reports/rEngineMCP-Architecture-Whitepaper-2025-08-17.md",
      "debug_reports": "rAgents/reports/mcp-tool-access-debug-2025-08-17.md"
    },
    "metadata": {
      "total_critical_tools": 4,
      "total_support_tools": 3,
      "total_providers": 5,
      "restoration_priority": "P0 - Blocking all advanced AI workflows",
      "impact": "CRITICAL - Core 5-layer AI infrastructure offline"
    },
    "auto_generated_update": true,
    "protocol_integration": {
      "protocols_index": "rProtocols/protocols.json",
      "auto_detection": true,
      "validation_enabled": true
    }
  }
}
