{
  "metadata": {
    "agent_name": "Gemini Pro",
    "agent_type": "Direct API Access",
    "technical_base": "Gemini Pro",
    "created": "2025-08-16",
    "last_updated": "2025-08-16 11:47",
    "session_count": 0,
    "total_tasks_completed": 0,
    "has_critical_requirements": true,
    "copilot_instructions_compliant": true
  },
  "shared_memory_index": {
    "agents": {
      "file": "rMemory/rAgentMemories/agents.json",
      "purpose": "Agent definitions and capabilities",
      "last_checked": "2025-08-16 11:47",
      "path_updated": "2025-08-18T00:31:11.946Z"
    },
    "tasks": {
      "file": "rMemory/rAgentMemories/tasks.json",
      "purpose": "Active tasks and project status",
      "last_checked": "2025-08-16 11:47",
      "path_updated": "2025-08-18T00:31:11.946Z"
    },
    "decisions": {
      "file": "rMemory/rAgentMemories/decisions.json",
      "purpose": "Architectural and design decisions",
      "last_checked": "2025-08-16 11:47",
      "path_updated": "2025-08-18T00:31:11.946Z"
    },
    "functions": {
      "file": "rMemory/rAgentMemories/functions.json",
      "purpose": "Function definitions and ownership",
      "last_checked": "2025-08-16 11:47",
      "path_updated": "2025-08-18T00:31:11.946Z"
    },
    "errors": {
      "file": "rMemory/rAgentMemories/errors.json",
      "purpose": "Known errors and solutions",
      "last_checked": "2025-08-16 11:47",
      "path_updated": "2025-08-18T00:31:11.946Z"
    },
    "memory": {
      "file": "rMemory/rAgentMemories/memory.json",
      "purpose": "Shared project memory",
      "last_checked": "2025-08-16 11:47",
      "path_updated": "2025-08-18T00:31:11.946Z"
    },
    "preferences": {
      "file": "rMemory/rAgentMemories/preferences.json",
      "purpose": "Project preferences and settings",
      "last_checked": "2025-08-16 11:47",
      "path_updated": "2025-08-18T00:31:11.946Z"
    },
    "styles": {
      "file": "rMemory/rAgentMemories/styles.json",
      "purpose": "Visual style definitions",
      "last_checked": "2025-08-16 11:47",
      "path_updated": "2025-08-18T00:31:11.946Z"
    }
  },
  "personal_insights": {
    "coding_patterns": [],
    "optimization_discoveries": [],
    "debugging_strategies": [],
    "performance_observations": []
  },
  "task_preferences": {
    "preferred_approaches": [],
    "avoided_patterns": [],
    "efficiency_notes": []
  },
  "learned_solutions": {
    "recurring_issues": [],
    "effective_fixes": [],
    "context_specific_solutions": []
  },
  "session_notes": {
    "current_session": "",
    "previous_sessions": []
  },
  "critical_requirements": {
    "mandatory_startup_protocols": {
      "gpt_agents": {
        "command": "node gpt-mandatory-startup.js",
        "location": "/Volumes/DATA/GitHub/rEngine/rEngine",
        "description": "MANDATORY for GPT agents - handles git backup, memory protocols, session logging, MCP integration",
        "failure_consequence": "BROKEN HANDOFFS & LOST WORK"
      },
      "all_agents": {
        "step_1": "Check COPILOT_INSTRUCTIONS.md",
        "step_2": "Check AGENT.md",
        "step_3": "Follow rAgents/unified-workflow.md",
        "step_4": "Memory recall and status check"
      }
    },
    "memory_system_paths": {
      "tasks": "rMemory/rAgentMemories/tasks.json",
      "agents": "rMemory/rAgentMemories/agents.json",
      "decisions": "rMemory/rAgentMemories/decisions.json",
      "functions": "rMemory/rAgentMemories/functions.json",
      "errors": "rMemory/rAgentMemories/errors.json",
      "memory": "rMemory/rAgentMemories/memory.json",
      "preferences": "rMemory/rAgentMemories/preferences.json",
      "styles": "rMemory/rAgentMemories/styles.json",
      "patterns": "rMemory/rAgentMemories/patterns.json"
    },
    "protocol_enforcement": {
      "before_work": [
        "Git checkpoint: git add -A && git commit -m 'Checkpoint before [task]'",
        "Protocol check: node rEngine/protocol-enforcer.js file_modification",
        "Check tasks: Read rMemory/rAgentMemories/tasks.json",
        "Memory check: Review agent memory and shared context"
      ],
      "during_work": [
        "Follow rAgents/unified-workflow.md protocols",
        "Update memory files with discoveries",
        "Sync to MCP using agent memory system",
        "Document changes in appropriate JSON files",
        "Never write outside StackTrackr directory"
      ],
      "after_completion": [
        "Final commit with complete description",
        "Update documentation (decisions, functions, memory)",
        "Update agent memory with lessons learned",
        "Run protocol compliance check"
      ]
    },
    "mcp_integration": {
      "server_check": "ALWAYS verify Smart Scribe MCP server is running first",
      "critical_learning": "MCP server not running causes silent failures in memory sync",
      "startup_command": "./start-smart-scribe.sh",
      "health_check": "ps aux | grep smart-scribe"
    },
    "scribe_console": {
      "command": "node scribe-console.js",
      "location": "/Volumes/DATA/GitHub/rEngine/rEngine",
      "features": [
        "Status bar",
        "Pink verbose logs",
        "Memory statistics",
        "Auto-refresh"
      ],
      "purpose": "Real-time monitoring of system health and activity"
    }
  },
  "compliance_version": "COPILOT_INSTRUCTIONS_v1.0",
  "last_requirements_update": "2025-08-18T00:31:29.224Z"
}