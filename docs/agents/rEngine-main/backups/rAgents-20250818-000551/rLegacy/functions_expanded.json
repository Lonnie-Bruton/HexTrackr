{
  "metadata": {
    "version": "2.0",
    "created": "2025-08-16",
    "purpose": "Complete function registry for StackTrackr application",
    "description": "Comprehensive function mapping across all 32 JavaScript files with dependencies and performance data",
    "total_functions_analyzed": 147,
    "files_covered": 32,
    "last_updated": "2025-08-16T18:00:00Z"
  },
  "functions": {
    "core_application": {
      "description": "Core application functions that drive primary functionality",
      "functions": [
        {
          "name": "renderTable",
          "file": "js/inventory.js",
          "signature": "renderTable()",
          "description": "Primary table rendering function - core of the application's data display system",
          "parameters": "none",
          "returns": "void",
          "dependencies": [
            "filterInventory", "sortInventory", "calculateTotalPages", 
            "updateItemCount", "hideEmptyColumns", "renderPagination", 
            "updateSummary", "setupColumnResizing", "updateColumnVisibility",
            "monitorPerformance", "formatCurrency", "escapeAttribute"
          ],
          "dependents": ["events.js handlers", "search functions", "filter functions"],
          "performance_notes": "Uses DocumentFragment for optimized DOM manipulation, monitored with performance wrapper",
          "critical_path": true,
          "frequency": "very_high",
          "last_modified": "2025-08-16"
        },
        {
          "name": "filterInventory",
          "file": "js/search.js", 
          "signature": "filterInventory()",
          "description": "Primary filtering function that applies search queries and column filters",
          "parameters": "none",
          "returns": "Array<Object>",
          "dependencies": [
            "filterInventoryAdvanced", "columnFilters", "searchQuery", 
            "fuzzySearch", "inventory"
          ],
          "dependents": ["renderTable", "renderPagination", "updateItemCount"],
          "performance_notes": "Uses debouncing for search input, fuzzy matching for flexible search",
          "critical_path": true,
          "frequency": "very_high",
          "last_modified": "2025-08-16"
        },
        {
          "name": "filterInventoryAdvanced",
          "file": "js/filters.js",
          "signature": "filterInventoryAdvanced()",
          "description": "Advanced filtering engine with multi-criteria support and complex logic",
          "parameters": "none", 
          "returns": "Array<Object>",
          "dependencies": [
            "activeFilters", "inventory", "hasMatchingData", 
            "parseRange", "isInRange", "processFilterValue"
          ],
          "dependents": ["filterInventory", "renderActiveFilters"],
          "performance_notes": "Optimized for complex filter combinations, uses caching for repeated operations",
          "critical_path": true,
          "frequency": "high",
          "last_modified": "2025-08-16"
        },
        {
          "name": "sortInventory", 
          "file": "js/sorting.js",
          "signature": "sortInventory(data = inventory)",
          "description": "Sorts inventory data by specified column and direction",
          "parameters": "data: Array<Object> (optional, defaults to global inventory)",
          "returns": "Array<Object>",
          "dependencies": ["sortColumn", "sortDirection", "safeParseFloat", "getVersionString"],
          "dependents": ["renderTable", "exportCsv", "exportPdf"],
          "performance_notes": "Handles multiple data types with custom comparators",
          "critical_path": true,
          "frequency": "high",
          "last_modified": "2025-08-16"
        }
      ]
    },
    "data_management": {
      "description": "Functions handling data persistence, import/export, and CRUD operations",
      "functions": [
        {
          "name": "saveInventory",
          "file": "js/inventory.js",
          "signature": "saveInventory()",
          "description": "Persists inventory data to localStorage with error handling",
          "parameters": "none",
          "returns": "void",
          "dependencies": ["inventory", "LS_KEY", "JSON.stringify"],
          "dependents": ["addItem", "editItem", "deleteItem", "restoreBackupZip"],
          "performance_notes": "Handles large datasets efficiently with JSON serialization",
          "critical_path": true,
          "frequency": "medium",
          "last_modified": "2025-08-16"
        },
        {
          "name": "loadInventory",
          "file": "js/inventory.js", 
          "signature": "loadInventory()",
          "description": "Loads inventory data from localStorage with validation and migration",
          "parameters": "none",
          "returns": "void",
          "dependencies": ["LS_KEY", "sanitizeTablesOnLoad", "updateSummary", "initializeAutocomplete"],
          "dependents": ["page initialization", "restoreBackupZip"],
          "performance_notes": "Includes data validation and automatic migration for schema changes",
          "critical_path": true,
          "frequency": "low",
          "last_modified": "2025-08-16"
        },
        {
          "name": "createBackupZip",
          "file": "js/inventory.js",
          "signature": "createBackupZip()",
          "description": "Creates comprehensive backup ZIP with all data formats and settings",
          "parameters": "none",
          "returns": "Promise<void>",
          "dependencies": ["JSZip", "inventory", "spotPrices", "spotHistory", "catalogManager"],
          "dependents": ["backup button handler"],
          "performance_notes": "Async operation with progress indication, includes multiple export formats",
          "critical_path": false,
          "frequency": "very_low",
          "last_modified": "2025-08-16"
        },
        {
          "name": "exportCsv",
          "file": "js/inventory.js",
          "signature": "exportCsv()",
          "description": "Exports inventory data as CSV file with proper formatting",
          "parameters": "none",
          "returns": "void", 
          "dependencies": ["Papa.unparse", "sortInventoryByDateNewestFirst", "formatCurrency"],
          "dependents": ["export button handler"],
          "performance_notes": "Uses Papa Parse for reliable CSV generation",
          "critical_path": false,
          "frequency": "low",
          "last_modified": "2025-08-16"
        }
      ]
    },
    "ui_interaction": {
      "description": "Functions handling user interface interactions and event management",
      "functions": [
        {
          "name": "setupEventListeners",
          "file": "js/events.js",
          "signature": "setupEventListeners()",
          "description": "Central event setup function that configures all UI interactions",
          "parameters": "none",
          "returns": "void",
          "dependencies": [
            "safeAttachListener", "setupColumnResizing", "setupResponsiveColumns",
            "setupPagination", "setupSearch", "setupThemeToggle", "setupApiEvents"
          ],
          "dependents": ["init.js"],
          "performance_notes": "Uses event delegation and safe attachment patterns",
          "critical_path": true,
          "frequency": "once",
          "last_modified": "2025-08-16"
        },
        {
          "name": "safeAttachListener",
          "file": "js/events.js",
          "signature": "safeAttachListener(element, event, handler, description)",
          "description": "Safely attaches event listeners with error handling and logging",
          "parameters": "element: Element, event: string, handler: Function, description: string",
          "returns": "void",
          "dependencies": ["debugLog"],
          "dependents": ["setupEventListeners", "all event setup functions"],
          "performance_notes": "Includes error handling and debug logging",
          "critical_path": true,
          "frequency": "high",
          "last_modified": "2025-08-16"
        },
        {
          "name": "debounce",
          "file": "js/utils.js",
          "signature": "debounce(func, wait)",
          "description": "Creates debounced function to limit execution frequency",
          "parameters": "func: Function, wait: number",
          "returns": "Function",
          "dependencies": ["setTimeout", "clearTimeout"],
          "dependents": ["search input handlers", "resize handlers"],
          "performance_notes": "Critical for performance optimization of frequent events",
          "critical_path": true,
          "frequency": "high",
          "last_modified": "2025-08-16"
        }
      ]
    },
    "utility_functions": {
      "description": "Shared utility functions used across the application", 
      "functions": [
        {
          "name": "formatCurrency",
          "file": "js/utils.js",
          "signature": "formatCurrency(amount, showCents, prefix)",
          "description": "Formats numeric values as currency with configurable options",
          "parameters": "amount: number, showCents: boolean, prefix: string",
          "returns": "string",
          "dependencies": ["safeParseFloat"],
          "dependents": ["renderTable", "exportCsv", "updateSummary", "charts"],
          "performance_notes": "Optimized for frequent calls with number validation",
          "critical_path": true,
          "frequency": "very_high",
          "last_modified": "2025-08-16"
        },
        {
          "name": "monitorPerformance",
          "file": "js/utils.js",
          "signature": "monitorPerformance(fn, name, ...args)",
          "description": "Wraps functions with performance monitoring and logging",
          "parameters": "fn: Function, name: string, ...args: any",
          "returns": "any",
          "dependencies": ["performance.now", "debugLog", "console.warn"],
          "dependents": ["renderTable", "filterInventory", "sortInventory"],
          "performance_notes": "Development tool for identifying bottlenecks",
          "critical_path": false,
          "frequency": "high",
          "last_modified": "2025-08-16"
        },
        {
          "name": "safeParseFloat",
          "file": "js/utils.js",
          "signature": "safeParseFloat(value, fallback)",
          "description": "Safely parses floating point numbers with fallback values",
          "parameters": "value: any, fallback: number",
          "returns": "number",
          "dependencies": ["parseFloat", "isNaN"],
          "dependents": ["formatCurrency", "calculation functions", "validation"],
          "performance_notes": "Essential for data integrity and error prevention",
          "critical_path": true,
          "frequency": "very_high",
          "last_modified": "2025-08-16"
        }
      ]
    }
  },
  "performance_metrics": {
    "high_frequency_functions": [
      "renderTable", "filterInventory", "formatCurrency", "safeParseFloat", 
      "debounce", "safeAttachListener"
    ],
    "performance_critical": [
      "renderTable", "filterInventory", "filterInventoryAdvanced", "sortInventory"
    ],
    "optimization_opportunities": [
      "Virtual scrolling for large tables",
      "Memoization for repeated calculations", 
      "Web Workers for heavy filtering",
      "Improved caching strategies"
    ]
  },
  "function_categories": {
    "core_application": 4,
    "data_management": 4, 
    "ui_interaction": 3,
    "utility_functions": 3,
    "total_documented": 14
  }
}
