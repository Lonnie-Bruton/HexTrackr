{
  "function:addContextEntry": {
    "category": "code_functions",
    "keyword": "addContextEntry",
    "files": [
      "rEngine/add-context.js"
    ],
    "functions": [
      "addContextEntry"
    ],
    "description": "Function addContextEntry in add-context.js",
    "context_weight": 0.9,
    "line_number": 23,
    "body_preview": "async function addContextEntry(title, description, entryType = 'general') { try { console.log(`${colors.blue}Submitting to MCP Memory Server...${colors.reset}`);",
    "context_clues": [
      "add",
      "context",
      "entry",
      "addcontextentry",
      "reset",
      "addmemory",
      "process"
    ],
    "last_updated": "2025-08-20T17:24:08.514Z"
  },
  "context:add": {
    "category": "context_clues",
    "keyword": "add",
    "files": [
      "rEngine/add-context.js",
      "rEngine/mcp-client.js",
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "rAgents/rScripts/dynamic_memory.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "addContextEntry",
      "interactiveMode",
      "main",
      "prompt",
      "addMemory",
      "updateHTMLFile",
      "addMapping",
      "updateThemeButton",
      "showNotes",
      "exportPdf",
      "addCompositionOption",
      "generateStorageReportTar",
      "saveResultsToHistory",
      "_add_to_sync_config",
      "commit_and_push",
      "find_changes",
      "saveEnvFile"
    ],
    "description": "Code related to add",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.265Z"
  },
  "context:context": {
    "category": "context_clues",
    "keyword": "context",
    "files": [
      "rEngine/add-context.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "addContextEntry",
      "interactiveMode",
      "main",
      "prompt",
      "handleError",
      "initSQLite",
      "autoLoadContext",
      "displayContextSummary",
      "smartHandoff"
    ],
    "description": "Code related to context",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:entry": {
    "category": "context_clues",
    "keyword": "entry",
    "files": [
      "rEngine/add-context.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/spot.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "addContextEntry",
      "toggleChange",
      "recordSpot",
      "updateSpotCardColor",
      "_create_type_specific_entry"
    ],
    "description": "Code related to entry",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:addcontextentry": {
    "category": "context_clues",
    "keyword": "addcontextentry",
    "files": [
      "rEngine/add-context.js"
    ],
    "functions": [
      "addContextEntry",
      "main",
      "prompt"
    ],
    "description": "Code related to addcontextentry",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.515Z"
  },
  "context:reset": {
    "category": "context_clues",
    "keyword": "reset",
    "files": [
      "rEngine/add-context.js",
      "rEngine/agent-menu.js",
      "rEngine/demo-document-sweep-colors.js",
      "rEngine/quick-agent-setup.js",
      "rEngine/universal-agent-init.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/spot.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "addContextEntry",
      "interactiveMode",
      "main",
      "prompt",
      "handleMenuChoice",
      "simulateDocumentSweepDisplay",
      "quickAgentSetup",
      "ask",
      "resetSpotPrice",
      "setupSearch",
      "resetSpot",
      "resetSpotByName",
      "callLLM",
      "showProviders",
      "showHelp",
      "showStatus",
      "configureProvider",
      "checkHasApiKey",
      "runWizard",
      "testAllProviders",
      "loadSearchMatrix",
      "showStats",
      "autoLoadContext",
      "displayContextSummary",
      "smartHandoff",
      "quickSetup",
      "analyzePainPoints"
    ],
    "description": "Code related to reset",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.730Z"
  },
  "context:addmemory": {
    "category": "context_clues",
    "keyword": "addmemory",
    "files": [
      "rEngine/add-context.js",
      "rEngine/mcp-client.js"
    ],
    "functions": [
      "addContextEntry",
      "addMemory"
    ],
    "description": "Code related to addmemory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.858Z"
  },
  "context:process": {
    "category": "context_clues",
    "keyword": "process",
    "files": [
      "rEngine/add-context.js",
      "rEngine/agent-behavior-wrapper.js",
      "rEngine/document-sweep.js",
      "rEngine/gemini-html-converter.js",
      "rEngine/html-doc-generator.js",
      "rEngine/memory-intelligence.js",
      "rEngine/memory-sync-manager.js",
      "rEngine/publish-docs.js",
      "rEngine/rengine-client.js",
      "rEngine/test-simple.js",
      "rEngine/test-smart-hello.js",
      "rEngine/universal-agent-init.js",
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rAgents/rLegacy/version-manager.js",
      "rAgents/version-manager.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "addContextEntry",
      "interactiveMode",
      "main",
      "agentCleanup",
      "dryRun",
      "syncProcess",
      "testGroq",
      "testGemini",
      "testSmartHello",
      "ask",
      "getVersionString",
      "getTemplateVariables",
      "processVPRData",
      "callGemini",
      "callClaude",
      "callOpenAI",
      "callGroq",
      "showProviders",
      "parseArgs",
      "handleMCPMode",
      "createReadline",
      "promptHidden",
      "prompt",
      "testApiKey",
      "onData",
      "checkDependencies"
    ],
    "description": "Code related to process",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.417Z"
  },
  "file:add-context.js": {
    "category": "file_relationships",
    "keyword": "add-context.js",
    "primary_file": "rEngine/add-context.js",
    "functions": [
      "addContextEntry",
      "interactiveMode",
      "main",
      "prompt"
    ],
    "description": "File containing addContextEntry and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.646Z"
  },
  "function:interactiveMode": {
    "category": "code_functions",
    "keyword": "interactiveMode",
    "files": [
      "rEngine/add-context.js"
    ],
    "functions": [
      "interactiveMode"
    ],
    "description": "Function interactiveMode in add-context.js",
    "context_weight": 0.9,
    "line_number": 34,
    "body_preview": "async function interactiveMode() { const rl = readline.createInterface({ input: process.stdin,",
    "context_clues": [
      "interactive",
      "mode",
      "readline",
      "createinterface",
      "process",
      "reset",
      "add",
      "context"
    ],
    "last_updated": "2025-08-20T17:24:08.515Z"
  },
  "context:interactive": {
    "category": "context_clues",
    "keyword": "interactive",
    "files": [
      "rEngine/add-context.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "interactiveMode",
      "runWizard"
    ],
    "description": "Code related to interactive",
    "context_weight": 0.9999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.648Z"
  },
  "context:mode": {
    "category": "context_clues",
    "keyword": "mode",
    "files": [
      "rEngine/add-context.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rEngine/call-llm.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "interactiveMode",
      "numistaGoBack",
      "numistaGoForward",
      "handleMCPMode"
    ],
    "description": "Code related to mode",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.652Z"
  },
  "context:readline": {
    "category": "context_clues",
    "keyword": "readline",
    "files": [
      "rEngine/add-context.js",
      "rEngine/universal-agent-init.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "interactiveMode",
      "ask",
      "createReadline"
    ],
    "description": "Code related to readline",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.266Z"
  },
  "context:createinterface": {
    "category": "context_clues",
    "keyword": "createinterface",
    "files": [
      "rEngine/add-context.js",
      "rEngine/universal-agent-init.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "interactiveMode",
      "ask",
      "createReadline"
    ],
    "description": "Code related to createinterface",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.266Z"
  },
  "function:main": {
    "category": "code_functions",
    "keyword": "main",
    "files": [
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "main"
    ],
    "description": "Main execution",
    "context_weight": 0.9,
    "line_number": 179,
    "body_preview": "async function main() { const appName = process.argv[2]; if (appName) {",
    "context_clues": [
      "main",
      "execution",
      "process",
      "sync",
      "app",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.417Z"
  },
  "context:main": {
    "category": "context_clues",
    "keyword": "main",
    "files": [
      "rEngine/add-context.js",
      "rEngine/gemini-html-converter.js",
      "rEngine/html-doc-generator.js",
      "rEngine/index.js",
      "rEngine/memory-intelligence.js",
      "rEngine/overnight-batch-processor.js",
      "rEngine/publish-docs.js",
      "rEngine/rengine-client.js",
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/events.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rEngine/validate_schema.py",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "rAgents/rLegacy/engine/validate_schema.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rLegacy/version-manager.js",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rScripts/deploy_agent_system.py",
      "rAgents/rScripts/performance_analysis.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rAgents/rTemplates/bootstrap_agent_system.py",
      "rAgents/version-manager.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/enhanced-memory-sync.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "main",
      "setupEventListeners",
      "callLLM"
    ],
    "description": "Code related to main",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.417Z"
  },
  "function:prompt": {
    "category": "code_functions",
    "keyword": "prompt",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "prompt"
    ],
    "description": " Prompt user with hidden input (for passwords/API keys) ",
    "context_weight": 0.9,
    "line_number": 90,
    "body_preview": "function promptHidden(query) { return new Promise((resolve) => { const rl = createReadline();",
    "context_clues": [
      "prompt",
      "user",
      "with",
      "hidden",
      "input",
      "passwordsapi",
      "keys",
      "createreadline",
      "process",
      "write",
      "setrawmode",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.644Z"
  },
  "context:prompt": {
    "category": "context_clues",
    "keyword": "prompt",
    "files": [
      "rEngine/add-context.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "prompt",
      "promptHidden"
    ],
    "description": "Code related to prompt",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.644Z"
  },
  "function:getAgentWrapper": {
    "category": "code_functions",
    "keyword": "getAgentWrapper",
    "files": [
      "rEngine/agent-behavior-wrapper.js"
    ],
    "functions": [
      "getAgentWrapper"
    ],
    "description": "Function getAgentWrapper in agent-behavior-wrapper.js",
    "context_weight": 0.9,
    "line_number": 86,
    "body_preview": "export function getAgentWrapper() { if (!globalWrapper) { globalWrapper = new AgentBehaviorWrapper();",
    "context_clues": [
      "get",
      "agent",
      "wrapper",
      "export",
      "getagentwrapper",
      "behavior"
    ],
    "last_updated": "2025-08-20T17:24:08.543Z"
  },
  "context:get": {
    "category": "context_clues",
    "keyword": "get",
    "files": [
      "rEngine/agent-behavior-wrapper.js",
      "rEngine/index.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/catalog-providers.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "getAgentWrapper",
      "callOllamaAPI",
      "getAvailableOllamaModels",
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "enhanceExistingSearch",
      "getCacheDurationMs",
      "getCachedLookupTable",
      "getLookupStats",
      "register",
      "get",
      "list",
      "getChartBackgroundColor",
      "getChartTextColor",
      "getVersionString",
      "getTemplateVariables",
      "getBreakdownData",
      "safeGetElement",
      "getNextSerial",
      "getColor",
      "getValue",
      "getChartColor",
      "getStorageItemDisplayName",
      "getContrastColor",
      "getBrandingName",
      "getAppTitle",
      "getFooterDomain",
      "getCompositionFirstWords",
      "getDisplayComposition",
      "getLastUpdateTime",
      "getUserFriendlyMessage",
      "getStorageItemDescription",
      "getStorageReportCSS",
      "getStorageReportJS",
      "getChangelogForVersion",
      "getEmbeddedChangelog",
      "storeCurrentResults",
      "getTrendIndicator",
      "autoCalculatePanels",
      "saveResultsToHistory",
      "getDockerPersistenceInstructions",
      "ensure_vault_directory",
      "get_last_sync_time",
      "get_available_tasks_from_json",
      "get_available_tasks_from_backup",
      "showHelp",
      "_get_connection",
      "_update_memory_item",
      "execute_operation",
      "checkHasApiKey",
      "getUserPreferences"
    ],
    "description": "Code related to get",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:agent": {
    "category": "context_clues",
    "keyword": "agent",
    "files": [
      "rEngine/agent-behavior-wrapper.js",
      "rEngine/agent-menu.js",
      "rEngine/quick-agent-setup.js",
      "rEngine/universal-agent-init.js",
      "rEngine/update-agent-requirements.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rScripts/deploy_agent_system.py",
      "rAgents/rTemplates/bootstrap_agent_system.py",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "getAgentWrapper",
      "wrapAgentTask",
      "agentStartup",
      "agentCleanup",
      "handleMenuChoice",
      "quickAgentSetup",
      "ask",
      "updateAgentMemory",
      "__init__",
      "main",
      "generateAgentRecommendations",
      "smartHandoff"
    ],
    "description": "Code related to agent",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "context:wrapper": {
    "category": "context_clues",
    "keyword": "wrapper",
    "files": [
      "rEngine/agent-behavior-wrapper.js"
    ],
    "functions": [
      "getAgentWrapper",
      "wrapAgentTask",
      "agentStartup",
      "agentCleanup"
    ],
    "description": "Code related to wrapper",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.543Z"
  },
  "context:export": {
    "category": "context_clues",
    "keyword": "export",
    "files": [
      "rEngine/agent-behavior-wrapper.js",
      "rEngine/mcp-client.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "getAgentWrapper",
      "wrapAgentTask",
      "agentStartup",
      "agentCleanup",
      "addMemory",
      "downloadCompleteBackup",
      "applyColumnFilter",
      "generateBackupHtml",
      "toggleGlobalPriceView",
      "importNumistaCsv",
      "exportNumistaCsv",
      "exportCsv",
      "exportJson",
      "exportPdf",
      "ensure_backup_dir",
      "export_mcp_memory_to_json"
    ],
    "description": "Code related to export",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.011Z"
  },
  "context:getagentwrapper": {
    "category": "context_clues",
    "keyword": "getagentwrapper",
    "files": [
      "rEngine/agent-behavior-wrapper.js"
    ],
    "functions": [
      "getAgentWrapper",
      "wrapAgentTask",
      "agentStartup"
    ],
    "description": "Code related to getagentwrapper",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.543Z"
  },
  "context:behavior": {
    "category": "context_clues",
    "keyword": "behavior",
    "files": [
      "rEngine/agent-behavior-wrapper.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "getAgentWrapper",
      "wrapAgentTask",
      "agentStartup",
      "agentCleanup",
      "formatPurchaseLocation",
      "getUserPreferences"
    ],
    "description": "Code related to behavior",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "file:agent-behavior-wrapper.js": {
    "category": "file_relationships",
    "keyword": "agent-behavior-wrapper.js",
    "primary_file": "rEngine/agent-behavior-wrapper.js",
    "functions": [
      "getAgentWrapper",
      "wrapAgentTask",
      "agentStartup",
      "agentCleanup"
    ],
    "description": "File containing getAgentWrapper and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.648Z"
  },
  "function:wrapAgentTask": {
    "category": "code_functions",
    "keyword": "wrapAgentTask",
    "files": [
      "rEngine/agent-behavior-wrapper.js"
    ],
    "functions": [
      "wrapAgentTask"
    ],
    "description": "Function wrapAgentTask in agent-behavior-wrapper.js",
    "context_weight": 0.9,
    "line_number": 93,
    "body_preview": "export function wrapAgentTask(taskDescription, fn, expectedFiles = []) { const wrapper = getAgentWrapper(); return wrapper.wrapFunction(taskDescription, fn, expectedFiles);",
    "context_clues": [
      "wrap",
      "agent",
      "task",
      "export",
      "getagentwrapper",
      "behavior",
      "wrapper"
    ],
    "last_updated": "2025-08-20T17:24:08.543Z"
  },
  "context:wrap": {
    "category": "context_clues",
    "keyword": "wrap",
    "files": [
      "rEngine/agent-behavior-wrapper.js"
    ],
    "functions": [
      "wrapAgentTask"
    ],
    "description": "Code related to wrap",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.543Z"
  },
  "context:task": {
    "category": "context_clues",
    "keyword": "task",
    "files": [
      "rEngine/agent-behavior-wrapper.js"
    ],
    "functions": [
      "wrapAgentTask"
    ],
    "description": "Code related to task",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.543Z"
  },
  "function:agentStartup": {
    "category": "code_functions",
    "keyword": "agentStartup",
    "files": [
      "rEngine/agent-behavior-wrapper.js"
    ],
    "functions": [
      "agentStartup"
    ],
    "description": "Function agentStartup in agent-behavior-wrapper.js",
    "context_weight": 0.9,
    "line_number": 98,
    "body_preview": "export async function agentStartup() { const wrapper = getAgentWrapper(); await wrapper.ensureInitialized();",
    "context_clues": [
      "agent",
      "startup",
      "export",
      "getagentwrapper",
      "behavior",
      "wrapper"
    ],
    "last_updated": "2025-08-20T17:24:08.543Z"
  },
  "context:startup": {
    "category": "context_clues",
    "keyword": "startup",
    "files": [
      "rEngine/agent-behavior-wrapper.js",
      "rEngine/index.js"
    ],
    "functions": [
      "agentStartup",
      "startVSCodeMCPServer"
    ],
    "description": "Code related to startup",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.827Z"
  },
  "function:agentCleanup": {
    "category": "code_functions",
    "keyword": "agentCleanup",
    "files": [
      "rEngine/agent-behavior-wrapper.js"
    ],
    "functions": [
      "agentCleanup"
    ],
    "description": "Function agentCleanup in agent-behavior-wrapper.js",
    "context_weight": 0.9,
    "line_number": 104,
    "body_preview": "export async function agentCleanup() { if (globalWrapper) { await globalWrapper.cleanup();",
    "context_clues": [
      "agent",
      "cleanup",
      "export",
      "process",
      "behavior",
      "wrapper"
    ],
    "last_updated": "2025-08-20T17:24:08.543Z"
  },
  "context:cleanup": {
    "category": "context_clues",
    "keyword": "cleanup",
    "files": [
      "rEngine/agent-behavior-wrapper.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "agentCleanup",
      "cleanupStorage",
      "cleanup_expired_leases",
      "cleanupDocumentationStructure",
      "createCorrectStructure",
      "moveFilesToCorrectLocations",
      "calculateCorrectPath",
      "moveFileWithBackup",
      "findFilesRecursively",
      "cleanupRecursiveDirectories",
      "findRecursiveDirectories",
      "verifyStructure",
      "countFiles"
    ],
    "description": "Code related to cleanup",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "function:handleMenuChoice": {
    "category": "code_functions",
    "keyword": "handleMenuChoice",
    "files": [
      "rEngine/agent-menu.js"
    ],
    "functions": [
      "handleMenuChoice"
    ],
    "description": "Function handleMenuChoice in agent-menu.js",
    "context_weight": 0.9,
    "line_number": 19,
    "body_preview": "async function handleMenuChoice(choice) { const workflow = new AgentHelloWorkflow(); console.log(`${colors.blue}🤖 Processing menu choice: ${choice}${colors.reset}\\n`);",
    "context_clues": [
      "handle",
      "menu",
      "choice",
      "handlemenuchoice",
      "processing",
      "reset",
      "initialize",
      "initializing",
      "initializememorysystem",
      "agent"
    ],
    "last_updated": "2025-08-20T17:24:08.568Z"
  },
  "context:handle": {
    "category": "context_clues",
    "keyword": "handle",
    "files": [
      "rEngine/agent-menu.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rEngine/call-llm.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "handleMenuChoice",
      "handleProviderSync",
      "setupColumnResizing",
      "sortInventoryByDateNewestFirst",
      "handleError",
      "handleBulkUpload",
      "handleMCPMode"
    ],
    "description": "Code related to handle",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "context:menu": {
    "category": "context_clues",
    "keyword": "menu",
    "files": [
      "rEngine/agent-menu.js"
    ],
    "functions": [
      "handleMenuChoice"
    ],
    "description": "Code related to menu",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.568Z"
  },
  "context:choice": {
    "category": "context_clues",
    "keyword": "choice",
    "files": [
      "rEngine/agent-menu.js"
    ],
    "functions": [
      "handleMenuChoice"
    ],
    "description": "Code related to choice",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.568Z"
  },
  "context:handlemenuchoice": {
    "category": "context_clues",
    "keyword": "handlemenuchoice",
    "files": [
      "rEngine/agent-menu.js"
    ],
    "functions": [
      "handleMenuChoice"
    ],
    "description": "Code related to handlemenuchoice",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.568Z"
  },
  "context:processing": {
    "category": "context_clues",
    "keyword": "processing",
    "files": [
      "rEngine/agent-menu.js",
      "rEngine/test-rate-limiter.js"
    ],
    "functions": [
      "handleMenuChoice",
      "chunkRequest"
    ],
    "description": "Code related to processing",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.223Z"
  },
  "context:initialize": {
    "category": "context_clues",
    "keyword": "initialize",
    "files": [
      "rEngine/agent-menu.js",
      "rEngine/publish-docs.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/rsynk-integration.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "handleMenuChoice",
      "main",
      "showApiProvidersModal",
      "refreshLookupTable",
      "initializeAutocomplete",
      "setupThemeToggle",
      "initializerSynk",
      "initializeStorageChart",
      "initDatabase",
      "initLocalStorage",
      "initSQLite",
      "initialize_snapshot",
      "__init__",
      "_initialize_database",
      "startServer"
    ],
    "description": "Code related to initialize",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.155Z"
  },
  "context:initializing": {
    "category": "context_clues",
    "keyword": "initializing",
    "files": [
      "rEngine/agent-menu.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "handleMenuChoice",
      "initializeAutocomplete",
      "main",
      "initialize_snapshot"
    ],
    "description": "Code related to initializing",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:initializememorysystem": {
    "category": "context_clues",
    "keyword": "initializememorysystem",
    "files": [
      "rEngine/agent-menu.js"
    ],
    "functions": [
      "handleMenuChoice"
    ],
    "description": "Code related to initializememorysystem",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.568Z"
  },
  "file:agent-menu.js": {
    "category": "file_relationships",
    "keyword": "agent-menu.js",
    "primary_file": "rEngine/agent-menu.js",
    "functions": [
      "handleMenuChoice"
    ],
    "description": "File containing handleMenuChoice and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.654Z"
  },
  "function:simulateDocumentSweepDisplay": {
    "category": "code_functions",
    "keyword": "simulateDocumentSweepDisplay",
    "files": [
      "rEngine/demo-document-sweep-colors.js"
    ],
    "functions": [
      "simulateDocumentSweepDisplay"
    ],
    "description": "Function simulateDocumentSweepDisplay in demo-document-sweep-colors.js",
    "context_weight": 0.9,
    "line_number": 17,
    "body_preview": "async function simulateDocumentSweepDisplay() { console.clear(); console.log(`${CYAN}📊 DOCUMENT SWEEP MONITORING DEMO${RESET}`);",
    "context_clues": [
      "simulate",
      "document",
      "sweep",
      "display",
      "clear",
      "reset",
      "starting",
      "demo",
      "colors"
    ],
    "last_updated": "2025-08-20T17:24:08.660Z"
  },
  "context:simulate": {
    "category": "context_clues",
    "keyword": "simulate",
    "files": [
      "rEngine/demo-document-sweep-colors.js",
      "rEngine/test-smart-hello.js"
    ],
    "functions": [
      "simulateDocumentSweepDisplay",
      "testSmartHello"
    ],
    "description": "Code related to simulate",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.249Z"
  },
  "context:document": {
    "category": "context_clues",
    "keyword": "document",
    "files": [
      "rEngine/demo-document-sweep-colors.js",
      "rEngine/document-sweep.js",
      "rEngine/enhanced-document-generator.js",
      "rEngine/smart-document-generator.js",
      "rEngine/test-document-sweep-logs.js",
      "rEngine/document-scribe.js"
    ],
    "functions": [
      "simulateDocumentSweepDisplay",
      "dryRun",
      "requestFn",
      "shutdown",
      "createTestLog",
      "scanDir"
    ],
    "description": "Code related to document",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.197Z"
  },
  "context:sweep": {
    "category": "context_clues",
    "keyword": "sweep",
    "files": [
      "rEngine/demo-document-sweep-colors.js",
      "rEngine/document-sweep.js",
      "rEngine/test-document-sweep-logs.js"
    ],
    "functions": [
      "simulateDocumentSweepDisplay",
      "dryRun",
      "createTestLog"
    ],
    "description": "Code related to sweep",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.197Z"
  },
  "context:display": {
    "category": "context_clues",
    "keyword": "display",
    "files": [
      "rEngine/demo-document-sweep-colors.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "simulateDocumentSweepDisplay",
      "displayAIInsights",
      "updateBatchCalculation",
      "refreshFromCache",
      "showApiModal",
      "createBreakdownElements",
      "simplifyChipValue",
      "formatPurchaseLocation",
      "formatStorageLocation",
      "persistInventoryAndRefresh",
      "togglePriceView",
      "getStorageItemDisplayName",
      "getFooterDomain",
      "getDisplayComposition",
      "formatDisplayDate",
      "sanitizeHtml",
      "checkVersionChange",
      "displayLatestResults",
      "displayContextSummary"
    ],
    "description": "Code related to display",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.828Z"
  },
  "context:clear": {
    "category": "context_clues",
    "keyword": "clear",
    "files": [
      "rEngine/demo-document-sweep-colors.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "simulateDocumentSweepDisplay",
      "clearApiConfig",
      "clearApiCache",
      "clearApiHistory",
      "clearApiKey",
      "hideManualInput",
      "clearLookupCache",
      "clearChangeLog",
      "clear",
      "list",
      "showDetailsModal",
      "setupColumnResizing",
      "clearAllFilters",
      "removeFilter",
      "closeNumistaModal",
      "closeModalById"
    ],
    "description": "Code related to clear",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:starting": {
    "category": "context_clues",
    "keyword": "starting",
    "files": [
      "rEngine/demo-document-sweep-colors.js",
      "rEngine/index.js"
    ],
    "functions": [
      "simulateDocumentSweepDisplay",
      "startVSCodeMCPServer"
    ],
    "description": "Code related to starting",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.827Z"
  },
  "context:demo": {
    "category": "context_clues",
    "keyword": "demo",
    "files": [
      "rEngine/demo-document-sweep-colors.js"
    ],
    "functions": [
      "simulateDocumentSweepDisplay"
    ],
    "description": "Code related to demo",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.660Z"
  },
  "context:colors": {
    "category": "context_clues",
    "keyword": "colors",
    "files": [
      "rEngine/demo-document-sweep-colors.js",
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "simulateDocumentSweepDisplay",
      "generateColors"
    ],
    "description": "Code related to colors",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "file:demo-document-sweep-colors.js": {
    "category": "file_relationships",
    "keyword": "demo-document-sweep-colors.js",
    "primary_file": "rEngine/demo-document-sweep-colors.js",
    "functions": [
      "simulateDocumentSweepDisplay"
    ],
    "description": "File containing simulateDocumentSweepDisplay and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.661Z"
  },
  "function:dryRun": {
    "category": "code_functions",
    "keyword": "dryRun",
    "files": [
      "rEngine/document-sweep.js"
    ],
    "functions": [
      "dryRun"
    ],
    "description": "Function dryRun in document-sweep.js",
    "context_weight": 0.9,
    "line_number": 564,
    "body_preview": "const isDryRun = process.argv.includes('--dry-run'); const isAutoSync = process.argv.includes('--auto-sync'); if (isDryRun) {",
    "context_clues": [
      "dry",
      "run",
      "process",
      "startautosync",
      "document",
      "sweep"
    ],
    "last_updated": "2025-08-20T17:24:08.689Z"
  },
  "context:dry": {
    "category": "context_clues",
    "keyword": "dry",
    "files": [
      "rEngine/document-sweep.js"
    ],
    "functions": [
      "dryRun"
    ],
    "description": "Code related to dry",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.689Z"
  },
  "context:run": {
    "category": "context_clues",
    "keyword": "run",
    "files": [
      "rEngine/document-sweep.js",
      "rEngine/quick-agent-setup.js",
      "rEngine/test-intelligence.js",
      "rEngine/test-simple.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rScripts/performance_analysis.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rEngine/configure-apis.js",
      "rEngine/enhanced-memory-sync.js",
      "rEngine/ragent-search-matrix.js",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "dryRun",
      "quickAgentSetup",
      "runTest",
      "runTests",
      "getDockerPersistenceInstructions",
      "commit_and_push",
      "cleanup_expired_leases",
      "main",
      "runWizard",
      "showHelp",
      "loadSearchMatrix",
      "countFiles"
    ],
    "description": "Code related to run",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:startautosync": {
    "category": "context_clues",
    "keyword": "startautosync",
    "files": [
      "rEngine/document-sweep.js"
    ],
    "functions": [
      "dryRun"
    ],
    "description": "Code related to startautosync",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.689Z"
  },
  "file:document-sweep.js": {
    "category": "file_relationships",
    "keyword": "document-sweep.js",
    "primary_file": "rEngine/document-sweep.js",
    "functions": [
      "dryRun"
    ],
    "description": "File containing dryRun and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.666Z"
  },
  "function:requestFn": {
    "category": "code_functions",
    "keyword": "requestFn",
    "files": [
      "rEngine/enhanced-document-generator.js"
    ],
    "functions": [
      "requestFn"
    ],
    "description": "Function requestFn in enhanced-document-generator.js",
    "context_weight": 0.9,
    "line_number": 71,
    "body_preview": "const requestFn = async () => { if (provider === 'gemini') { return this.makeGeminiRequest(content, providerConfig);",
    "context_clues": [
      "request",
      "enhanced",
      "document",
      "generator"
    ],
    "last_updated": "2025-08-20T17:24:08.725Z"
  },
  "context:request": {
    "category": "context_clues",
    "keyword": "request",
    "files": [
      "rEngine/enhanced-document-generator.js",
      "rEngine/fast-groq-rate-limiter.js",
      "rEngine/file-truncation-analysis.js",
      "rEngine/smart-document-generator.js",
      "rEngine/test-rate-limiter.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/catalog-api.js"
    ],
    "functions": [
      "requestFn",
      "request",
      "showNotes",
      "updateSummary",
      "importCsv",
      "mockRequest",
      "stressRequest",
      "chunkRequest",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi"
    ],
    "description": "Code related to request",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.402Z"
  },
  "context:enhanced": {
    "category": "context_clues",
    "keyword": "enhanced",
    "files": [
      "rEngine/enhanced-document-generator.js",
      "rEngine/index.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/enhanced-memory-sync.js"
    ],
    "functions": [
      "requestFn",
      "callGroqAPI",
      "enhancedAIAnalysis",
      "showAboutModal",
      "buildSearchIndices",
      "filterInventoryAdvanced",
      "validateFieldValue",
      "startCellEdit",
      "getStorageReportCSS",
      "getStorageReportJS",
      "main"
    ],
    "description": "Code related to enhanced",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:generator": {
    "category": "context_clues",
    "keyword": "generator",
    "files": [
      "rEngine/enhanced-document-generator.js",
      "rEngine/html-doc-generator.js",
      "rEngine/smart-document-generator.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "requestFn",
      "main",
      "shutdown",
      "generateSampleData",
      "generateHTMLReport",
      "generateLatestResults",
      "generateHistoryTable",
      "downloadHTMLReport"
    ],
    "description": "Code related to generator",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "file:enhanced-document-generator.js": {
    "category": "file_relationships",
    "keyword": "enhanced-document-generator.js",
    "primary_file": "rEngine/enhanced-document-generator.js",
    "functions": [
      "requestFn"
    ],
    "description": "File containing requestFn and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.694Z"
  },
  "function:request": {
    "category": "code_functions",
    "keyword": "request",
    "files": [
      "rProjects/StackTrackr/js/catalog-api.js"
    ],
    "functions": [
      "request"
    ],
    "description": "Function request in catalog-api.js",
    "context_weight": 0.9,
    "line_number": 302,
    "body_preview": "this.lastRequest = 0; this.requestCount = 0; this.requestWindow = 60000; // 1 minute window",
    "context_clues": [
      "request",
      "check",
      "catalog",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.402Z"
  },
  "context:createdat": {
    "category": "context_clues",
    "keyword": "createdat",
    "files": [
      "rEngine/fast-groq-rate-limiter.js"
    ],
    "functions": [
      "request"
    ],
    "description": "Code related to createdat",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.773Z"
  },
  "context:fast": {
    "category": "context_clues",
    "keyword": "fast",
    "files": [
      "rEngine/fast-groq-rate-limiter.js",
      "rEngine/recall.js"
    ],
    "functions": [
      "request",
      "fastRecall"
    ],
    "description": "Code related to fast",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.079Z"
  },
  "context:groq": {
    "category": "context_clues",
    "keyword": "groq",
    "files": [
      "rEngine/fast-groq-rate-limiter.js",
      "rEngine/index.js",
      "rEngine/test-direct-apis.js",
      "rEngine/test-simple.js",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "request",
      "callGroqAPI",
      "callGroqDirect",
      "testGroqDirect",
      "testGroq",
      "callGroq"
    ],
    "description": "Code related to groq",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.234Z"
  },
  "context:rate": {
    "category": "context_clues",
    "keyword": "rate",
    "files": [
      "rEngine/fast-groq-rate-limiter.js",
      "rEngine/smart-document-generator.js",
      "rEngine/test-rate-limiter.js"
    ],
    "functions": [
      "request",
      "requestFn",
      "mockRequest",
      "stressRequest",
      "chunkRequest"
    ],
    "description": "Code related to rate",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.223Z"
  },
  "context:limiter": {
    "category": "context_clues",
    "keyword": "limiter",
    "files": [
      "rEngine/fast-groq-rate-limiter.js",
      "rEngine/smart-document-generator.js",
      "rEngine/test-rate-limiter.js"
    ],
    "functions": [
      "request",
      "requestFn",
      "mockRequest",
      "stressRequest",
      "chunkRequest"
    ],
    "description": "Code related to limiter",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.223Z"
  },
  "file:fast-groq-rate-limiter.js": {
    "category": "file_relationships",
    "keyword": "fast-groq-rate-limiter.js",
    "primary_file": "rEngine/fast-groq-rate-limiter.js",
    "functions": [
      "request"
    ],
    "description": "File containing request and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.707Z"
  },
  "function:showNotes": {
    "category": "code_functions",
    "keyword": "showNotes",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "showNotes"
    ],
    "description": " Opens modal to view and edit an item's notes  @param {number} idx - Index of item whose notes to view/edit ",
    "context_weight": 0.9,
    "line_number": 1331,
    "body_preview": "const showNotes = (idx) => { notesIndex = idx; const item = inventory[idx];",
    "context_clues": [
      "show",
      "notes",
      "opens",
      "modal",
      "view",
      "edit",
      "items",
      "param",
      "number",
      "index",
      "item",
      "whose",
      "viewedit",
      "add",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:show": {
    "category": "context_clues",
    "keyword": "show",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/debugModal.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "showNotes",
      "showAboutModal",
      "showAckModal",
      "showFullChangelog",
      "showApiHistoryModal",
      "showApiProvidersModal",
      "syncSpotPricesFromApi",
      "showApiModal",
      "showFilesModal",
      "showProviderInfo",
      "showManualInput",
      "showDebugModal",
      "showDetailsModal",
      "showItemDetail",
      "showHelp",
      "showStats",
      "showEntityTypes",
      "showSuggestions",
      "showRelated",
      "showProviders",
      "showStatus"
    ],
    "description": "Code related to show",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:notes": {
    "category": "context_clues",
    "keyword": "notes",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "showNotes"
    ],
    "description": "Code related to notes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:critical": {
    "category": "context_clues",
    "keyword": "critical",
    "files": [
      "rEngine/file-truncation-analysis.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv"
    ],
    "description": "Code related to critical",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.787Z"
  },
  "context:file": {
    "category": "context_clues",
    "keyword": "file",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/file-protocol-fix.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/report-generator.js",
      "rAgents/rEngine/validate_schema.py",
      "rAgents/rLegacy/engine/validate_schema.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rEngine/configure-apis.js",
      "rEngine/recall.js",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/cleanup-docs-structure.js",
      "scripts/utilities/fix-documentation-links.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv",
      "updateHTMLFile",
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "safeDebug",
      "createBackupZip",
      "restoreBackupZip",
      "importNumistaCsv",
      "importJson",
      "openNumistaModal",
      "checkFileSize",
      "downloadFile",
      "generateStorageReportTar",
      "getEmbeddedChangelog",
      "handleBulkUpload",
      "parseCSVFile",
      "downloadHTMLReport",
      "validate_file",
      "backup_file",
      "loadEnvFile",
      "saveEnvFile",
      "checkMemoryFreshness",
      "cleanCombinedFile",
      "moveFileWithBackup",
      "fixFileLinks"
    ],
    "description": "Code related to file",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.401Z"
  },
  "context:analysis": {
    "category": "context_clues",
    "keyword": "analysis",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rEngine/index.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rScripts/performance_analysis.py"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv",
      "enhancedAIAnalysis",
      "displayAIInsights",
      "__init__",
      "main"
    ],
    "description": "Code related to analysis",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.287Z"
  },
  "context:stacktrackr": {
    "category": "context_clues",
    "keyword": "stacktrackr",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv",
      "enhanceExistingSearch",
      "normalizeString"
    ],
    "description": "Code related to stacktrackr",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:import": {
    "category": "context_clues",
    "keyword": "import",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rProjects/StackTrackr/js/inventory.js",
      "scripts/heygemini.js",
      "rEngine/configure-apis.js",
      "scripts/utilities/analyze_collect_buttons.js",
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv",
      "filterLink",
      "formatStorageLocation",
      "toggleGlobalPriceView",
      "startImportProgress",
      "updateImportProgress",
      "endImportProgress",
      "importNumistaCsv",
      "importJson",
      "askGemini",
      "testApiKey",
      "analyzeCollectButtons",
      "regenerateFormats"
    ],
    "description": "Code related to import",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.378Z"
  },
  "context:truncation": {
    "category": "context_clues",
    "keyword": "truncation",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv",
      "formatStorageLocation"
    ],
    "description": "Code related to truncation",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "context:gemini": {
    "category": "context_clues",
    "keyword": "gemini",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rEngine/gemini-html-converter.js",
      "rEngine/index.js",
      "rEngine/test-direct-apis.js",
      "rEngine/test-simple.js",
      "scripts/heygemini.js",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv",
      "main",
      "findInDir",
      "callGeminiAPI",
      "callGeminiDirect",
      "testGeminiDirect",
      "testGemini",
      "askGemini",
      "callGemini"
    ],
    "description": "Code related to gemini",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.234Z"
  },
  "context:please": {
    "category": "context_clues",
    "keyword": "please",
    "files": [
      "rEngine/file-truncation-analysis.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv"
    ],
    "description": "Code related to please",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.787Z"
  },
  "context:analyze": {
    "category": "context_clues",
    "keyword": "analyze",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/workflow-automation.js",
      "scripts/utilities/analyze_collect_buttons.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv",
      "analyzeStorageData",
      "analyzeStorageItem",
      "analyzePainPoints",
      "analyzeCollectButtons"
    ],
    "description": "Code related to analyze",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.366Z"
  },
  "context:this": {
    "category": "context_clues",
    "keyword": "this",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv",
      "createBackupZip",
      "loadInventory",
      "updateTypeSummary",
      "resetSpotByName"
    ],
    "description": "Code related to this",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.730Z"
  },
  "context:provide": {
    "category": "context_clues",
    "keyword": "provide",
    "files": [
      "rEngine/file-truncation-analysis.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv"
    ],
    "description": "Code related to provide",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.787Z"
  },
  "context:restoration": {
    "category": "context_clues",
    "keyword": "restoration",
    "files": [
      "rEngine/file-truncation-analysis.js"
    ],
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv"
    ],
    "description": "Code related to restoration",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.787Z"
  },
  "file:file-truncation-analysis.js": {
    "category": "file_relationships",
    "keyword": "file-truncation-analysis.js",
    "primary_file": "rEngine/file-truncation-analysis.js",
    "functions": [
      "showNotes",
      "updateSummary",
      "importCsv"
    ],
    "description": "File containing showNotes and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.713Z"
  },
  "function:updateSummary": {
    "category": "code_functions",
    "keyword": "updateSummary",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateSummary"
    ],
    "description": " Calculates and updates all financial summary displays across the application ",
    "context_weight": 0.9,
    "line_number": 1150,
    "body_preview": "const updateSummary = () => { /** * Calculates financial metrics for specified metal type",
    "context_clues": [
      "update",
      "summary",
      "calculates",
      "updates",
      "financial",
      "displays",
      "across",
      "application",
      "updatesummary",
      "calculate",
      "calculated",
      "calculatetotals",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:update": {
    "category": "context_clues",
    "keyword": "update",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rEngine/memory-sync-manager.js",
      "rEngine/update-agent-requirements.js",
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/encryption.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rScripts/dynamic_memory.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_tasks.py",
      "scripts/utilities/update-documentation-links.js"
    ],
    "functions": [
      "updateSummary",
      "syncProcess",
      "updateAgentMemory",
      "findHTMLFiles",
      "updateHTMLFile",
      "main",
      "acceptAck",
      "populateAboutModal",
      "displayAIInsights",
      "updateBatchCalculation",
      "updateProviderSettings",
      "updateProviderHistoryTables",
      "updateDefaultProviderButtons",
      "updateSyncButtonStates",
      "injectVersionString",
      "showDetailsModal",
      "isUnlocked",
      "updateColumnVisibility",
      "updateThemeButton",
      "updateEncryptionUI",
      "recalcItem",
      "updateItemCount",
      "updateTypeSummary",
      "toggleCollectable",
      "updateImportProgress",
      "updateNavButtons",
      "updateLastTimestamps",
      "updateSpotCardColor",
      "updateManualSpot",
      "getLastUpdateTime",
      "updateSpotTimestamp",
      "updateStorageStats",
      "updateHistoryCharts",
      "updateProgressBar",
      "_update_workflow_docs",
      "get_last_sync_time",
      "update_last_sync_time",
      "fetch_tasks_from_memory",
      "update_roadmap",
      "_update_memory_item",
      "cleanup_expired_leases",
      "updateDocumentationLinks"
    ],
    "description": "Code related to update",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.439Z"
  },
  "context:summary": {
    "category": "context_clues",
    "keyword": "summary",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "updateSummary",
      "renderApiStatusSummary",
      "generateCategorySummary",
      "updateTypeSummary",
      "displayContextSummary"
    ],
    "description": "Code related to summary",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "function:importCsv": {
    "category": "code_functions",
    "keyword": "importCsv",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "importCsv"
    ],
    "description": " Imports inventory data from CSV file with comprehensive validation and error handling  @param {File} file - CSV file selected by user through file input @param {boolean} [override=false] - Replace existing inventory instead of merging ",
    "context_weight": 0.9,
    "line_number": 1519,
    "body_preview": "const importCsv = (file, override = false) => { try { debugLog('importCsv start', file.name);",
    "context_clues": [
      "import",
      "csv",
      "imports",
      "inventory",
      "data",
      "from",
      "file",
      "with",
      "comprehensive",
      "validation",
      "error",
      "handling",
      "param",
      "selected",
      "user"
    ],
    "last_updated": "2025-08-20T17:24:09.638Z"
  },
  "context:csv": {
    "category": "context_clues",
    "keyword": "csv",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "importCsv",
      "importNumistaCsv",
      "exportNumistaCsv",
      "exportCsv"
    ],
    "description": "Code related to csv",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "context:guidance": {
    "category": "context_clues",
    "keyword": "guidance",
    "files": [
      "rEngine/file-truncation-analysis.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "importCsv",
      "checkHasApiKey"
    ],
    "description": "Code related to guidance",
    "context_weight": 0.9999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.787Z"
  },
  "context:execution": {
    "category": "context_clues",
    "keyword": "execution",
    "files": [
      "rEngine/gemini-html-converter.js",
      "rEngine/overnight-batch-processor.js",
      "rEngine/publish-docs.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/enhanced-memory-sync.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "main",
      "monitorPerformance"
    ],
    "description": "Code related to execution",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.417Z"
  },
  "context:converter": {
    "category": "context_clues",
    "keyword": "converter",
    "files": [
      "rEngine/gemini-html-converter.js",
      "rEngine/mcp-html-converter.js"
    ],
    "functions": [
      "main",
      "findInDir",
      "walk"
    ],
    "description": "Code related to converter",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.879Z"
  },
  "context:convert": {
    "category": "context_clues",
    "keyword": "convert",
    "files": [
      "rEngine/gemini-html-converter.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rScripts/mcp_json_sync.py"
    ],
    "functions": [
      "main",
      "cacheLookupTable",
      "getColor",
      "formatStorageLocation",
      "convertToUsd",
      "save_sync_metadata"
    ],
    "description": "Code related to convert",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "context:convertall": {
    "category": "context_clues",
    "keyword": "convertall",
    "files": [
      "rEngine/gemini-html-converter.js"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to convertall",
    "context_weight": 0.6,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T01:47:39.717Z"
  },
  "context:html": {
    "category": "context_clues",
    "keyword": "html",
    "files": [
      "rEngine/gemini-html-converter.js",
      "rEngine/html-doc-generator.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/modules/report-generator.js",
      "rEngine/mcp-html-converter.js"
    ],
    "functions": [
      "main",
      "findInDir",
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "generateBackupHtml",
      "escapeAttribute",
      "formatStorageLocation",
      "getLastUpdateTime",
      "formatLossProfit",
      "sanitizeHtml",
      "cleanString",
      "openStorageReportPopup",
      "generateStorageReportHTML",
      "createStorageItemModal",
      "getChangelogForVersion",
      "populateVersionModal",
      "getEmbeddedChangelog",
      "generateHTMLReport",
      "generateLatestResultsHTML",
      "generateHistoryTableHTML",
      "generateLatestResults",
      "generateHistoryTable",
      "downloadHTMLReport",
      "walk"
    ],
    "description": "Code related to html",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "file:gemini-html-converter.js": {
    "category": "file_relationships",
    "keyword": "gemini-html-converter.js",
    "primary_file": "rEngine/gemini-html-converter.js",
    "functions": [
      "main",
      "findInDir"
    ],
    "description": "File containing main and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.717Z"
  },
  "function:findInDir": {
    "category": "code_functions",
    "keyword": "findInDir",
    "files": [
      "rEngine/gemini-html-converter.js"
    ],
    "functions": [
      "findInDir"
    ],
    "description": "Function findInDir in gemini-html-converter.js",
    "context_weight": 0.9,
    "line_number": 353,
    "body_preview": "const findInDir = async (dir) => { const items = await fs.readdir(dir); for (const item of items) {",
    "context_clues": [
      "find",
      "dir",
      "findindir",
      "readdir",
      "gemini",
      "html",
      "converter"
    ],
    "last_updated": "2025-08-20T01:47:39.717Z"
  },
  "context:find": {
    "category": "context_clues",
    "keyword": "find",
    "files": [
      "rEngine/gemini-html-converter.js",
      "rEngine/publish-docs.js",
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "findInDir",
      "main",
      "findHTMLFiles",
      "resetSpotPrice",
      "getValue",
      "showItemDetail",
      "normalizeType",
      "updateProgressBar",
      "autoCalculatePanels",
      "processVPRData",
      "find_changes",
      "cleanCombinedDocumentation",
      "findCombinedFiles",
      "moveFilesToCorrectLocations",
      "findFilesRecursively",
      "cleanupRecursiveDirectories",
      "findRecursiveDirectories"
    ],
    "description": "Code related to find",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:dir": {
    "category": "context_clues",
    "keyword": "dir",
    "files": [
      "rEngine/gemini-html-converter.js",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rEngine/document-scribe.js",
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "findInDir",
      "ensure_backup_dir",
      "scanDir"
    ],
    "description": "Code related to dir",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.377Z"
  },
  "context:findindir": {
    "category": "context_clues",
    "keyword": "findindir",
    "files": [
      "rEngine/gemini-html-converter.js"
    ],
    "functions": [
      "findInDir"
    ],
    "description": "Code related to findindir",
    "context_weight": 0.6,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T01:47:39.717Z"
  },
  "context:readdir": {
    "category": "context_clues",
    "keyword": "readdir",
    "files": [
      "rEngine/gemini-html-converter.js",
      "rEngine/update-footer-branding.js",
      "rEngine/document-scribe.js",
      "rEngine/mcp-html-converter.js",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "findInDir",
      "findHTMLFiles",
      "scanDir",
      "walk",
      "findCombinedFiles",
      "findFilesRecursively",
      "cleanupRecursiveDirectories",
      "findRecursiveDirectories"
    ],
    "description": "Code related to readdir",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "function:testOpenWebUI": {
    "category": "code_functions",
    "keyword": "testOpenWebUI",
    "files": [
      "rEngine/heygemini.js"
    ],
    "functions": [
      "testOpenWebUI"
    ],
    "description": "Function testOpenWebUI in heygemini.js",
    "context_weight": 0.9,
    "line_number": 15,
    "body_preview": "async function testOpenWebUI(message) { try { console.log('🤖 Testing OpenWebUI connection...');",
    "context_clues": [
      "test",
      "open",
      "web",
      "openwebui",
      "connection",
      "openwebui_base_url",
      "heygemini"
    ],
    "last_updated": "2025-08-20T17:24:08.797Z"
  },
  "context:test": {
    "category": "context_clues",
    "keyword": "test",
    "files": [
      "rEngine/heygemini.js",
      "rEngine/test-ai-providers.js",
      "rEngine/test-direct-apis.js",
      "rEngine/test-document-sweep-logs.js",
      "rEngine/test-intelligence.js",
      "rEngine/test-rate-limiter.js",
      "rEngine/test-simple.js",
      "rEngine/test-smart-hello.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/catalog-api.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rEngine/configure-apis.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "testOpenWebUI",
      "testProviders",
      "testGeminiDirect",
      "testGroqDirect",
      "createTestLog",
      "runTest",
      "mockRequest",
      "stressRequest",
      "chunkRequest",
      "testGroq",
      "testGemini",
      "runTests",
      "testSmartHello",
      "testApiConnection",
      "testNumistaAPI",
      "mapField",
      "testApiKey",
      "testAllProviders",
      "testIntegrations"
    ],
    "description": "Code related to test",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.484Z"
  },
  "context:open": {
    "category": "context_clues",
    "keyword": "open",
    "files": [
      "rEngine/heygemini.js",
      "rEngine/index.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/validate_schema.py",
      "rAgents/rLegacy/engine/validate_schema.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rScripts/dynamic_memory.py",
      "rAgents/rScripts/mcp_json_sync.py",
      "rAgents/rScripts/sync_tasks.py",
      "rAgents/rTemplates/bootstrap_agent_system.py",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "testOpenWebUI",
      "callOpenAIAPI",
      "callViaOpenWebUI",
      "callOpenAIDirect",
      "showFullChangelog",
      "openNumistaModal",
      "openEbaySearch",
      "openStorageReportPopup",
      "openModalById",
      "_add_to_sync_config",
      "save_sync_metadata",
      "fetch_tasks_from_memory",
      "update_roadmap",
      "sync_tasks_to_memory",
      "get_available_tasks_from_json",
      "load_schema",
      "validate_file",
      "calculate_hash",
      "backup_file",
      "__init__",
      "callOpenAI"
    ],
    "description": "Code related to open",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "context:web": {
    "category": "context_clues",
    "keyword": "web",
    "files": [
      "rEngine/heygemini.js",
      "rEngine/index.js"
    ],
    "functions": [
      "testOpenWebUI",
      "callViaOpenWebUI"
    ],
    "description": "Code related to web",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.824Z"
  },
  "context:openwebui": {
    "category": "context_clues",
    "keyword": "openwebui",
    "files": [
      "rEngine/heygemini.js",
      "rEngine/index.js"
    ],
    "functions": [
      "testOpenWebUI",
      "callGroqAPI",
      "callOpenAIAPI",
      "callGeminiAPI",
      "callViaOpenWebUI",
      "callGeminiDirect",
      "callOllamaAPI",
      "getAvailableOllamaModels"
    ],
    "description": "Code related to openwebui",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:connection": {
    "category": "context_clues",
    "keyword": "connection",
    "files": [
      "rEngine/heygemini.js",
      "rProjects/StackTrackr/js/api.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "testOpenWebUI",
      "getCacheDurationMs",
      "setProviderStatus",
      "testApiConnection",
      "__init__",
      "_get_connection",
      "_update_memory_item",
      "_create_type_specific_entry",
      "_log_activity",
      "startServer"
    ],
    "description": "Code related to connection",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:openwebui_base_url": {
    "category": "context_clues",
    "keyword": "openwebui_base_url",
    "files": [
      "rEngine/heygemini.js",
      "rEngine/index.js"
    ],
    "functions": [
      "testOpenWebUI",
      "callGeminiAPI",
      "callViaOpenWebUI",
      "callOllamaAPI",
      "getAvailableOllamaModels"
    ],
    "description": "Code related to openwebui_base_url",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:heygemini": {
    "category": "context_clues",
    "keyword": "heygemini",
    "files": [
      "rEngine/heygemini.js",
      "scripts/heygemini.js"
    ],
    "functions": [
      "testOpenWebUI",
      "askGemini"
    ],
    "description": "Code related to heygemini",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.797Z"
  },
  "file:heygemini.js": {
    "category": "file_relationships",
    "keyword": "heygemini.js",
    "primary_file": "rEngine/heygemini.js",
    "functions": [
      "testOpenWebUI",
      "askGemini"
    ],
    "description": "File containing testOpenWebUI and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.718Z"
  },
  "context:usage": {
    "category": "context_clues",
    "keyword": "usage",
    "files": [
      "rEngine/html-doc-generator.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "main",
      "calculateApiUsage",
      "escapeAttribute",
      "updateStorageStats",
      "analyzeStorageData"
    ],
    "description": "Code related to usage",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.789Z"
  },
  "context:generate": {
    "category": "context_clues",
    "keyword": "generate",
    "files": [
      "rEngine/html-doc-generator.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/report-generator.js",
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rScripts/performance_analysis.py",
      "rEngine/workflow-automation.js",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "main",
      "generateVariations",
      "generateLookupTable",
      "loadLookupTable",
      "generateColors",
      "generateCategorySummary",
      "tokenizeWords",
      "generateNGrams",
      "generateBackupHtml",
      "generateReadmeContent",
      "generateDetailContent",
      "generateInventoryTable",
      "generateStorageReport",
      "generateStorageReportHTML",
      "generateItemDataTable",
      "generateStorageReportTar",
      "generateHTMLReport",
      "generateLatestResultsHTML",
      "generateHistoryTableHTML",
      "generateSampleData",
      "generateLatestResults",
      "generateHistoryTable",
      "generateAgentRecommendations",
      "regenerateFormats",
      "generateIndexHTML"
    ],
    "description": "Code related to generate",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.416Z"
  },
  "context:doc": {
    "category": "context_clues",
    "keyword": "doc",
    "files": [
      "rEngine/html-doc-generator.js"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to doc",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.808Z"
  },
  "file:html-doc-generator.js": {
    "category": "file_relationships",
    "keyword": "html-doc-generator.js",
    "primary_file": "rEngine/html-doc-generator.js",
    "functions": [
      "main"
    ],
    "description": "File containing main and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.727Z"
  },
  "function:logToVSCode": {
    "category": "code_functions",
    "keyword": "logToVSCode",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "logToVSCode"
    ],
    "description": "VS Code Chat Integration Logger",
    "context_weight": 0.9,
    "line_number": 44,
    "body_preview": "function logToVSCode(message, level = 'info') { const timestamp = new Date().toISOString(); console.error(`[${timestamp}] [rEngine-VSCode] ${level.toUpperCase()}: ${message}`);",
    "context_clues": [
      "log",
      "code",
      "chat",
      "integration",
      "logger",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.822Z"
  },
  "context:log": {
    "category": "context_clues",
    "keyword": "log",
    "files": [
      "rEngine/index.js",
      "rEngine/test-document-sweep-logs.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/debug-log.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "logToVSCode",
      "createTestLog",
      "logChange",
      "logItemChanges",
      "renderChangeLog",
      "clearChangeLog",
      "isEnabled",
      "log",
      "debugLog",
      "_log_activity",
      "logCall"
    ],
    "description": "Code related to log",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:code": {
    "category": "context_clues",
    "keyword": "code",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "logToVSCode",
      "callGroqAPI",
      "enhancedAIAnalysis",
      "startVSCodeMCPServer",
      "main",
      "formatCurrency",
      "detectCurrency"
    ],
    "description": "Code related to code",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:chat": {
    "category": "context_clues",
    "keyword": "chat",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "logToVSCode",
      "callGroqAPI",
      "enhancedAIAnalysis"
    ],
    "description": "Code related to chat",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:integration": {
    "category": "context_clues",
    "keyword": "integration",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/rsynk-integration.js"
    ],
    "functions": [
      "logToVSCode",
      "enhanceExistingSearch",
      "getBreakdownData",
      "initializerSynk"
    ],
    "description": "Code related to integration",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.690Z"
  },
  "context:logger": {
    "category": "context_clues",
    "keyword": "logger",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "logToVSCode"
    ],
    "description": "Code related to logger",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.822Z"
  },
  "context:index": {
    "category": "context_clues",
    "keyword": "index",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "logToVSCode",
      "callGroqAPI",
      "callClaudeAPI",
      "callOpenAIAPI",
      "callGeminiAPI",
      "callViaOpenWebUI",
      "callGeminiDirect",
      "callGroqDirect",
      "callClaudeDirect",
      "callOpenAIDirect",
      "callOllamaAPI",
      "getAvailableOllamaModels",
      "enhancedAIAnalysis",
      "startVSCodeMCPServer",
      "main",
      "toggleChange",
      "deleteItem",
      "showNotes",
      "editItem",
      "toggleCollectable",
      "togglePriceView",
      "getChartColor",
      "colLetterToIndex",
      "colIndexToLetter",
      "generateIndexHTML"
    ],
    "description": "Code related to index",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.416Z"
  },
  "file:index.js": {
    "category": "file_relationships",
    "keyword": "index.js",
    "primary_file": "rEngine/index.js",
    "functions": [
      "logToVSCode",
      "callGroqAPI",
      "callClaudeAPI",
      "callOpenAIAPI",
      "callGeminiAPI",
      "callViaOpenWebUI",
      "callGeminiDirect",
      "callGroqDirect",
      "callClaudeDirect",
      "callOpenAIDirect",
      "callOllamaAPI",
      "getAvailableOllamaModels",
      "enhancedAIAnalysis",
      "startVSCodeMCPServer",
      "main"
    ],
    "description": "File containing logToVSCode and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.762Z"
  },
  "function:callGroqAPI": {
    "category": "code_functions",
    "keyword": "callGroqAPI",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callGroqAPI"
    ],
    "description": "Enhanced AI calling functions for VS Code Chat - Route through OpenWebUI Pipelines",
    "context_weight": 0.9,
    "line_number": 1013,
    "body_preview": "async function callGroqAPI(messages, model = AI_MODELS.groq.model) { return await callViaOpenWebUI(messages, model, 'groq'); }",
    "context_clues": [
      "call",
      "groq",
      "enhanced",
      "calling",
      "functions",
      "code",
      "chat",
      "route",
      "through",
      "openwebui",
      "pipelines",
      "openai",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.822Z"
  },
  "context:call": {
    "category": "context_clues",
    "keyword": "call",
    "files": [
      "rEngine/index.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "callGroqAPI",
      "callClaudeAPI",
      "callOpenAIAPI",
      "callGeminiAPI",
      "callViaOpenWebUI",
      "callGeminiDirect",
      "callGroqDirect",
      "callClaudeDirect",
      "callOpenAIDirect",
      "callOllamaAPI",
      "callGemini",
      "callClaude",
      "callOpenAI",
      "callGroq",
      "callLLM",
      "showProviders",
      "parseArgs",
      "showHelp",
      "handleMCPMode",
      "logCall",
      "main",
      "testApiKey"
    ],
    "description": "Code related to call",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:calling": {
    "category": "context_clues",
    "keyword": "calling",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callGroqAPI"
    ],
    "description": "Code related to calling",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.822Z"
  },
  "context:functions": {
    "category": "context_clues",
    "keyword": "functions",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "callGroqAPI",
      "callGeminiDirect",
      "getTemplateVariables",
      "isFeatureEnabled",
      "getBreakdownData",
      "createBackupZip",
      "startImportProgress",
      "calculateTotalPages",
      "saveSpotHistory",
      "debugLog",
      "displayLatestResults",
      "generateHTMLReport",
      "generateLatestResultsHTML",
      "generateHistoryTableHTML",
      "updateHistoryCharts",
      "createHistoryChart",
      "createHistoryTable"
    ],
    "description": "Code related to functions",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.831Z"
  },
  "context:route": {
    "category": "context_clues",
    "keyword": "route",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callGroqAPI"
    ],
    "description": "Code related to route",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.822Z"
  },
  "context:through": {
    "category": "context_clues",
    "keyword": "through",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "callGroqAPI",
      "fuzzySearch",
      "toggleTheme"
    ],
    "description": "Code related to through",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:pipelines": {
    "category": "context_clues",
    "keyword": "pipelines",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callGroqAPI"
    ],
    "description": "Code related to pipelines",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.822Z"
  },
  "context:openai": {
    "category": "context_clues",
    "keyword": "openai",
    "files": [
      "rEngine/index.js",
      "rEngine/test-simple.js",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "callGroqAPI",
      "callClaudeAPI",
      "callOpenAIAPI",
      "callOpenAIDirect",
      "startVSCodeMCPServer",
      "testGroq",
      "callOpenAI",
      "showHelp"
    ],
    "description": "Code related to openai",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.234Z"
  },
  "function:callClaudeAPI": {
    "category": "code_functions",
    "keyword": "callClaudeAPI",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callClaudeAPI"
    ],
    "description": "Function callClaudeAPI in index.js",
    "context_weight": 0.9,
    "line_number": 1017,
    "body_preview": "async function callClaudeAPI(messages, model = AI_MODELS.claude.model) { return await callViaOpenWebUI(messages, model, 'claude'); }",
    "context_clues": [
      "call",
      "claude",
      "openai",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.823Z"
  },
  "context:claude": {
    "category": "context_clues",
    "keyword": "claude",
    "files": [
      "rEngine/index.js",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "callClaudeAPI",
      "callClaudeDirect",
      "callClaude"
    ],
    "description": "Code related to claude",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.825Z"
  },
  "function:callOpenAIAPI": {
    "category": "code_functions",
    "keyword": "callOpenAIAPI",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callOpenAIAPI"
    ],
    "description": "Function callOpenAIAPI in index.js",
    "context_weight": 0.9,
    "line_number": 1021,
    "body_preview": "async function callOpenAIAPI(messages, model = AI_MODELS.openai.model) { return await callViaOpenWebUI(messages, model, 'openai'); }",
    "context_clues": [
      "call",
      "open",
      "openai",
      "openwebui",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.823Z"
  },
  "function:callGeminiAPI": {
    "category": "code_functions",
    "keyword": "callGeminiAPI",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callGeminiAPI"
    ],
    "description": "Function callGeminiAPI in index.js",
    "context_weight": 0.9,
    "line_number": 1025,
    "body_preview": "async function callGeminiAPI(messages, model = AI_MODELS.gemini.model) { return await callViaOpenWebUI(messages, model, 'gemini'); }",
    "context_clues": [
      "call",
      "gemini",
      "openwebui",
      "openwebui_base_url",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.823Z"
  },
  "function:callViaOpenWebUI": {
    "category": "code_functions",
    "keyword": "callViaOpenWebUI",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callViaOpenWebUI"
    ],
    "description": "Universal OpenWebUI router for all providers",
    "context_weight": 0.9,
    "line_number": 1030,
    "body_preview": "async function callViaOpenWebUI(messages, model, provider) { try { logToVSCode(`🚀 Calling ${provider} via OpenWebUI pipelines (${model})`);",
    "context_clues": [
      "call",
      "via",
      "open",
      "web",
      "universal",
      "openwebui",
      "router",
      "providers",
      "openwebui_base_url",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.824Z"
  },
  "context:via": {
    "category": "context_clues",
    "keyword": "via",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callViaOpenWebUI"
    ],
    "description": "Code related to via",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.824Z"
  },
  "context:universal": {
    "category": "context_clues",
    "keyword": "universal",
    "files": [
      "rEngine/index.js",
      "rEngine/universal-agent-init.js"
    ],
    "functions": [
      "callViaOpenWebUI",
      "ask"
    ],
    "description": "Code related to universal",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.266Z"
  },
  "context:router": {
    "category": "context_clues",
    "keyword": "router",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callViaOpenWebUI"
    ],
    "description": "Code related to router",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.824Z"
  },
  "context:providers": {
    "category": "context_clues",
    "keyword": "providers",
    "files": [
      "rEngine/index.js",
      "rEngine/test-ai-providers.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/catalog-providers.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "callViaOpenWebUI",
      "testProviders",
      "showApiProvidersModal",
      "hideApiProvidersModal",
      "syncAllProviders",
      "register",
      "get",
      "list",
      "showProviders",
      "testAllProviders"
    ],
    "description": "Code related to providers",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.432Z"
  },
  "function:callGeminiDirect": {
    "category": "code_functions",
    "keyword": "callGeminiDirect",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callGeminiDirect"
    ],
    "description": "Direct API functions for testing (bypass OpenWebUI)",
    "context_weight": 0.9,
    "line_number": 1060,
    "body_preview": "async function callGeminiDirect(message, model = 'gemini-pro') { if (!gemini) throw new Error('Gemini API not configured'); try {",
    "context_clues": [
      "call",
      "gemini",
      "direct",
      "functions",
      "testing",
      "bypass",
      "openwebui",
      "configured",
      "getgenerativemodel",
      "generatecontent",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.824Z"
  },
  "context:direct": {
    "category": "context_clues",
    "keyword": "direct",
    "files": [
      "rEngine/index.js",
      "rEngine/test-direct-apis.js"
    ],
    "functions": [
      "callGeminiDirect",
      "callGroqDirect",
      "callClaudeDirect",
      "callOpenAIDirect",
      "testGeminiDirect",
      "testGroqDirect"
    ],
    "description": "Code related to direct",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.187Z"
  },
  "context:testing": {
    "category": "context_clues",
    "keyword": "testing",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "callGeminiDirect",
      "handleProviderSync",
      "generateSampleData"
    ],
    "description": "Code related to testing",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:bypass": {
    "category": "context_clues",
    "keyword": "bypass",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callGeminiDirect"
    ],
    "description": "Code related to bypass",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.824Z"
  },
  "context:configured": {
    "category": "context_clues",
    "keyword": "configured",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/catalog-api.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "callGeminiDirect",
      "callGroqDirect",
      "callClaudeDirect",
      "callOpenAIDirect",
      "enhanceExistingSearch",
      "syncAllProviders",
      "testNumistaAPI",
      "getAppTitle",
      "showProviders",
      "showStatus",
      "runWizard",
      "testAllProviders",
      "showHelp"
    ],
    "description": "Code related to configured",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "context:getgenerativemodel": {
    "category": "context_clues",
    "keyword": "getgenerativemodel",
    "files": [
      "rEngine/index.js",
      "scripts/heygemini.js",
      "scripts/utilities/analyze_collect_buttons.js"
    ],
    "functions": [
      "callGeminiDirect",
      "askGemini",
      "analyzeCollectButtons"
    ],
    "description": "Code related to getgenerativemodel",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.366Z"
  },
  "context:generatecontent": {
    "category": "context_clues",
    "keyword": "generatecontent",
    "files": [
      "rEngine/index.js",
      "rEngine/test-simple.js",
      "scripts/heygemini.js"
    ],
    "functions": [
      "callGeminiDirect",
      "testGemini",
      "askGemini"
    ],
    "description": "Code related to generatecontent",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.234Z"
  },
  "function:callGroqDirect": {
    "category": "code_functions",
    "keyword": "callGroqDirect",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callGroqDirect"
    ],
    "description": "Function callGroqDirect in index.js",
    "context_weight": 0.9,
    "line_number": 1080,
    "body_preview": "async function callGroqDirect(message, model = 'llama-3.1-8b-instant') { if (!GROQ_API_KEY) throw new Error('Groq API key not configured'); try {",
    "context_clues": [
      "call",
      "groq",
      "direct",
      "configured",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.825Z"
  },
  "function:callClaudeDirect": {
    "category": "code_functions",
    "keyword": "callClaudeDirect",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callClaudeDirect"
    ],
    "description": "Function callClaudeDirect in index.js",
    "context_weight": 0.9,
    "line_number": 1109,
    "body_preview": "async function callClaudeDirect(message, model = 'claude-3-haiku-20240307') { if (!anthropic) throw new Error('Claude API not configured'); try {",
    "context_clues": [
      "call",
      "claude",
      "direct",
      "configured",
      "create",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.825Z"
  },
  "context:create": {
    "category": "context_clues",
    "keyword": "create",
    "files": [
      "rEngine/index.js",
      "rEngine/test-document-sweep-logs.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/rsynk-integration.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "rEngine/configure-apis.js",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "callClaudeDirect",
      "callOpenAIDirect",
      "createTestLog",
      "displayAIInsights",
      "createBackupData",
      "downloadCompleteBackup",
      "createEmptyLookupTable",
      "createPieChart",
      "createBreakdownElements",
      "createDummyElement",
      "createBackupZip",
      "initializerSynk",
      "createStorageItemModal",
      "createHistoryChart",
      "createHistoryTable",
      "saveResultsToHistory",
      "getDockerPersistenceInstructions",
      "ensure_backup_dir",
      "create_emergency_recovery_package",
      "_get_connection",
      "_create_type_specific_entry",
      "calculate_hash",
      "backup_file",
      "main",
      "backup_database",
      "createReadline",
      "checkHasApiKey",
      "cleanupDocumentationStructure",
      "createCorrectStructure"
    ],
    "description": "Code related to create",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "function:callOpenAIDirect": {
    "category": "code_functions",
    "keyword": "callOpenAIDirect",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callOpenAIDirect"
    ],
    "description": "Function callOpenAIDirect in index.js",
    "context_weight": 0.9,
    "line_number": 1131,
    "body_preview": "async function callOpenAIDirect(message, model = 'gpt-3.5-turbo') { if (!openai) throw new Error('OpenAI API not configured'); try {",
    "context_clues": [
      "call",
      "open",
      "direct",
      "openai",
      "configured",
      "create",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.825Z"
  },
  "function:callOllamaAPI": {
    "category": "code_functions",
    "keyword": "callOllamaAPI",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callOllamaAPI"
    ],
    "description": "Function callOllamaAPI in index.js",
    "context_weight": 0.9,
    "line_number": 1154,
    "body_preview": "async function callOllamaAPI(messages, selectedModel = null) { try { logToVSCode(`🏠 Using local Ollama fallback via OpenWebUI`);",
    "context_clues": [
      "call",
      "ollama",
      "openwebui",
      "get",
      "managed",
      "openwebui_base_url",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:ollama": {
    "category": "context_clues",
    "keyword": "ollama",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "callOllamaAPI",
      "getAvailableOllamaModels"
    ],
    "description": "Code related to ollama",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:managed": {
    "category": "context_clues",
    "keyword": "managed",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "callOllamaAPI",
      "getNextSerial"
    ],
    "description": "Code related to managed",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "function:getAvailableOllamaModels": {
    "category": "code_functions",
    "keyword": "getAvailableOllamaModels",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "getAvailableOllamaModels"
    ],
    "description": "Function getAvailableOllamaModels in index.js",
    "context_weight": 0.9,
    "line_number": 1187,
    "body_preview": "async function getAvailableOllamaModels() { try { // Get models through OpenWebUI API instead of direct Ollama",
    "context_clues": [
      "get",
      "available",
      "ollama",
      "models",
      "getavailableollamamodels",
      "openwebui",
      "openwebui_base_url",
      "openwebui_api_key",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:available": {
    "category": "context_clues",
    "keyword": "available",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/theme.js",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "getAvailableOllamaModels",
      "toggleTheme",
      "get_available_tasks_from_json",
      "get_available_tasks_from_backup",
      "showProviders"
    ],
    "description": "Code related to available",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.011Z"
  },
  "context:models": {
    "category": "context_clues",
    "keyword": "models",
    "files": [
      "rEngine/index.js",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "getAvailableOllamaModels",
      "showProviders"
    ],
    "description": "Code related to models",
    "context_weight": 0.9999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:getavailableollamamodels": {
    "category": "context_clues",
    "keyword": "getavailableollamamodels",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "getAvailableOllamaModels"
    ],
    "description": "Code related to getavailableollamamodels",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:openwebui_api_key": {
    "category": "context_clues",
    "keyword": "openwebui_api_key",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "getAvailableOllamaModels"
    ],
    "description": "Code related to openwebui_api_key",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "function:enhancedAIAnalysis": {
    "category": "code_functions",
    "keyword": "enhancedAIAnalysis",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "enhancedAIAnalysis"
    ],
    "description": "Enhanced tagging with 5-tier fallback for VS Code Chat",
    "context_weight": 0.9,
    "line_number": 1208,
    "body_preview": "async function enhancedAIAnalysis(content, operation = 'analyze') { const timestamp = new Date().toISOString(); const messages = [",
    "context_clues": [
      "enhanced",
      "analysis",
      "tagging",
      "with",
      "5tier",
      "fallback",
      "code",
      "chat",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:tagging": {
    "category": "context_clues",
    "keyword": "tagging",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "enhancedAIAnalysis"
    ],
    "description": "Code related to tagging",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:with": {
    "category": "context_clues",
    "keyword": "with",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rEngine/configure-apis.js",
      "rEngine/workflow-automation.js",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "enhancedAIAnalysis",
      "showAboutModal",
      "populateAboutModal",
      "populateAckModal",
      "enhanceExistingSearch",
      "renderApiHistoryTable",
      "showApiHistoryModal",
      "buildSearchIndices",
      "generateLookupTable",
      "createEmptyLookupTable",
      "renderChangeLog",
      "createPieChart",
      "replaceTemplateVariables",
      "getBreakdownData",
      "showDetailsModal",
      "safeAttachListener",
      "applyColumnFilter",
      "createDummyElement",
      "safeGetElement",
      "loadInventory",
      "formatStorageLocation",
      "validateFieldValue",
      "startCellEdit",
      "importCsv",
      "openNumistaModal",
      "resetSpotByName",
      "getAppTitle",
      "updateSpotTimestamp",
      "pad2",
      "formatLossProfit",
      "formatWeight",
      "sanitizeObjectFields",
      "saveData",
      "loadData",
      "validateInventoryItem",
      "handleError",
      "downloadFile",
      "updateStorageStats",
      "downloadStorageReport",
      "generateStorageReportHTML",
      "getStorageReportCSS",
      "getStorageReportJS",
      "generateStorageReportTar",
      "checkVersionChange",
      "getDockerPersistenceInstructions",
      "promptHidden",
      "prompt",
      "testApiKey",
      "smartHandoff",
      "moveFileWithBackup"
    ],
    "description": "Code related to with",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:5tier": {
    "category": "context_clues",
    "keyword": "5tier",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "enhancedAIAnalysis"
    ],
    "description": "Code related to 5tier",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.826Z"
  },
  "context:fallback": {
    "category": "context_clues",
    "keyword": "fallback",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "enhancedAIAnalysis",
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "safeGetElement",
      "setupBasicEventListeners",
      "getEmbeddedChangelog",
      "load_json_memory_fallback"
    ],
    "description": "Code related to fallback",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.995Z"
  },
  "function:startVSCodeMCPServer": {
    "category": "code_functions",
    "keyword": "startVSCodeMCPServer",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "startVSCodeMCPServer"
    ],
    "description": "VS Code MCP Server startup",
    "context_weight": 0.9,
    "line_number": 2496,
    "body_preview": "async function startVSCodeMCPServer() { logToVSCode('Starting Enhanced MCP Server for VS Code Chat Integration...'); logToVSCode('5-Tier System: Groq → Claude → ChatGPT → Gemini → Ollama');",
    "context_clues": [
      "start",
      "code",
      "server",
      "startup",
      "startvscodemcpserver",
      "starting",
      "check",
      "openai_api_key",
      "openai",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:08.827Z"
  },
  "context:start": {
    "category": "context_clues",
    "keyword": "start",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "startVSCodeMCPServer",
      "main",
      "startCellEdit",
      "renderTable",
      "startImportProgress",
      "exportCsv",
      "exportJson",
      "startServer",
      "loadSearchMatrix",
      "buildSearchMatrix"
    ],
    "description": "Code related to start",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.107Z"
  },
  "context:server": {
    "category": "context_clues",
    "keyword": "server",
    "files": [
      "rEngine/index.js",
      "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js"
    ],
    "functions": [
      "startVSCodeMCPServer",
      "main",
      "startServer"
    ],
    "description": "Code related to server",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.107Z"
  },
  "context:startvscodemcpserver": {
    "category": "context_clues",
    "keyword": "startvscodemcpserver",
    "files": [
      "rEngine/index.js"
    ],
    "functions": [
      "startVSCodeMCPServer",
      "main"
    ],
    "description": "Code related to startvscodemcpserver",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.827Z"
  },
  "context:check": {
    "category": "context_clues",
    "keyword": "check",
    "files": [
      "rEngine/index.js",
      "rEngine/test-intelligence.js",
      "rEngine/test-smart-hello.js",
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/catalog-api.js",
      "rProjects/StackTrackr/js/encryption.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rEngine/configure-apis.js",
      "rEngine/enhanced-memory-sync.js",
      "rEngine/recall.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "startVSCodeMCPServer",
      "runTest",
      "testSmartHello",
      "updateHTMLFile",
      "refreshProviderStatuses",
      "request",
      "hasMasterPassword",
      "checkFileSize",
      "saveData",
      "checkVersionChange",
      "update_last_sync_time",
      "has_changes",
      "commit_and_push",
      "_initialize_database",
      "checkHasApiKey",
      "main",
      "checkMemoryFreshness",
      "checkSystemHealth",
      "quickSetup",
      "checkDependencies",
      "detectPainPoint"
    ],
    "description": "Code related to check",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.155Z"
  },
  "context:openai_api_key": {
    "category": "context_clues",
    "keyword": "openai_api_key",
    "files": [
      "rEngine/index.js",
      "rEngine/call-llm.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "startVSCodeMCPServer",
      "callOpenAI",
      "configureAPIs"
    ],
    "description": "Code related to openai_api_key",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "context:connect": {
    "category": "context_clues",
    "keyword": "connect",
    "files": [
      "rEngine/index.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "main",
      "_get_connection",
      "startServer",
      "backup_database"
    ],
    "description": "Code related to connect",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:connected": {
    "category": "context_clues",
    "keyword": "connected",
    "files": [
      "rEngine/index.js",
      "rProjects/StackTrackr/js/api.js",
      "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js"
    ],
    "functions": [
      "main",
      "renderApiStatusSummary",
      "getCacheDurationMs",
      "setProviderStatus",
      "startServer"
    ],
    "description": "Code related to connected",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.107Z"
  },
  "function:addMemory": {
    "category": "code_functions",
    "keyword": "addMemory",
    "files": [
      "rEngine/mcp-client.js"
    ],
    "functions": [
      "addMemory"
    ],
    "description": "Function addMemory in mcp-client.js",
    "context_weight": 0.9,
    "line_number": 3,
    "body_preview": "export async function addMemory(title, description, type) { const url = 'http://localhost:3036/add'; const memory = {",
    "context_clues": [
      "add",
      "memory",
      "export",
      "addmemory",
      "mcp",
      "client"
    ],
    "last_updated": "2025-08-20T17:24:08.858Z"
  },
  "context:memory": {
    "category": "context_clues",
    "keyword": "memory",
    "files": [
      "rEngine/mcp-client.js",
      "rEngine/memory-intelligence.js",
      "rEngine/memory-sync-manager.js",
      "rEngine/update-agent-requirements.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rScripts/dynamic_memory.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_tasks.py",
      "rEngine/enhanced-memory-sync.js",
      "rEngine/recall.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "addMemory",
      "main",
      "syncPromise",
      "syncProcess",
      "updateAgentMemory",
      "destroyCharts",
      "analyzeStorageData",
      "__init__",
      "_add_to_sync_config",
      "_update_workflow_docs",
      "ensure_vault_directory",
      "get_last_sync_time",
      "update_last_sync_time",
      "has_changes",
      "sync_memory_files",
      "commit_and_push",
      "sync",
      "fetch_tasks_from_memory",
      "sync_tasks_to_memory",
      "load_json_memory_fallback",
      "search_json_memory",
      "export_mcp_memory_to_json",
      "load_backup_memory",
      "search_backup_memory",
      "showHelp",
      "showStats",
      "showEntityTypes",
      "showSuggestions",
      "searchByType",
      "showRelated",
      "performSearch",
      "ensure_dirs",
      "write_atomic",
      "initialize_snapshot",
      "find_changes",
      "_initialize_database",
      "_get_connection",
      "_update_memory_item",
      "_create_type_specific_entry",
      "_log_activity",
      "cleanup_expired_leases",
      "checkMemoryFreshness",
      "validateMemory"
    ],
    "description": "Code related to memory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:mcp": {
    "category": "context_clues",
    "keyword": "mcp",
    "files": [
      "rEngine/mcp-client.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rScripts/mcp_json_sync.py",
      "rEngine/mcp-html-converter.js"
    ],
    "functions": [
      "addMemory",
      "__init__",
      "setup_logging",
      "save_sync_metadata",
      "ensure_backup_dir",
      "export_mcp_memory_to_json",
      "load_backup_memory",
      "get_available_tasks_from_backup",
      "search_backup_memory",
      "walk"
    ],
    "description": "Code related to mcp",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "context:client": {
    "category": "context_clues",
    "keyword": "client",
    "files": [
      "rEngine/mcp-client.js",
      "rEngine/rengine-client.js"
    ],
    "functions": [
      "addMemory",
      "sendCommand",
      "main"
    ],
    "description": "Code related to client",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.090Z"
  },
  "file:mcp-client.js": {
    "category": "file_relationships",
    "keyword": "mcp-client.js",
    "primary_file": "rEngine/mcp-client.js",
    "functions": [
      "addMemory"
    ],
    "description": "File containing addMemory and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.778Z"
  },
  "context:interface": {
    "category": "context_clues",
    "keyword": "interface",
    "files": [
      "rEngine/memory-intelligence.js",
      "rAgents/rLegacy/version-manager.js",
      "rAgents/version-manager.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "main",
      "createReadline"
    ],
    "description": "Code related to interface",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.327Z"
  },
  "context:search": {
    "category": "context_clues",
    "keyword": "search",
    "files": [
      "rEngine/memory-intelligence.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/search.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "main",
      "enhanceExistingSearch",
      "displayAIInsights",
      "buildSearchIndices",
      "setupEventListeners",
      "setupSearch",
      "clearAllFilters",
      "removeFilter",
      "renderActiveFilters",
      "normalizeString",
      "fuzzyMatch",
      "fuzzySearch",
      "renderTable",
      "filterInventory",
      "openEbaySearch",
      "search_json_memory",
      "search_backup_memory",
      "showHelp",
      "showStats",
      "showEntityTypes",
      "showSuggestions",
      "searchByType",
      "showRelated",
      "performSearch",
      "loadSearchMatrix",
      "searchMatrix",
      "formatResults",
      "getUserPreferences",
      "handleMCPMode",
      "parseArgs",
      "checkSystemHealth",
      "displayContextSummary",
      "quickSetup",
      "buildSearchMatrix",
      "testIntegrations"
    ],
    "description": "Code related to search",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:intelligence": {
    "category": "context_clues",
    "keyword": "intelligence",
    "files": [
      "rEngine/memory-intelligence.js",
      "rEngine/test-intelligence.js"
    ],
    "functions": [
      "main",
      "runTest"
    ],
    "description": "Code related to intelligence",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.209Z"
  },
  "file:memory-intelligence.js": {
    "category": "file_relationships",
    "keyword": "memory-intelligence.js",
    "primary_file": "rEngine/memory-intelligence.js",
    "functions": [
      "main"
    ],
    "description": "File containing main and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.785Z"
  },
  "function:syncPromise": {
    "category": "code_functions",
    "keyword": "syncPromise",
    "files": [
      "rEngine/memory-sync-manager.js"
    ],
    "functions": [
      "syncPromise"
    ],
    "description": "Function syncPromise in memory-sync-manager.js",
    "context_weight": 0.9,
    "line_number": 151,
    "body_preview": "const syncPromise = (async () => { try { // This would use MCP client to push data to MCP Memory",
    "context_clues": [
      "sync",
      "promise",
      "memory",
      "manager"
    ],
    "last_updated": "2025-08-20T17:24:08.928Z"
  },
  "context:sync": {
    "category": "context_clues",
    "keyword": "sync",
    "files": [
      "rEngine/memory-sync-manager.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rScripts/dynamic_memory.py",
      "rAgents/rScripts/mcp_json_sync.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_tasks.py",
      "rEngine/enhanced-memory-sync.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "syncPromise",
      "syncProcess",
      "autoSyncSpotPrices",
      "syncSpotPricesFromApi",
      "handleProviderSync",
      "syncAllProviders",
      "updateSyncButtonStates",
      "updateLastTimestamps",
      "getLastUpdateTime",
      "updateSpotTimestamp",
      "saveDataSync",
      "loadDataSync",
      "_add_to_sync_config",
      "__init__",
      "setup_logging",
      "save_sync_metadata",
      "ensure_vault_directory",
      "get_last_sync_time",
      "update_last_sync_time",
      "has_changes",
      "sync_memory_files",
      "commit_and_push",
      "sync",
      "main",
      "fetch_tasks_from_memory",
      "update_roadmap",
      "sync_tasks_to_memory",
      "syncApplicationDocs",
      "generateIndexHTML"
    ],
    "description": "Code related to sync",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.417Z"
  },
  "context:promise": {
    "category": "context_clues",
    "keyword": "promise",
    "files": [
      "rEngine/memory-sync-manager.js",
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "syncPromise",
      "testApiConnection"
    ],
    "description": "Code related to promise",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.362Z"
  },
  "context:manager": {
    "category": "context_clues",
    "keyword": "manager",
    "files": [
      "rEngine/memory-sync-manager.js",
      "rAgents/rLegacy/version-manager.js",
      "rAgents/version-manager.js",
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "syncPromise",
      "syncProcess",
      "main",
      "regenerateFormats"
    ],
    "description": "Code related to manager",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.378Z"
  },
  "file:memory-sync-manager.js": {
    "category": "file_relationships",
    "keyword": "memory-sync-manager.js",
    "primary_file": "rEngine/memory-sync-manager.js",
    "functions": [
      "syncPromise",
      "syncProcess"
    ],
    "description": "File containing syncPromise and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.796Z"
  },
  "function:syncProcess": {
    "category": "code_functions",
    "keyword": "syncProcess",
    "files": [
      "rEngine/memory-sync-manager.js"
    ],
    "functions": [
      "syncProcess"
    ],
    "description": "Function syncProcess in memory-sync-manager.js",
    "context_weight": 0.9,
    "line_number": 192,
    "body_preview": "const syncProcess = (async () => { try { const memory = await this.loadPersistentMemory();",
    "context_clues": [
      "sync",
      "process",
      "loadpersistentmemory",
      "update",
      "memory",
      "manager"
    ],
    "last_updated": "2025-08-20T17:24:08.928Z"
  },
  "context:loadpersistentmemory": {
    "category": "context_clues",
    "keyword": "loadpersistentmemory",
    "files": [
      "rEngine/memory-sync-manager.js"
    ],
    "functions": [
      "syncProcess"
    ],
    "description": "Code related to loadpersistentmemory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.928Z"
  },
  "context:processor": {
    "category": "context_clues",
    "keyword": "processor",
    "files": [
      "rEngine/overnight-batch-processor.js"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to processor",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.974Z"
  },
  "context:overnight": {
    "category": "context_clues",
    "keyword": "overnight",
    "files": [
      "rEngine/overnight-batch-processor.js"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to overnight",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.974Z"
  },
  "context:batch": {
    "category": "context_clues",
    "keyword": "batch",
    "files": [
      "rEngine/overnight-batch-processor.js",
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "main",
      "updateBatchCalculation",
      "calculateApiUsage",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi"
    ],
    "description": "Code related to batch",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.361Z"
  },
  "file:overnight-batch-processor.js": {
    "category": "file_relationships",
    "keyword": "overnight-batch-processor.js",
    "primary_file": "rEngine/overnight-batch-processor.js",
    "functions": [
      "main"
    ],
    "description": "File containing main and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.810Z"
  },
  "context:parse": {
    "category": "context_clues",
    "keyword": "parse",
    "files": [
      "rEngine/publish-docs.js",
      "rEngine/update-agent-requirements.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "main",
      "updateAgentMemory",
      "parseList",
      "loadApiConfig",
      "refreshProviderStatuses",
      "loadApiCache",
      "restoreBackupZip",
      "parsePriceField",
      "parseDate",
      "parseNumistaMetal",
      "loadDataSync",
      "analyzeStorageItem",
      "updateHistoryCharts",
      "storeCurrentResults",
      "parseCSVFile",
      "saveResultsToHistory",
      "initLocalStorage",
      "parseArgs",
      "loadSearchMatrix",
      "getUserPreferences"
    ],
    "description": "Code related to parse",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:startswith": {
    "category": "context_clues",
    "keyword": "startswith",
    "files": [
      "rEngine/publish-docs.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rScripts/sync_tasks.py",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "main",
      "section",
      "parseList",
      "__decompressIfNeeded",
      "parseNumistaMetal",
      "colLetterToIndex",
      "translateFormula",
      "sync_tasks_to_memory",
      "validateApiKey",
      "loadEnvFile"
    ],
    "description": "Code related to startswith",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:publish": {
    "category": "context_clues",
    "keyword": "publish",
    "files": [
      "rEngine/publish-docs.js"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to publish",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.020Z"
  },
  "context:docs": {
    "category": "context_clues",
    "keyword": "docs",
    "files": [
      "rEngine/publish-docs.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rScripts/dynamic_memory.py",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/cleanup-docs-structure.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "main",
      "_update_workflow_docs",
      "cleanCombinedDocumentation",
      "findCombinedFiles",
      "scanDir",
      "cleanCombinedFile",
      "regenerateFormats",
      "cleanupDocumentationStructure",
      "createCorrectStructure",
      "moveFilesToCorrectLocations",
      "calculateCorrectPath",
      "moveFileWithBackup",
      "findFilesRecursively",
      "cleanupRecursiveDirectories",
      "findRecursiveDirectories",
      "verifyStructure",
      "countFiles",
      "syncApplicationDocs",
      "generateIndexHTML"
    ],
    "description": "Code related to docs",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.417Z"
  },
  "file:publish-docs.js": {
    "category": "file_relationships",
    "keyword": "publish-docs.js",
    "primary_file": "rEngine/publish-docs.js",
    "functions": [
      "main"
    ],
    "description": "File containing main and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.822Z"
  },
  "function:quickAgentSetup": {
    "category": "code_functions",
    "keyword": "quickAgentSetup",
    "files": [
      "rEngine/quick-agent-setup.js"
    ],
    "functions": [
      "quickAgentSetup"
    ],
    "description": "Function quickAgentSetup in quick-agent-setup.js",
    "context_weight": 0.9,
    "line_number": 22,
    "body_preview": "async function quickAgentSetup(apiPreference = 'auto') { console.log(`${colors.pink} ╔═══════════════════════════════════════════════════════════════════╗",
    "context_clues": [
      "quick",
      "agent",
      "setup",
      "reset",
      "run",
      "initialization"
    ],
    "last_updated": "2025-08-20T17:24:09.031Z"
  },
  "context:quick": {
    "category": "context_clues",
    "keyword": "quick",
    "files": [
      "rEngine/quick-agent-setup.js",
      "rProjects/StackTrackr/js/filters.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "quickAgentSetup",
      "applyQuickFilter",
      "quickSetup"
    ],
    "description": "Code related to quick",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:setup": {
    "category": "context_clues",
    "keyword": "setup",
    "files": [
      "rEngine/quick-agent-setup.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/encryption.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rScripts/mcp_json_sync.py",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "quickAgentSetup",
      "setupAboutModalEvents",
      "setupAckModalEvents",
      "setupProviderSettingsListeners",
      "isUnlocked",
      "setupColumnResizing",
      "setupResponsiveColumns",
      "setupEventListeners",
      "setupPagination",
      "setupBulkEditControls",
      "setupSearch",
      "setupThemeToggle",
      "setupApiEvents",
      "setupEncryptionEvents",
      "setupBasicEventListeners",
      "setupSystemThemeListener",
      "setupVersionModalEvents",
      "getDockerPersistenceInstructions",
      "setup_logging",
      "quickSetup",
      "checkDependencies",
      "showHelp"
    ],
    "description": "Code related to setup",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "context:initialization": {
    "category": "context_clues",
    "keyword": "initialization",
    "files": [
      "rEngine/quick-agent-setup.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/init.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "quickAgentSetup",
      "isFeatureEnabled",
      "enableFeature",
      "disableFeature",
      "toggleFeature",
      "createDummyElement",
      "_initialize_database"
    ],
    "description": "Code related to initialization",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.155Z"
  },
  "file:quick-agent-setup.js": {
    "category": "file_relationships",
    "keyword": "quick-agent-setup.js",
    "primary_file": "rEngine/quick-agent-setup.js",
    "functions": [
      "quickAgentSetup"
    ],
    "description": "File containing quickAgentSetup and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.825Z"
  },
  "function:fastRecall": {
    "category": "code_functions",
    "keyword": "fastRecall",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "fastRecall"
    ],
    "description": "Function fastRecall in recall.js",
    "context_weight": 0.9,
    "line_number": 66,
    "body_preview": "async function fastRecall(query) { const baseDir = path.dirname(__dirname); // Freshness validation for critical memory files",
    "context_clues": [
      "fast",
      "recall",
      "checkmemoryfreshness",
      "searchpaths"
    ],
    "last_updated": "2025-08-20T17:24:09.079Z"
  },
  "context:recall": {
    "category": "context_clues",
    "keyword": "recall",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "fastRecall",
      "calculateRelevance",
      "checkMemoryFreshness"
    ],
    "description": "Code related to recall",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.079Z"
  },
  "context:searchpaths": {
    "category": "context_clues",
    "keyword": "searchpaths",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "fastRecall"
    ],
    "description": "Code related to searchpaths",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.079Z"
  },
  "file:recall.js": {
    "category": "file_relationships",
    "keyword": "recall.js",
    "primary_file": "rEngine/recall.js",
    "functions": [
      "fastRecall",
      "calculateRelevance",
      "checkMemoryFreshness"
    ],
    "description": "File containing fastRecall and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:22.333Z"
  },
  "function:calculateRelevance": {
    "category": "code_functions",
    "keyword": "calculateRelevance",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "calculateRelevance"
    ],
    "description": "Function calculateRelevance in recall.js",
    "context_weight": 0.9,
    "line_number": 205,
    "body_preview": "function calculateRelevance(query, text) { if (!query || !text) return 0; const queryLower = query.toLowerCase();",
    "context_clues": [
      "calculate",
      "relevance",
      "calculaterelevance",
      "recall"
    ],
    "last_updated": "2025-08-20T17:24:09.079Z"
  },
  "context:calculate": {
    "category": "context_clues",
    "keyword": "calculate",
    "files": [
      "rEngine/recall.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/VulnTrackr/app.js",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "calculateRelevance",
      "calculateApiUsage",
      "calculateLevenshteinDistance",
      "updateSummary",
      "calculateTotals",
      "calculateTotalPages",
      "getTrendIndicator",
      "autoCalculatePanels",
      "calculate_hash",
      "calculateCorrectPath"
    ],
    "description": "Code related to calculate",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:relevance": {
    "category": "context_clues",
    "keyword": "relevance",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "calculateRelevance"
    ],
    "description": "Code related to relevance",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.079Z"
  },
  "context:calculaterelevance": {
    "category": "context_clues",
    "keyword": "calculaterelevance",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "calculateRelevance"
    ],
    "description": "Code related to calculaterelevance",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.079Z"
  },
  "function:sendCommand": {
    "category": "code_functions",
    "keyword": "sendCommand",
    "files": [
      "rEngine/rengine-client.js"
    ],
    "functions": [
      "sendCommand"
    ],
    "description": "Function sendCommand in rengine-client.js",
    "context_weight": 0.9,
    "line_number": 12,
    "body_preview": "async function sendCommand(command, args = {}) { const url = `${RENGINE_URL}/command`; const payload = {",
    "context_clues": [
      "send",
      "command",
      "sendcommand",
      "sending",
      "rengine",
      "client"
    ],
    "last_updated": "2025-08-20T17:24:09.089Z"
  },
  "context:send": {
    "category": "context_clues",
    "keyword": "send",
    "files": [
      "rEngine/rengine-client.js"
    ],
    "functions": [
      "sendCommand"
    ],
    "description": "Code related to send",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.089Z"
  },
  "context:command": {
    "category": "context_clues",
    "keyword": "command",
    "files": [
      "rEngine/rengine-client.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "sendCommand",
      "parseArgs"
    ],
    "description": "Code related to command",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "context:sendcommand": {
    "category": "context_clues",
    "keyword": "sendcommand",
    "files": [
      "rEngine/rengine-client.js"
    ],
    "functions": [
      "sendCommand"
    ],
    "description": "Code related to sendcommand",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.089Z"
  },
  "context:sending": {
    "category": "context_clues",
    "keyword": "sending",
    "files": [
      "rEngine/rengine-client.js"
    ],
    "functions": [
      "sendCommand"
    ],
    "description": "Code related to sending",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.089Z"
  },
  "context:rengine": {
    "category": "context_clues",
    "keyword": "rengine",
    "files": [
      "rEngine/rengine-client.js"
    ],
    "functions": [
      "sendCommand",
      "main"
    ],
    "description": "Code related to rengine",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.090Z"
  },
  "file:rengine-client.js": {
    "category": "file_relationships",
    "keyword": "rengine-client.js",
    "primary_file": "rEngine/rengine-client.js",
    "functions": [
      "sendCommand",
      "main"
    ],
    "description": "File containing sendCommand and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.832Z"
  },
  "context:checkpoint": {
    "category": "context_clues",
    "keyword": "checkpoint",
    "files": [
      "rEngine/rengine-client.js"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to checkpoint",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.090Z"
  },
  "function:verbose": {
    "category": "code_functions",
    "keyword": "verbose",
    "files": [
      "rEngine/scribe-console.js"
    ],
    "functions": [
      "verbose"
    ],
    "description": "Function verbose in scribe-console.js",
    "context_weight": 0.9,
    "line_number": 31,
    "body_preview": "this.isVerbose = true; } log(message, level = 'INFO') {",
    "context_clues": [
      "verbose",
      "scribe",
      "console"
    ],
    "last_updated": "2025-08-20T17:24:09.101Z"
  },
  "context:verbose": {
    "category": "context_clues",
    "keyword": "verbose",
    "files": [
      "rEngine/scribe-console.js"
    ],
    "functions": [
      "verbose"
    ],
    "description": "Code related to verbose",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.101Z"
  },
  "context:scribe": {
    "category": "context_clues",
    "keyword": "scribe",
    "files": [
      "rEngine/scribe-console.js",
      "rEngine/document-scribe.js"
    ],
    "functions": [
      "verbose",
      "scanDir"
    ],
    "description": "Code related to scribe",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.101Z"
  },
  "context:console": {
    "category": "context_clues",
    "keyword": "console",
    "files": [
      "rEngine/scribe-console.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "verbose",
      "debugLog"
    ],
    "description": "Code related to console",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "file:scribe-console.js": {
    "category": "file_relationships",
    "keyword": "scribe-console.js",
    "primary_file": "rEngine/scribe-console.js",
    "functions": [
      "verbose"
    ],
    "description": "File containing verbose and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.834Z"
  },
  "context:make": {
    "category": "context_clues",
    "keyword": "make",
    "files": [
      "rEngine/smart-document-generator.js"
    ],
    "functions": [
      "requestFn"
    ],
    "description": "Code related to make",
    "context_weight": 0.6,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T01:47:39.842Z"
  },
  "context:smart": {
    "category": "context_clues",
    "keyword": "smart",
    "files": [
      "rEngine/smart-document-generator.js",
      "rEngine/test-smart-hello.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "requestFn",
      "shutdown",
      "testSmartHello",
      "smartHandoff"
    ],
    "description": "Code related to smart",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "file:smart-document-generator.js": {
    "category": "file_relationships",
    "keyword": "smart-document-generator.js",
    "primary_file": "rEngine/smart-document-generator.js",
    "functions": [
      "requestFn",
      "shutdown"
    ],
    "description": "File containing requestFn and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.845Z"
  },
  "function:shutdown": {
    "category": "code_functions",
    "keyword": "shutdown",
    "files": [
      "rEngine/smart-document-generator.js"
    ],
    "functions": [
      "shutdown"
    ],
    "description": "Function shutdown in smart-document-generator.js",
    "context_weight": 0.9,
    "line_number": 972,
    "body_preview": "if (this.rateLimiter && typeof this.rateLimiter.shutdown === 'function') { await this.rateLimiter.shutdown(); }",
    "context_clues": [
      "shutdown",
      "getstats",
      "smart",
      "document",
      "generator"
    ],
    "last_updated": "2025-08-20T01:47:39.845Z"
  },
  "context:shutdown": {
    "category": "context_clues",
    "keyword": "shutdown",
    "files": [
      "rEngine/smart-document-generator.js"
    ],
    "functions": [
      "shutdown"
    ],
    "description": "Code related to shutdown",
    "context_weight": 0.6,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T01:47:39.845Z"
  },
  "context:getstats": {
    "category": "context_clues",
    "keyword": "getstats",
    "files": [
      "rEngine/smart-document-generator.js",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "shutdown",
      "showStats",
      "showEntityTypes"
    ],
    "description": "Code related to getstats",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "function:testProviders": {
    "category": "code_functions",
    "keyword": "testProviders",
    "files": [
      "rEngine/test-ai-providers.js"
    ],
    "functions": [
      "testProviders"
    ],
    "description": "Function testProviders in test-ai-providers.js",
    "context_weight": 0.9,
    "line_number": 6,
    "body_preview": "async function testProviders() { console.log('🧪 Testing 5-Tier AI Provider System...\\n'); const testRequest = {",
    "context_clues": [
      "test",
      "providers"
    ],
    "last_updated": "2025-08-20T17:24:09.176Z"
  },
  "file:test-ai-providers.js": {
    "category": "file_relationships",
    "keyword": "test-ai-providers.js",
    "primary_file": "rEngine/test-ai-providers.js",
    "functions": [
      "testProviders"
    ],
    "description": "File containing testProviders and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.862Z"
  },
  "function:testGeminiDirect": {
    "category": "code_functions",
    "keyword": "testGeminiDirect",
    "files": [
      "rEngine/test-direct-apis.js"
    ],
    "functions": [
      "testGeminiDirect"
    ],
    "description": "Function testGeminiDirect in test-direct-apis.js",
    "context_weight": 0.9,
    "line_number": 13,
    "body_preview": "async function testGeminiDirect(message) { if (!GEMINI_API_KEY) { console.log('❌ GEMINI_API_KEY not found in environment');",
    "context_clues": [
      "test",
      "gemini",
      "direct",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:09.187Z"
  },
  "context:apis": {
    "category": "context_clues",
    "keyword": "apis",
    "files": [
      "rEngine/test-direct-apis.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "testGeminiDirect",
      "testGroqDirect",
      "createReadline",
      "promptHidden",
      "prompt",
      "validateApiKey",
      "loadEnvFile",
      "saveEnvFile",
      "testApiKey",
      "showStatus",
      "configureProvider",
      "checkHasApiKey",
      "runWizard",
      "testAllProviders",
      "parseArgs",
      "showHelp",
      "main",
      "onData"
    ],
    "description": "Code related to apis",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.187Z"
  },
  "file:test-direct-apis.js": {
    "category": "file_relationships",
    "keyword": "test-direct-apis.js",
    "primary_file": "rEngine/test-direct-apis.js",
    "functions": [
      "testGeminiDirect",
      "testGroqDirect"
    ],
    "description": "File containing testGeminiDirect and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.866Z"
  },
  "function:testGroqDirect": {
    "category": "code_functions",
    "keyword": "testGroqDirect",
    "files": [
      "rEngine/test-direct-apis.js"
    ],
    "functions": [
      "testGroqDirect"
    ],
    "description": "Function testGroqDirect in test-direct-apis.js",
    "context_weight": 0.9,
    "line_number": 38,
    "body_preview": "async function testGroqDirect(message) { if (!GROQ_API_KEY) { console.log('❌ GROQ_API_KEY not found in environment');",
    "context_clues": [
      "test",
      "groq",
      "direct",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:09.187Z"
  },
  "function:createTestLog": {
    "category": "code_functions",
    "keyword": "createTestLog",
    "files": [
      "rEngine/test-document-sweep-logs.js"
    ],
    "functions": [
      "createTestLog"
    ],
    "description": "Function createTestLog in test-document-sweep-logs.js",
    "context_weight": 0.9,
    "line_number": 38,
    "body_preview": "async function createTestLog() { try { // Ensure logs directory exists",
    "context_clues": [
      "create",
      "test",
      "log",
      "createtestlog",
      "write",
      "document",
      "sweep",
      "logs"
    ],
    "last_updated": "2025-08-20T17:24:09.197Z"
  },
  "context:createtestlog": {
    "category": "context_clues",
    "keyword": "createtestlog",
    "files": [
      "rEngine/test-document-sweep-logs.js"
    ],
    "functions": [
      "createTestLog"
    ],
    "description": "Code related to createtestlog",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.197Z"
  },
  "context:write": {
    "category": "context_clues",
    "keyword": "write",
    "files": [
      "rEngine/test-document-sweep-logs.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rScripts/sync_tasks.py",
      "rEngine/configure-apis.js",
      "rEngine/enhanced-memory-sync.js"
    ],
    "functions": [
      "createTestLog",
      "update_roadmap",
      "write_atomic",
      "calculate_hash",
      "backup_file",
      "promptHidden",
      "prompt",
      "onData",
      "main"
    ],
    "description": "Code related to write",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:logs": {
    "category": "context_clues",
    "keyword": "logs",
    "files": [
      "rEngine/test-document-sweep-logs.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "createTestLog",
      "logItemChanges",
      "debugLog"
    ],
    "description": "Code related to logs",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "file:test-document-sweep-logs.js": {
    "category": "file_relationships",
    "keyword": "test-document-sweep-logs.js",
    "primary_file": "rEngine/test-document-sweep-logs.js",
    "functions": [
      "createTestLog"
    ],
    "description": "File containing createTestLog and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.868Z"
  },
  "function:runTest": {
    "category": "code_functions",
    "keyword": "runTest",
    "files": [
      "rEngine/test-intelligence.js"
    ],
    "functions": [
      "runTest"
    ],
    "description": "Run the test",
    "context_weight": 0.9,
    "line_number": 144,
    "body_preview": "async function runTest() { const test = new IntelligenceTest(); const loaded = await test.loadAgentIntelligence();",
    "context_clues": [
      "run",
      "test",
      "runtest",
      "loaded",
      "loadagentintelligence",
      "ready",
      "check",
      "intelligence"
    ],
    "last_updated": "2025-08-20T17:24:09.209Z"
  },
  "context:runtest": {
    "category": "context_clues",
    "keyword": "runtest",
    "files": [
      "rEngine/test-intelligence.js"
    ],
    "functions": [
      "runTest"
    ],
    "description": "Code related to runtest",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.209Z"
  },
  "context:loaded": {
    "category": "context_clues",
    "keyword": "loaded",
    "files": [
      "rEngine/test-intelligence.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "runTest",
      "refreshLookupTable",
      "initializeAutocomplete",
      "load_json_memory_fallback"
    ],
    "description": "Code related to loaded",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.995Z"
  },
  "context:loadagentintelligence": {
    "category": "context_clues",
    "keyword": "loadagentintelligence",
    "files": [
      "rEngine/test-intelligence.js"
    ],
    "functions": [
      "runTest"
    ],
    "description": "Code related to loadagentintelligence",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.209Z"
  },
  "context:ready": {
    "category": "context_clues",
    "keyword": "ready",
    "files": [
      "rEngine/test-intelligence.js"
    ],
    "functions": [
      "runTest"
    ],
    "description": "Code related to ready",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.209Z"
  },
  "file:test-intelligence.js": {
    "category": "file_relationships",
    "keyword": "test-intelligence.js",
    "primary_file": "rEngine/test-intelligence.js",
    "functions": [
      "runTest"
    ],
    "description": "File containing runTest and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.870Z"
  },
  "function:mockRequest": {
    "category": "code_functions",
    "keyword": "mockRequest",
    "files": [
      "rEngine/test-rate-limiter.js"
    ],
    "functions": [
      "mockRequest"
    ],
    "description": "Function mockRequest in test-rate-limiter.js",
    "context_weight": 0.9,
    "line_number": 33,
    "body_preview": "const mockRequest = async () => { requestCount++; console.log(`   📞 Mock request #${requestCount}`);",
    "context_clues": [
      "mock",
      "request",
      "test",
      "rate",
      "limiter"
    ],
    "last_updated": "2025-08-20T17:24:09.222Z"
  },
  "context:mock": {
    "category": "context_clues",
    "keyword": "mock",
    "files": [
      "rEngine/test-rate-limiter.js"
    ],
    "functions": [
      "mockRequest"
    ],
    "description": "Code related to mock",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.222Z"
  },
  "file:test-rate-limiter.js": {
    "category": "file_relationships",
    "keyword": "test-rate-limiter.js",
    "primary_file": "rEngine/test-rate-limiter.js",
    "functions": [
      "mockRequest",
      "stressRequest",
      "chunkRequest"
    ],
    "description": "File containing mockRequest and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.874Z"
  },
  "function:stressRequest": {
    "category": "code_functions",
    "keyword": "stressRequest",
    "files": [
      "rEngine/test-rate-limiter.js"
    ],
    "functions": [
      "stressRequest"
    ],
    "description": "Function stressRequest in test-rate-limiter.js",
    "context_weight": 0.9,
    "line_number": 111,
    "body_preview": "const stressRequest = async () => { await new Promise(resolve => setTimeout(resolve, Math.random() * 100)); if (Math.random() < 0.3) {",
    "context_clues": [
      "stress",
      "request",
      "settimeout",
      "test",
      "rate",
      "limiter"
    ],
    "last_updated": "2025-08-20T17:24:09.222Z"
  },
  "context:stress": {
    "category": "context_clues",
    "keyword": "stress",
    "files": [
      "rEngine/test-rate-limiter.js"
    ],
    "functions": [
      "stressRequest"
    ],
    "description": "Code related to stress",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.222Z"
  },
  "context:settimeout": {
    "category": "context_clues",
    "keyword": "settimeout",
    "files": [
      "rEngine/test-rate-limiter.js",
      "rEngine/universal-agent-init.js"
    ],
    "functions": [
      "stressRequest",
      "chunkRequest",
      "ask"
    ],
    "description": "Code related to settimeout",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.266Z"
  },
  "function:chunkRequest": {
    "category": "code_functions",
    "keyword": "chunkRequest",
    "files": [
      "rEngine/test-rate-limiter.js"
    ],
    "functions": [
      "chunkRequest"
    ],
    "description": "Function chunkRequest in test-rate-limiter.js",
    "context_weight": 0.9,
    "line_number": 154,
    "body_preview": "const chunkRequest = async (chunk) => { // Simulate processing time await new Promise(resolve => setTimeout(resolve, Math.random() * 200));",
    "context_clues": [
      "chunk",
      "request",
      "processing",
      "settimeout",
      "test",
      "rate",
      "limiter"
    ],
    "last_updated": "2025-08-20T17:24:09.223Z"
  },
  "context:chunk": {
    "category": "context_clues",
    "keyword": "chunk",
    "files": [
      "rEngine/test-rate-limiter.js"
    ],
    "functions": [
      "chunkRequest"
    ],
    "description": "Code related to chunk",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.223Z"
  },
  "function:testGroq": {
    "category": "code_functions",
    "keyword": "testGroq",
    "files": [
      "rEngine/test-simple.js"
    ],
    "functions": [
      "testGroq"
    ],
    "description": "Test Groq API directly",
    "context_weight": 0.9,
    "line_number": 7,
    "body_preview": "async function testGroq() { const response = await fetch('https://api.groq.com/openai/v1/chat/completions', { method: 'POST',",
    "context_clues": [
      "test",
      "groq",
      "directly",
      "fetch",
      "openai",
      "process",
      "simple"
    ],
    "last_updated": "2025-08-20T17:24:09.234Z"
  },
  "context:directly": {
    "category": "context_clues",
    "keyword": "directly",
    "files": [
      "rEngine/test-simple.js"
    ],
    "functions": [
      "testGroq"
    ],
    "description": "Code related to directly",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.234Z"
  },
  "context:fetch": {
    "category": "context_clues",
    "keyword": "fetch",
    "files": [
      "rEngine/test-simple.js",
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rScripts/sync_tasks.py",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "testGroq",
      "testGemini",
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi",
      "fetchSpotPrice",
      "getEmbeddedChangelog",
      "fetch_tasks_from_memory",
      "callGemini",
      "callClaude",
      "callOpenAI",
      "callGroq"
    ],
    "description": "Code related to fetch",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:simple": {
    "category": "context_clues",
    "keyword": "simple",
    "files": [
      "rEngine/test-simple.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "testGroq",
      "testGemini",
      "runTests",
      "CustomMapping",
      "testApiKey"
    ],
    "description": "Code related to simple",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "file:test-simple.js": {
    "category": "file_relationships",
    "keyword": "test-simple.js",
    "primary_file": "rEngine/test-simple.js",
    "functions": [
      "testGroq",
      "testGemini",
      "runTests"
    ],
    "description": "File containing testGroq and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.879Z"
  },
  "function:testGemini": {
    "category": "code_functions",
    "keyword": "testGemini",
    "files": [
      "rEngine/test-simple.js"
    ],
    "functions": [
      "testGemini"
    ],
    "description": "Test Gemini API",
    "context_weight": 0.9,
    "line_number": 31,
    "body_preview": "async function testGemini() { const response = await fetch('https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=' + process.env.GEMINI_API_KEY, { method: 'POST',",
    "context_clues": [
      "test",
      "gemini",
      "fetch",
      "generatecontent",
      "process",
      "simple"
    ],
    "last_updated": "2025-08-20T17:24:09.234Z"
  },
  "function:runTests": {
    "category": "code_functions",
    "keyword": "runTests",
    "files": [
      "rEngine/test-simple.js"
    ],
    "functions": [
      "runTests"
    ],
    "description": "Function runTests in test-simple.js",
    "context_weight": 0.9,
    "line_number": 55,
    "body_preview": "async function runTests() { try { console.log('🚀 Testing Groq (Tier 1)...');",
    "context_clues": [
      "run",
      "tests",
      "runtests",
      "test",
      "simple"
    ],
    "last_updated": "2025-08-20T17:24:09.235Z"
  },
  "context:tests": {
    "category": "context_clues",
    "keyword": "tests",
    "files": [
      "rEngine/test-simple.js",
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "runTests",
      "testApiConnection"
    ],
    "description": "Code related to tests",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.362Z"
  },
  "context:runtests": {
    "category": "context_clues",
    "keyword": "runtests",
    "files": [
      "rEngine/test-simple.js"
    ],
    "functions": [
      "runTests"
    ],
    "description": "Code related to runtests",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.235Z"
  },
  "function:testSmartHello": {
    "category": "code_functions",
    "keyword": "testSmartHello",
    "files": [
      "rEngine/test-smart-hello.js"
    ],
    "functions": [
      "testSmartHello"
    ],
    "description": "Simulate the smart hello workflow",
    "context_weight": 0.9,
    "line_number": 11,
    "body_preview": "async function testSmartHello() { try { console.log('🤖 AI INCEPTION TEST: Copilot asking its Copilot for handoff...\\n');",
    "context_clues": [
      "test",
      "smart",
      "hello",
      "simulate",
      "workflow",
      "check",
      "process"
    ],
    "last_updated": "2025-08-20T17:24:09.249Z"
  },
  "context:hello": {
    "category": "context_clues",
    "keyword": "hello",
    "files": [
      "rEngine/test-smart-hello.js"
    ],
    "functions": [
      "testSmartHello"
    ],
    "description": "Code related to hello",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.249Z"
  },
  "context:workflow": {
    "category": "context_clues",
    "keyword": "workflow",
    "files": [
      "rEngine/test-smart-hello.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rScripts/dynamic_memory.py",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "testSmartHello",
      "_update_workflow_docs",
      "autoLoadContext",
      "checkSystemHealth",
      "generateAgentRecommendations",
      "displayContextSummary",
      "smartHandoff",
      "quickSetup",
      "checkDependencies",
      "buildSearchMatrix",
      "configureAPIs",
      "validateMemory",
      "testIntegrations",
      "analyzePainPoints",
      "detectPainPoint",
      "parseArgs",
      "showHelp",
      "main"
    ],
    "description": "Code related to workflow",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.265Z"
  },
  "file:test-smart-hello.js": {
    "category": "file_relationships",
    "keyword": "test-smart-hello.js",
    "primary_file": "rEngine/test-smart-hello.js",
    "functions": [
      "testSmartHello"
    ],
    "description": "File containing testSmartHello and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.881Z"
  },
  "function:ask": {
    "category": "code_functions",
    "keyword": "ask",
    "files": [
      "rEngine/universal-agent-init.js"
    ],
    "functions": [
      "ask"
    ],
    "description": "Function ask in universal-agent-init.js",
    "context_weight": 0.9,
    "line_number": 829,
    "body_preview": "const ask = async (question) => { const rl = readline.createInterface({ input: process.stdin, output: process.stdout }); return new Promise((resolve) => {",
    "context_clues": [
      "ask",
      "readline",
      "createinterface",
      "process",
      "set",
      "settimeout",
      "received",
      "reset",
      "close",
      "universal",
      "agent",
      "init"
    ],
    "last_updated": "2025-08-20T17:24:09.266Z"
  },
  "context:ask": {
    "category": "context_clues",
    "keyword": "ask",
    "files": [
      "rEngine/universal-agent-init.js",
      "scripts/heygemini.js"
    ],
    "functions": [
      "ask",
      "askGemini"
    ],
    "description": "Code related to ask",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.266Z"
  },
  "context:set": {
    "category": "context_clues",
    "keyword": "set",
    "files": [
      "rEngine/universal-agent-init.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/VulnTrackr/app.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "ask",
      "setProviderStatus",
      "setDefaultProvider",
      "updateColumnVisibility",
      "setTheme",
      "setupSystemThemeListener",
      "setTrackedPanel",
      "_update_memory_item",
      "cleanup_expired_leases",
      "validate_database_schema",
      "testApiKey",
      "showStats"
    ],
    "description": "Code related to set",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:received": {
    "category": "context_clues",
    "keyword": "received",
    "files": [
      "rEngine/universal-agent-init.js"
    ],
    "functions": [
      "ask"
    ],
    "description": "Code related to received",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.266Z"
  },
  "context:close": {
    "category": "context_clues",
    "keyword": "close",
    "files": [
      "rEngine/universal-agent-init.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "ask",
      "closeDetailsModal",
      "closeNumistaModal",
      "closeItemDetail",
      "closeModal",
      "closeModalById",
      "createStorageItemModal"
    ],
    "description": "Code related to close",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "context:init": {
    "category": "context_clues",
    "keyword": "init",
    "files": [
      "rEngine/universal-agent-init.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rScripts/deploy_agent_system.py",
      "rAgents/rScripts/dynamic_memory.py",
      "rAgents/rScripts/mcp_json_sync.py",
      "rAgents/rScripts/performance_analysis.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rAgents/rTemplates/bootstrap_agent_system.py"
    ],
    "functions": [
      "ask",
      "setupBasicEventListeners",
      "optimizeStoragePhase1C",
      "initTheme",
      "initDatabase",
      "initLocalStorage",
      "initSQLite",
      "__init__"
    ],
    "description": "Code related to init",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "file:universal-agent-init.js": {
    "category": "file_relationships",
    "keyword": "universal-agent-init.js",
    "primary_file": "rEngine/universal-agent-init.js",
    "functions": [
      "ask"
    ],
    "description": "File containing ask and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.884Z"
  },
  "function:updateAgentMemory": {
    "category": "code_functions",
    "keyword": "updateAgentMemory",
    "files": [
      "rEngine/update-agent-requirements.js"
    ],
    "functions": [
      "updateAgentMemory"
    ],
    "description": "Function updateAgentMemory in update-agent-requirements.js",
    "context_weight": 0.9,
    "line_number": 79,
    "body_preview": "async function updateAgentMemory(agentFile) { const filePath = path.join(AGENT_MEMORY_DIR, agentFile); try {",
    "context_clues": [
      "update",
      "agent",
      "memory",
      "updateagentmemory",
      "read",
      "readfilesync",
      "parse",
      "requirements"
    ],
    "last_updated": "2025-08-20T17:24:09.281Z"
  },
  "context:updateagentmemory": {
    "category": "context_clues",
    "keyword": "updateagentmemory",
    "files": [
      "rEngine/update-agent-requirements.js"
    ],
    "functions": [
      "updateAgentMemory"
    ],
    "description": "Code related to updateagentmemory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.281Z"
  },
  "context:read": {
    "category": "context_clues",
    "keyword": "read",
    "files": [
      "rEngine/update-agent-requirements.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rScripts/sync_tasks.py",
      "rEngine/call-llm.js",
      "scripts/utilities/analyze_collect_buttons.js",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/update-documentation-links.js"
    ],
    "functions": [
      "updateAgentMemory",
      "fetch_tasks_from_memory",
      "calculate_hash",
      "backup_file",
      "handleMCPMode",
      "analyzeCollectButtons",
      "cleanCombinedFile",
      "updateDocumentationLinks"
    ],
    "description": "Code related to read",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.439Z"
  },
  "context:readfilesync": {
    "category": "context_clues",
    "keyword": "readfilesync",
    "files": [
      "rEngine/update-agent-requirements.js"
    ],
    "functions": [
      "updateAgentMemory"
    ],
    "description": "Code related to readfilesync",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.281Z"
  },
  "context:requirements": {
    "category": "context_clues",
    "keyword": "requirements",
    "files": [
      "rEngine/update-agent-requirements.js"
    ],
    "functions": [
      "updateAgentMemory"
    ],
    "description": "Code related to requirements",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.281Z"
  },
  "file:update-agent-requirements.js": {
    "category": "file_relationships",
    "keyword": "update-agent-requirements.js",
    "primary_file": "rEngine/update-agent-requirements.js",
    "functions": [
      "updateAgentMemory"
    ],
    "description": "File containing updateAgentMemory and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.890Z"
  },
  "function:findHTMLFiles": {
    "category": "code_functions",
    "keyword": "findHTMLFiles",
    "files": [
      "rEngine/update-footer-branding.js"
    ],
    "functions": [
      "findHTMLFiles"
    ],
    "description": "Function findHTMLFiles in update-footer-branding.js",
    "context_weight": 0.9,
    "line_number": 70,
    "body_preview": "async function findHTMLFiles(dir) { const files = []; const items = await fs.readdir(dir);",
    "context_clues": [
      "find",
      "files",
      "findhtmlfiles",
      "readdir",
      "update",
      "footer",
      "branding"
    ],
    "last_updated": "2025-08-20T17:24:09.292Z"
  },
  "context:files": {
    "category": "context_clues",
    "keyword": "files",
    "files": [
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/api.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "findHTMLFiles",
      "showFilesModal",
      "hideFilesModal",
      "downloadCompleteBackup",
      "sync_memory_files",
      "backup_json_files",
      "findCombinedFiles",
      "moveFilesToCorrectLocations",
      "findFilesRecursively",
      "countFiles"
    ],
    "description": "Code related to files",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:findhtmlfiles": {
    "category": "context_clues",
    "keyword": "findhtmlfiles",
    "files": [
      "rEngine/update-footer-branding.js"
    ],
    "functions": [
      "findHTMLFiles"
    ],
    "description": "Code related to findhtmlfiles",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.292Z"
  },
  "context:footer": {
    "category": "context_clues",
    "keyword": "footer",
    "files": [
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "findHTMLFiles",
      "updateHTMLFile",
      "main",
      "getFooterDomain",
      "updateStorageStats"
    ],
    "description": "Code related to footer",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:branding": {
    "category": "context_clues",
    "keyword": "branding",
    "files": [
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "findHTMLFiles",
      "updateHTMLFile",
      "main",
      "getBrandingName",
      "getAppTitle"
    ],
    "description": "Code related to branding",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "file:update-footer-branding.js": {
    "category": "file_relationships",
    "keyword": "update-footer-branding.js",
    "primary_file": "rEngine/update-footer-branding.js",
    "functions": [
      "findHTMLFiles",
      "updateHTMLFile",
      "main"
    ],
    "description": "File containing findHTMLFiles and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.893Z"
  },
  "function:updateHTMLFile": {
    "category": "code_functions",
    "keyword": "updateHTMLFile",
    "files": [
      "rEngine/update-footer-branding.js"
    ],
    "functions": [
      "updateHTMLFile"
    ],
    "description": "Function updateHTMLFile in update-footer-branding.js",
    "context_weight": 0.9,
    "line_number": 88,
    "body_preview": "async function updateHTMLFile(filePath) { try { let content = await fs.readFile(filePath, 'utf8');",
    "context_clues": [
      "update",
      "file",
      "updatehtmlfile",
      "readfile",
      "updated",
      "check",
      "add",
      "footer",
      "branding"
    ],
    "last_updated": "2025-08-20T17:24:09.292Z"
  },
  "context:updatehtmlfile": {
    "category": "context_clues",
    "keyword": "updatehtmlfile",
    "files": [
      "rEngine/update-footer-branding.js"
    ],
    "functions": [
      "updateHTMLFile"
    ],
    "description": "Code related to updatehtmlfile",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.292Z"
  },
  "context:readfile": {
    "category": "context_clues",
    "keyword": "readfile",
    "files": [
      "rEngine/update-footer-branding.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/fix-documentation-links.js",
      "scripts/utilities/update-documentation-links.js"
    ],
    "functions": [
      "updateHTMLFile",
      "loadEnvFile",
      "loadSearchMatrix",
      "getUserPreferences",
      "configureAPIs",
      "cleanCombinedFile",
      "regenerateFormats",
      "fixFileLinks",
      "updateDocumentationLinks"
    ],
    "description": "Code related to readfile",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.439Z"
  },
  "context:updated": {
    "category": "context_clues",
    "keyword": "updated",
    "files": [
      "rEngine/update-footer-branding.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "updateHTMLFile",
      "syncAllProviders",
      "logItemChanges",
      "update_roadmap"
    ],
    "description": "Code related to updated",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:updater": {
    "category": "context_clues",
    "keyword": "updater",
    "files": [
      "rEngine/update-footer-branding.js"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to updater",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.292Z"
  },
  "function:showAboutModal": {
    "category": "code_functions",
    "keyword": "showAboutModal",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "showAboutModal"
    ],
    "description": "ABOUT & DISCLAIMER MODAL - Enhanced =============================================================================  Shows the About modal and populates it with current data ",
    "context_weight": 0.9,
    "line_number": 7,
    "body_preview": "const showAboutModal = () => { if (elements.aboutModal) { populateAboutModal();",
    "context_clues": [
      "show",
      "about",
      "modal",
      "disclaimer",
      "enhanced",
      "shows",
      "populates",
      "with",
      "current",
      "data",
      "openmodalbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.319Z"
  },
  "context:about": {
    "category": "context_clues",
    "keyword": "about",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "showAboutModal",
      "hideAboutModal",
      "showAckModal",
      "hideAckModal",
      "acceptAck",
      "populateAboutModal",
      "populateAckModal",
      "loadAnnouncements",
      "section",
      "parseList",
      "showFullChangelog",
      "setupAboutModalEvents",
      "setupAckModalEvents"
    ],
    "description": "Code related to about",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "context:modal": {
    "category": "context_clues",
    "keyword": "modal",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/debugModal.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "showAboutModal",
      "hideAboutModal",
      "showAckModal",
      "hideAckModal",
      "acceptAck",
      "populateAboutModal",
      "populateAckModal",
      "setupAboutModalEvents",
      "setupAckModalEvents",
      "showApiHistoryModal",
      "hideApiHistoryModal",
      "showApiProvidersModal",
      "hideApiProvidersModal",
      "clearApiHistory",
      "showApiModal",
      "hideApiModal",
      "showFilesModal",
      "hideFilesModal",
      "showProviderInfo",
      "hideProviderInfo",
      "showDebugModal",
      "hideDebugModal",
      "getBreakdownData",
      "showDetailsModal",
      "closeDetailsModal",
      "showNotes",
      "editItem",
      "openNumistaModal",
      "closeNumistaModal",
      "numistaGoBack",
      "numistaGoForward",
      "updateNavButtons",
      "trapFocus",
      "closeModal",
      "openStorageReportPopup",
      "closeModalById",
      "openModalById",
      "createStorageItemModal",
      "checkVersionChange",
      "populateVersionModal",
      "setupVersionModalEvents"
    ],
    "description": "Code related to modal",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:disclaimer": {
    "category": "context_clues",
    "keyword": "disclaimer",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "showAboutModal"
    ],
    "description": "Code related to disclaimer",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.319Z"
  },
  "context:shows": {
    "category": "context_clues",
    "keyword": "shows",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "showAboutModal",
      "showAckModal",
      "showFullChangelog",
      "showApiHistoryModal",
      "showApiProvidersModal",
      "showApiModal",
      "showProviderInfo",
      "showManualInput",
      "showDetailsModal",
      "downloadStorageReport",
      "checkVersionChange",
      "populateVersionModal"
    ],
    "description": "Code related to shows",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:populates": {
    "category": "context_clues",
    "keyword": "populates",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "showAboutModal",
      "populateAboutModal",
      "populateAckModal",
      "loadAnnouncements",
      "showApiModal",
      "populateVersionModal"
    ],
    "description": "Code related to populates",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:current": {
    "category": "context_clues",
    "keyword": "current",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/search.js",
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "showAboutModal",
      "populateAboutModal",
      "extractUniqueValues",
      "generateLookupTable",
      "loadLookupTable",
      "getLookupStats",
      "refreshLookupTable",
      "initializeAutocomplete",
      "getChartBackgroundColor",
      "getChartTextColor",
      "list",
      "updateColumnVisibility",
      "updateEncryptionUI",
      "renderActiveFilters",
      "saveInventory",
      "updateItemCount",
      "exportCsv",
      "exportJson",
      "exportPdf",
      "calculateTotalPages",
      "filterInventory",
      "sortInventory",
      "fetchSpotPrice",
      "todayStr",
      "currentMonthKey",
      "checkVersionChange",
      "populateVersionModal",
      "setupVersionModalEvents",
      "storeCurrentResults"
    ],
    "description": "Code related to current",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:data": {
    "category": "context_clues",
    "keyword": "data",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/report-generator.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "showAboutModal",
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "updateProviderHistoryTables",
      "refreshFromCache",
      "loadApiCache",
      "saveApiCache",
      "createBackupData",
      "extractUniqueValues",
      "buildSearchIndices",
      "generateLookupTable",
      "createEmptyLookupTable",
      "loadLookupTable",
      "refreshLookupTable",
      "initializeAutocomplete",
      "createPieChart",
      "getBreakdownData",
      "createBreakdownElements",
      "hasMatchingData",
      "createBackupZip",
      "restoreBackupZip",
      "generateBackupHtml",
      "loadInventory",
      "hideEmptyColumns",
      "importCsv",
      "importNumistaCsv",
      "importJson",
      "calculateTotalPages",
      "saveData",
      "loadData",
      "saveDataSync",
      "loadDataSync",
      "sortInventoryByDateNewestFirst",
      "validateInventoryItem",
      "sanitizeImportedItem",
      "analyzeStorageData",
      "generateItemDataTable",
      "generateStorageReportTar",
      "getEmbeddedChangelog",
      "generateHTMLReport",
      "updateHistoryCharts",
      "createHistoryChart",
      "applyFormulaToData",
      "generateSampleData",
      "processVPRData",
      "onData"
    ],
    "description": "Code related to data",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.896Z"
  },
  "context:openmodalbyid": {
    "category": "context_clues",
    "keyword": "openmodalbyid",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/debugModal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "showAboutModal",
      "showAckModal",
      "hideApiModal",
      "showFilesModal",
      "showDebugModal",
      "openModalById"
    ],
    "description": "Code related to openmodalbyid",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "file:about.js": {
    "category": "file_relationships",
    "keyword": "about.js",
    "primary_file": "rProjects/StackTrackr/js/about.js",
    "functions": [
      "showAboutModal",
      "hideAboutModal",
      "showAckModal",
      "hideAckModal",
      "acceptAck",
      "populateAboutModal",
      "populateAckModal",
      "loadAnnouncements",
      "section",
      "parseList",
      "showFullChangelog",
      "setupAboutModalEvents",
      "setupAckModalEvents",
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap"
    ],
    "description": "File containing showAboutModal and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.902Z"
  },
  "function:hideAboutModal": {
    "category": "code_functions",
    "keyword": "hideAboutModal",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "hideAboutModal"
    ],
    "description": " Hides the About modal ",
    "context_weight": 0.9,
    "line_number": 21,
    "body_preview": "const hideAboutModal = () => { if (elements.aboutModal) { if (window.closeModalById) closeModalById('aboutModal');",
    "context_clues": [
      "hide",
      "about",
      "modal",
      "hides",
      "closemodalbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.319Z"
  },
  "context:hide": {
    "category": "context_clues",
    "keyword": "hide",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/debugModal.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "hideAboutModal",
      "hideAckModal",
      "hideApiHistoryModal",
      "hideApiProvidersModal",
      "hideApiModal",
      "hideFilesModal",
      "hideProviderInfo",
      "hideManualInput",
      "hideDebugModal",
      "hideEmptyColumns"
    ],
    "description": "Code related to hide",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:hides": {
    "category": "context_clues",
    "keyword": "hides",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "hideAboutModal",
      "hideAckModal",
      "acceptAck",
      "hideApiHistoryModal",
      "hideApiProvidersModal",
      "hideApiModal",
      "hideProviderInfo",
      "hideManualInput",
      "hideEmptyColumns"
    ],
    "description": "Code related to hides",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:closemodalbyid": {
    "category": "context_clues",
    "keyword": "closemodalbyid",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/debugModal.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "hideAboutModal",
      "hideAckModal",
      "hideFilesModal",
      "hideDebugModal",
      "closeDetailsModal",
      "closeModalById"
    ],
    "description": "Code related to closemodalbyid",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "function:showAckModal": {
    "category": "code_functions",
    "keyword": "showAckModal",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "showAckModal"
    ],
    "description": " Shows the acknowledgment modal on load ",
    "context_weight": 0.9,
    "line_number": 34,
    "body_preview": "const showAckModal = () => { const ackModal = document.getElementById(\"ackModal\"); if (ackModal && !localStorage.getItem(ACK_DISMISSED_KEY)) {",
    "context_clues": [
      "show",
      "ack",
      "modal",
      "shows",
      "acknowledgment",
      "load",
      "getelementbyid",
      "getitem",
      "openmodalbyid",
      "about"
    ],
    "last_updated": "2025-08-20T17:24:09.319Z"
  },
  "context:ack": {
    "category": "context_clues",
    "keyword": "ack",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "showAckModal",
      "hideAckModal",
      "acceptAck",
      "populateAckModal",
      "setupAckModalEvents"
    ],
    "description": "Code related to ack",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "context:acknowledgment": {
    "category": "context_clues",
    "keyword": "acknowledgment",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "showAckModal",
      "hideAckModal",
      "acceptAck",
      "populateAckModal",
      "setupAckModalEvents",
      "setupVersionModalEvents"
    ],
    "description": "Code related to acknowledgment",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:load": {
    "category": "context_clues",
    "keyword": "load",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/rsynk-integration.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rEngine/validate_schema.py",
      "rAgents/rLegacy/engine/validate_schema.py",
      "rAgents/rScripts/dynamic_memory.py",
      "rAgents/rScripts/sync_tasks.py",
      "rAgents/rTemplates/bootstrap_agent_system.py",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "showAckModal",
      "loadAnnouncements",
      "loadApiConfig",
      "loadApiCache",
      "loadLookupTable",
      "sanitizeTablesOnLoad",
      "loadInventory",
      "initializerSynk",
      "loadSpotHistory",
      "fetchSpotPrice",
      "initTheme",
      "loadData",
      "loadDataSync",
      "_add_to_sync_config",
      "fetch_tasks_from_memory",
      "load_json_memory_fallback",
      "get_available_tasks_from_json",
      "load_backup_memory",
      "load_schema",
      "validate_file",
      "__init__",
      "loadEnvFile",
      "loadSearchMatrix",
      "autoLoadContext",
      "smartHandoff",
      "showHelp"
    ],
    "description": "Code related to load",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "context:getelementbyid": {
    "category": "context_clues",
    "keyword": "getelementbyid",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/debugModal.js",
      "rProjects/StackTrackr/js/encryption.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "showAckModal",
      "hideAckModal",
      "populateAboutModal",
      "populateAckModal",
      "loadAnnouncements",
      "setupAboutModalEvents",
      "setupAckModalEvents",
      "displayAIInsights",
      "renderApiStatusSummary",
      "updateBatchCalculation",
      "updateProviderSettings",
      "setupProviderSettingsListeners",
      "renderApiHistoryTable",
      "showApiHistoryModal",
      "hideApiHistoryModal",
      "showApiProvidersModal",
      "hideApiProvidersModal",
      "handleProviderSync",
      "updateSyncButtonStates",
      "showApiModal",
      "hideApiModal",
      "showFilesModal",
      "hideFilesModal",
      "showProviderInfo",
      "hideProviderInfo",
      "showManualInput",
      "hideManualInput",
      "injectVersionString",
      "showDebugModal",
      "hideDebugModal",
      "isUnlocked",
      "setupColumnResizing",
      "setupBulkEditControls",
      "setupApiEvents",
      "setupEncryptionEvents",
      "updateEncryptionUI",
      "clearAllFilters",
      "renderActiveFilters",
      "setupBasicEventListeners",
      "showNotes",
      "closeNumistaModal",
      "numistaGoBack",
      "numistaGoForward",
      "updateNavButtons",
      "initializeStorageChart",
      "showItemDetail",
      "closeItemDetail",
      "downloadStorageReport",
      "openStorageReportPopup",
      "closeModalById",
      "populateVersionModal",
      "setupVersionModalEvents",
      "createHistoryChart",
      "createHistoryTable",
      "renderTable",
      "renderChart",
      "storeCurrentResults",
      "updateProgressBar",
      "setTrackedPanel",
      "renderHistories"
    ],
    "description": "Code related to getelementbyid",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "context:getitem": {
    "category": "context_clues",
    "keyword": "getitem",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/debug-log.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/rsynk-integration.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "showAckModal",
      "loadApiConfig",
      "refreshProviderStatuses",
      "loadApiCache",
      "getCachedLookupTable",
      "isEnabled",
      "log",
      "updateThemeButton",
      "setupThemeToggle",
      "getNextSerial",
      "initializerSynk",
      "fetchSpotPrice",
      "initTheme",
      "toggleTheme",
      "setupSystemThemeListener",
      "generateStorageReport",
      "saveDataSync",
      "loadDataSync",
      "updateStorageStats",
      "analyzeStorageData",
      "checkVersionChange",
      "updateHistoryCharts",
      "saveResultsToHistory",
      "initLocalStorage"
    ],
    "description": "Code related to getitem",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "function:hideAckModal": {
    "category": "code_functions",
    "keyword": "hideAckModal",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "hideAckModal"
    ],
    "description": " Hides the acknowledgment modal ",
    "context_weight": 0.9,
    "line_number": 49,
    "body_preview": "const hideAckModal = () => { const ackModal = document.getElementById(\"ackModal\"); if (ackModal) {",
    "context_clues": [
      "hide",
      "ack",
      "modal",
      "hides",
      "acknowledgment",
      "getelementbyid",
      "closemodalbyid",
      "about"
    ],
    "last_updated": "2025-08-20T17:24:09.319Z"
  },
  "function:acceptAck": {
    "category": "code_functions",
    "keyword": "acceptAck",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "acceptAck"
    ],
    "description": " Accepts the acknowledgment and hides the modal ",
    "context_weight": 0.9,
    "line_number": 63,
    "body_preview": "const acceptAck = () => { localStorage.setItem(ACK_DISMISSED_KEY, \"1\"); hideAckModal();",
    "context_clues": [
      "accept",
      "ack",
      "accepts",
      "acknowledgment",
      "hides",
      "modal",
      "setitem",
      "update",
      "about"
    ],
    "last_updated": "2025-08-20T17:24:09.320Z"
  },
  "context:accept": {
    "category": "context_clues",
    "keyword": "accept",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "acceptAck",
      "accept"
    ],
    "description": "Code related to accept",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:accepts": {
    "category": "context_clues",
    "keyword": "accepts",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "acceptAck"
    ],
    "description": "Code related to accepts",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.320Z"
  },
  "context:setitem": {
    "category": "context_clues",
    "keyword": "setitem",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "acceptAck",
      "clearChangeLog",
      "restoreBackupZip",
      "setTheme",
      "saveDataSync",
      "accept",
      "setTrackedPanel",
      "initLocalStorage"
    ],
    "description": "Code related to setitem",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "function:populateAboutModal": {
    "category": "code_functions",
    "keyword": "populateAboutModal",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "populateAboutModal"
    ],
    "description": " Populates the about modal with current version and changelog information ",
    "context_weight": 0.9,
    "line_number": 71,
    "body_preview": "const populateAboutModal = () => { // Update version displays const aboutVersion = document.getElementById(\"aboutVersion\");",
    "context_clues": [
      "populate",
      "about",
      "modal",
      "populates",
      "with",
      "current",
      "version",
      "changelog",
      "information",
      "update",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.320Z"
  },
  "context:populate": {
    "category": "context_clues",
    "keyword": "populate",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "populateAboutModal",
      "populateAckModal",
      "populateVersionModal"
    ],
    "description": "Code related to populate",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:version": {
    "category": "context_clues",
    "keyword": "version",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rAgents/rLegacy/version-manager.js",
      "rAgents/version-manager.js"
    ],
    "functions": [
      "populateAboutModal",
      "populateAckModal",
      "getVersionString",
      "injectVersionString",
      "safeAttachListener",
      "createDummyElement",
      "getAppTitle",
      "checkVersionChange",
      "getChangelogForVersion",
      "populateVersionModal",
      "getEmbeddedChangelog",
      "setupVersionModalEvents",
      "main"
    ],
    "description": "Code related to version",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.327Z"
  },
  "context:changelog": {
    "category": "context_clues",
    "keyword": "changelog",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "populateAboutModal",
      "loadAnnouncements",
      "showFullChangelog",
      "logItemChanges",
      "renderChangeLog",
      "toggleChange",
      "clearChangeLog",
      "checkVersionChange",
      "getChangelogForVersion",
      "populateVersionModal",
      "getEmbeddedChangelog"
    ],
    "description": "Code related to changelog",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:information": {
    "category": "context_clues",
    "keyword": "information",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "populateAboutModal",
      "populateAckModal",
      "showProviderInfo",
      "hideProviderInfo",
      "detectCurrency"
    ],
    "description": "Code related to information",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "function:populateAckModal": {
    "category": "code_functions",
    "keyword": "populateAckModal",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "populateAckModal"
    ],
    "description": " Populates the acknowledgment modal with version information ",
    "context_weight": 0.9,
    "line_number": 96,
    "body_preview": "const populateAckModal = () => { const ackVersion = document.getElementById(\"ackVersion\"); const ackAppName = document.getElementById(\"ackAppName\");",
    "context_clues": [
      "populate",
      "ack",
      "modal",
      "populates",
      "acknowledgment",
      "with",
      "version",
      "information",
      "getelementbyid",
      "getbrandingname",
      "about"
    ],
    "last_updated": "2025-08-20T17:24:09.320Z"
  },
  "context:getbrandingname": {
    "category": "context_clues",
    "keyword": "getbrandingname",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "populateAckModal",
      "getBrandingName"
    ],
    "description": "Code related to getbrandingname",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "function:loadAnnouncements": {
    "category": "code_functions",
    "keyword": "loadAnnouncements",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "loadAnnouncements"
    ],
    "description": " Loads announcements and populates changelog and roadmap sections ",
    "context_weight": 0.9,
    "line_number": 110,
    "body_preview": "const loadAnnouncements = async () => { const latestList = document.getElementById(\"aboutChangelogLatest\"); const roadmapTargets = [",
    "context_clues": [
      "load",
      "announcements",
      "loads",
      "populates",
      "changelog",
      "roadmap",
      "sections",
      "loadannouncements",
      "getelementbyid",
      "filter",
      "about"
    ],
    "last_updated": "2025-08-20T17:24:09.320Z"
  },
  "context:announcements": {
    "category": "context_clues",
    "keyword": "announcements",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "loadAnnouncements",
      "getEmbeddedWhatsNew"
    ],
    "description": "Code related to announcements",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.322Z"
  },
  "context:loads": {
    "category": "context_clues",
    "keyword": "loads",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "loadAnnouncements",
      "loadApiConfig",
      "loadApiCache",
      "sanitizeTablesOnLoad",
      "loadInventory",
      "saveSpotHistory",
      "loadSpotHistory"
    ],
    "description": "Code related to loads",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.727Z"
  },
  "context:roadmap": {
    "category": "context_clues",
    "keyword": "roadmap",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "loadAnnouncements",
      "getEmbeddedRoadmap",
      "update_roadmap"
    ],
    "description": "Code related to roadmap",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:sections": {
    "category": "context_clues",
    "keyword": "sections",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "loadAnnouncements"
    ],
    "description": "Code related to sections",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.320Z"
  },
  "context:loadannouncements": {
    "category": "context_clues",
    "keyword": "loadannouncements",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "loadAnnouncements"
    ],
    "description": "Code related to loadannouncements",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.320Z"
  },
  "context:filter": {
    "category": "context_clues",
    "keyword": "filter",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/search.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "loadAnnouncements",
      "section",
      "parseList",
      "updateBatchCalculation",
      "updateDefaultProviderButtons",
      "renderApiHistoryTable",
      "showApiHistoryModal",
      "clearApiKey",
      "removeFilter",
      "simplifyChipValue",
      "hasMatchingData",
      "renderActiveFilters",
      "filterInventoryAdvanced",
      "applyQuickFilter",
      "applyColumnFilter",
      "filterLink",
      "formatPurchaseLocation",
      "updateTypeSummary",
      "filterInventory",
      "purgeSpotHistory",
      "parseCSVFile",
      "searchMatrix"
    ],
    "description": "Code related to filter",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "function:section": {
    "category": "code_functions",
    "keyword": "section",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "section"
    ],
    "description": "Function section in about.js",
    "context_weight": 0.9,
    "line_number": 124,
    "body_preview": "const section = (name) => { const regex = new RegExp(`##\\\\s+${name}\\\\n([\\\\s\\\\S]*?)(?=##|$)`, \"i\"); const match = text.match(regex);",
    "context_clues": [
      "section",
      "parselist",
      "filter",
      "startswith",
      "about"
    ],
    "last_updated": "2025-08-20T17:24:09.320Z"
  },
  "context:section": {
    "category": "context_clues",
    "keyword": "section",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "section",
      "getChangelogForVersion"
    ],
    "description": "Code related to section",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:parselist": {
    "category": "context_clues",
    "keyword": "parselist",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "section",
      "parseList"
    ],
    "description": "Code related to parselist",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "function:parseList": {
    "category": "code_functions",
    "keyword": "parseList",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "parseList"
    ],
    "description": "Function parseList in about.js",
    "context_weight": 0.9,
    "line_number": 130,
    "body_preview": "const parseList = (content) => content .split(\"\\n\")",
    "context_clues": [
      "parse",
      "list",
      "parselist",
      "filter",
      "startswith",
      "about"
    ],
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "context:list": {
    "category": "context_clues",
    "keyword": "list",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/catalog-providers.js",
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "parseList",
      "list"
    ],
    "description": "Code related to list",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "function:showFullChangelog": {
    "category": "code_functions",
    "keyword": "showFullChangelog",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "showFullChangelog"
    ],
    "description": " Shows full changelog in a new window or navigates to documentation ",
    "context_weight": 0.9,
    "line_number": 176,
    "body_preview": "const showFullChangelog = () => { // Try to open changelog documentation const urls = [",
    "context_clues": [
      "show",
      "full",
      "changelog",
      "shows",
      "window",
      "navigates",
      "documentation",
      "open",
      "readme",
      "about"
    ],
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "context:full": {
    "category": "context_clues",
    "keyword": "full",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "showFullChangelog",
      "getAppTitle",
      "getChangelogForVersion"
    ],
    "description": "Code related to full",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:window": {
    "category": "context_clues",
    "keyword": "window",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "showFullChangelog"
    ],
    "description": "Code related to window",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "context:navigates": {
    "category": "context_clues",
    "keyword": "navigates",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "showFullChangelog",
      "numistaGoBack",
      "numistaGoForward",
      "goToPage"
    ],
    "description": "Code related to navigates",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.664Z"
  },
  "context:documentation": {
    "category": "context_clues",
    "keyword": "documentation",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/constants.js",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/cleanup-docs-structure.js",
      "scripts/utilities/fix-documentation-links.js",
      "scripts/utilities/update-documentation-links.js"
    ],
    "functions": [
      "showFullChangelog",
      "getTemplateVariables",
      "cleanCombinedDocumentation",
      "cleanupDocumentationStructure",
      "fixDocumentationLinks",
      "fixFileLinks",
      "updateDocumentationLinks"
    ],
    "description": "Code related to documentation",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.439Z"
  },
  "context:readme": {
    "category": "context_clues",
    "keyword": "readme",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "showFullChangelog",
      "generateReadmeContent"
    ],
    "description": "Code related to readme",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "function:setupAboutModalEvents": {
    "category": "code_functions",
    "keyword": "setupAboutModalEvents",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "setupAboutModalEvents"
    ],
    "description": " Sets up event listeners for about modal elements ",
    "context_weight": 0.9,
    "line_number": 191,
    "body_preview": "const setupAboutModalEvents = () => { const aboutCloseBtn = document.getElementById(\"aboutCloseBtn\"); const aboutShowChangelogBtn = document.getElementById(",
    "context_clues": [
      "setup",
      "about",
      "modal",
      "events",
      "sets",
      "event",
      "listeners",
      "elements",
      "setupaboutmodalevents",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "context:events": {
    "category": "context_clues",
    "keyword": "events",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "setupAboutModalEvents",
      "setupAckModalEvents",
      "safeAttachListener",
      "setupColumnResizing",
      "updateColumnVisibility",
      "setupResponsiveColumns",
      "setupEventListeners",
      "setupPagination",
      "setupBulkEditControls",
      "setupSearch",
      "updateThemeButton",
      "setupThemeToggle",
      "setupApiEvents",
      "setupEncryptionEvents",
      "updateEncryptionUI",
      "setupVersionModalEvents"
    ],
    "description": "Code related to events",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:sets": {
    "category": "context_clues",
    "keyword": "sets",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rScripts/performance_analysis.py"
    ],
    "functions": [
      "setupAboutModalEvents",
      "setupAckModalEvents",
      "getCacheDurationMs",
      "setProviderStatus",
      "setupProviderSettingsListeners",
      "setupResponsiveColumns",
      "setupEventListeners",
      "setupPagination",
      "setupBulkEditControls",
      "setupSearch",
      "updateThemeButton",
      "setupApiEvents",
      "setupEncryptionEvents",
      "setTheme",
      "setupSystemThemeListener",
      "openModalById",
      "setupVersionModalEvents",
      "__init__"
    ],
    "description": "Code related to sets",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.287Z"
  },
  "context:event": {
    "category": "context_clues",
    "keyword": "event",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "setupAboutModalEvents",
      "setupAckModalEvents",
      "setupProviderSettingsListeners",
      "safeAttachListener",
      "setupEventListeners",
      "setupPagination",
      "setupBulkEditControls",
      "setupSearch",
      "updateThemeButton",
      "setupApiEvents",
      "setupEncryptionEvents",
      "setupBasicEventListeners",
      "setupVersionModalEvents"
    ],
    "description": "Code related to event",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:listeners": {
    "category": "context_clues",
    "keyword": "listeners",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "setupAboutModalEvents",
      "setupAckModalEvents",
      "setupProviderSettingsListeners",
      "safeAttachListener",
      "setupEventListeners",
      "setupPagination",
      "setupBulkEditControls",
      "setupSearch",
      "updateThemeButton",
      "setupApiEvents",
      "setupBasicEventListeners"
    ],
    "description": "Code related to listeners",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "context:elements": {
    "category": "context_clues",
    "keyword": "elements",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "setupAboutModalEvents",
      "setupAckModalEvents",
      "createBreakdownElements",
      "createDummyElement"
    ],
    "description": "Code related to elements",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.607Z"
  },
  "context:setupaboutmodalevents": {
    "category": "context_clues",
    "keyword": "setupaboutmodalevents",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "setupAboutModalEvents"
    ],
    "description": "Code related to setupaboutmodalevents",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "function:setupAckModalEvents": {
    "category": "code_functions",
    "keyword": "setupAckModalEvents",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "setupAckModalEvents"
    ],
    "description": " Sets up event listeners for acknowledgment modal elements ",
    "context_weight": 0.9,
    "line_number": 239,
    "body_preview": "const setupAckModalEvents = () => { const ackCloseBtn = document.getElementById(\"ackCloseBtn\"); const ackAcceptBtn = document.getElementById(\"ackAcceptBtn\");",
    "context_clues": [
      "setup",
      "ack",
      "modal",
      "events",
      "sets",
      "event",
      "listeners",
      "acknowledgment",
      "elements",
      "setupackmodalevents",
      "getelementbyid",
      "addeventlistener",
      "about"
    ],
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "context:setupackmodalevents": {
    "category": "context_clues",
    "keyword": "setupackmodalevents",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "setupAckModalEvents"
    ],
    "description": "Code related to setupackmodalevents",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.321Z"
  },
  "context:addeventlistener": {
    "category": "context_clues",
    "keyword": "addeventlistener",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "setupAckModalEvents",
      "setupProviderSettingsListeners",
      "setupSystemThemeListener",
      "closeModal",
      "accept",
      "setTrackedPanel"
    ],
    "description": "Code related to addeventlistener",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "function:getEmbeddedWhatsNew": {
    "category": "code_functions",
    "keyword": "getEmbeddedWhatsNew",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "getEmbeddedWhatsNew"
    ],
    "description": " Provides embedded \"What's New\" data as fallback when file fetch fails @returns {string} HTML string of recent announcements ",
    "context_weight": 0.9,
    "line_number": 271,
    "body_preview": "const getEmbeddedWhatsNew = () => { return ` <li><strong>v3.04.86 – Centered Name header</strong>: Wrapped \"Name\" header text with .header-text span for consistent alignment and removed obsolete centering rules.</li>",
    "context_clues": [
      "get",
      "embedded",
      "whats",
      "new",
      "provides",
      "data",
      "fallback",
      "when",
      "file",
      "fetch",
      "fails",
      "string",
      "html",
      "recent",
      "announcements"
    ],
    "last_updated": "2025-08-20T17:24:09.322Z"
  },
  "context:embedded": {
    "category": "context_clues",
    "keyword": "embedded",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "getEmbeddedChangelog"
    ],
    "description": "Code related to embedded",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:whats": {
    "category": "context_clues",
    "keyword": "whats",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "getEmbeddedWhatsNew"
    ],
    "description": "Code related to whats",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.322Z"
  },
  "context:new": {
    "category": "context_clues",
    "keyword": "new",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "getEmbeddedWhatsNew"
    ],
    "description": "Code related to new",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.322Z"
  },
  "context:provides": {
    "category": "context_clues",
    "keyword": "provides",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "CustomMapping",
      "normalizeString",
      "resetSpotByName",
      "getEmbeddedChangelog"
    ],
    "description": "Code related to provides",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:when": {
    "category": "context_clues",
    "keyword": "when",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "clearApiHistory",
      "autoSyncSpotPrices",
      "initializeAutocomplete",
      "applyQuickFilter",
      "debugLog",
      "getAppTitle",
      "getDisplayComposition",
      "getEmbeddedChangelog"
    ],
    "description": "Code related to when",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:fails": {
    "category": "context_clues",
    "keyword": "fails",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "getEmbeddedChangelog"
    ],
    "description": "Code related to fails",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:string": {
    "category": "context_clues",
    "keyword": "string",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "getEmbeddedWhatsNew",
      "getEmbeddedRoadmap",
      "setProviderStatus",
      "updateBatchCalculation",
      "updateProviderSettings",
      "setupProviderSettingsListeners",
      "setDefaultProvider",
      "clearApiKey",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi",
      "testApiConnection",
      "handleProviderSync",
      "showProviderInfo",
      "showManualInput",
      "hideManualInput",
      "resetSpotPrice",
      "extractUniqueValues",
      "generateVariations",
      "normalizeItemName",
      "logChange",
      "getChartBackgroundColor",
      "getChartTextColor",
      "getVersionString",
      "replaceTemplateVariables",
      "injectVersionString",
      "addMapping",
      "mapField",
      "showDetailsModal",
      "removeFilter",
      "hasMatchingData",
      "applyColumnFilter",
      "normalizeString",
      "tokenizeWords",
      "generateNGrams",
      "calculateLevenshteinDistance",
      "fuzzyMatch",
      "fuzzySearch",
      "safeGetElement",
      "generateBackupHtml",
      "generateReadmeContent",
      "escapeAttribute",
      "formatPurchaseLocation",
      "formatStorageLocation",
      "validateFieldValue",
      "calculateTotals",
      "updateLastTimestamps",
      "recordSpot",
      "updateSpotCardColor",
      "updateManualSpot",
      "resetSpot",
      "setTheme",
      "getContrastColor",
      "openEbaySearch",
      "getAppTitle",
      "getFooterDomain",
      "monitorPerformance",
      "addCompositionOption",
      "getCompositionFirstWords",
      "updateSpotTimestamp",
      "pad2",
      "todayStr",
      "currentMonthKey",
      "formatDisplayDate",
      "formatCurrency",
      "formatLossProfit",
      "sanitizeHtml",
      "formatWeight",
      "convertToUsd",
      "detectCurrency",
      "stripNonAlphanumeric",
      "cleanString",
      "sanitizeObjectFields",
      "normalizeType",
      "mapNumistaType",
      "parseNumistaMetal",
      "saveData",
      "loadData",
      "sanitizeImportedItem",
      "cleanMultilineString",
      "handleError",
      "getUserFriendlyMessage",
      "downloadFile",
      "closeModalById",
      "openModalById",
      "getChangelogForVersion",
      "populateVersionModal",
      "getEmbeddedChangelog",
      "setupVersionModalEvents",
      "getDockerPersistenceInstructions"
    ],
    "description": "Code related to string",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:recent": {
    "category": "context_clues",
    "keyword": "recent",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "getEmbeddedWhatsNew"
    ],
    "description": "Code related to recent",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.322Z"
  },
  "function:getEmbeddedRoadmap": {
    "category": "code_functions",
    "keyword": "getEmbeddedRoadmap",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "getEmbeddedRoadmap"
    ],
    "description": " Provides embedded roadmap data as fallback when file fetch fails @returns {string} HTML string of development roadmap ",
    "context_weight": 0.9,
    "line_number": 285,
    "body_preview": "const getEmbeddedRoadmap = () => { return ` <li><strong>Phase 3</strong>: Advanced filtering system with date ranges and multi-criteria support</li>",
    "context_clues": [
      "get",
      "embedded",
      "roadmap",
      "provides",
      "data",
      "fallback",
      "when",
      "file",
      "fetch",
      "fails",
      "string",
      "html",
      "development",
      "getembeddedroadmap",
      "filtering"
    ],
    "last_updated": "2025-08-20T17:24:09.322Z"
  },
  "context:development": {
    "category": "context_clues",
    "keyword": "development",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "getEmbeddedRoadmap"
    ],
    "description": "Code related to development",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.322Z"
  },
  "context:getembeddedroadmap": {
    "category": "context_clues",
    "keyword": "getembeddedroadmap",
    "files": [
      "rProjects/StackTrackr/js/about.js"
    ],
    "functions": [
      "getEmbeddedRoadmap"
    ],
    "description": "Code related to getembeddedroadmap",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.322Z"
  },
  "context:filtering": {
    "category": "context_clues",
    "keyword": "filtering",
    "files": [
      "rProjects/StackTrackr/js/about.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getEmbeddedRoadmap",
      "renderApiHistoryTable",
      "applyQuickFilter",
      "hideEmptyColumns"
    ],
    "description": "Code related to filtering",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "function:enhanceExistingSearch": {
    "category": "code_functions",
    "keyword": "enhanceExistingSearch",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js"
    ],
    "functions": [
      "enhanceExistingSearch"
    ],
    "description": " Integration with existing StackTrackr search system Enhances the existing filterInventory function with AI capabilities ",
    "context_weight": 0.9,
    "line_number": 466,
    "body_preview": "async function enhanceExistingSearch() { // Only enhance if AI is enabled and configured if (!window.aiSearchEnabled || !window.aiApiKey) {",
    "context_clues": [
      "enhance",
      "existing",
      "search",
      "integration",
      "with",
      "stacktrackr",
      "system",
      "enhances",
      "filterinventory",
      "capabilities",
      "configured",
      "get",
      "prototype"
    ],
    "last_updated": "2025-08-20T17:24:09.333Z"
  },
  "context:enhance": {
    "category": "context_clues",
    "keyword": "enhance",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js"
    ],
    "functions": [
      "enhanceExistingSearch"
    ],
    "description": "Code related to enhance",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.333Z"
  },
  "context:existing": {
    "category": "context_clues",
    "keyword": "existing",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "enhanceExistingSearch",
      "destroyCharts",
      "loadInventory",
      "importNumistaCsv",
      "importJson",
      "loadEnvFile"
    ],
    "description": "Code related to existing",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "context:system": {
    "category": "context_clues",
    "keyword": "system",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/theme.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rScripts/deploy_agent_system.py",
      "rAgents/rTemplates/bootstrap_agent_system.py",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "enhanceExistingSearch",
      "initializeAutocomplete",
      "updateTypeSummary",
      "initTheme",
      "setupSystemThemeListener",
      "__init__",
      "main",
      "ensure_backup_dir",
      "backup_json_files",
      "restore_from_backup",
      "load_json_memory_fallback",
      "get_available_tasks_from_json",
      "search_json_memory",
      "create_emergency_recovery_package",
      "export_mcp_memory_to_json",
      "load_backup_memory",
      "get_available_tasks_from_backup",
      "search_backup_memory",
      "checkSystemHealth"
    ],
    "description": "Code related to system",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "context:enhances": {
    "category": "context_clues",
    "keyword": "enhances",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js"
    ],
    "functions": [
      "enhanceExistingSearch"
    ],
    "description": "Code related to enhances",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.333Z"
  },
  "context:filterinventory": {
    "category": "context_clues",
    "keyword": "filterinventory",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "enhanceExistingSearch",
      "renderTable",
      "goToPage"
    ],
    "description": "Code related to filterinventory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.664Z"
  },
  "context:capabilities": {
    "category": "context_clues",
    "keyword": "capabilities",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js"
    ],
    "functions": [
      "enhanceExistingSearch"
    ],
    "description": "Code related to capabilities",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.333Z"
  },
  "context:prototype": {
    "category": "context_clues",
    "keyword": "prototype",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js"
    ],
    "functions": [
      "enhanceExistingSearch",
      "displayAIInsights"
    ],
    "description": "Code related to prototype",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.333Z"
  },
  "file:ai-search-prototype.js": {
    "category": "file_relationships",
    "keyword": "ai-search-prototype.js",
    "primary_file": "rProjects/StackTrackr/js/ai-search-prototype.js",
    "functions": [
      "enhanceExistingSearch",
      "displayAIInsights"
    ],
    "description": "File containing enhanceExistingSearch and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.906Z"
  },
  "function:displayAIInsights": {
    "category": "code_functions",
    "keyword": "displayAIInsights",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js"
    ],
    "functions": [
      "displayAIInsights"
    ],
    "description": " Display AI insights in the UI @param {Object} aiInterpretation - AI analysis results ",
    "context_weight": 0.9,
    "line_number": 509,
    "body_preview": "function displayAIInsights(aiInterpretation) { // Create or update AI insights panel let insightsPanel = document.getElementById('ai-insights-panel');",
    "context_clues": [
      "display",
      "insights",
      "param",
      "object",
      "aiinterpretation",
      "analysis",
      "results",
      "create",
      "update",
      "getelementbyid",
      "createelement",
      "insert",
      "search",
      "prototype"
    ],
    "last_updated": "2025-08-20T17:24:09.333Z"
  },
  "context:insights": {
    "category": "context_clues",
    "keyword": "insights",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js"
    ],
    "functions": [
      "displayAIInsights"
    ],
    "description": "Code related to insights",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.333Z"
  },
  "context:param": {
    "category": "context_clues",
    "keyword": "param",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "displayAIInsights",
      "saveApiConfig",
      "setProviderStatus",
      "updateBatchCalculation",
      "updateProviderSettings",
      "setupProviderSettingsListeners",
      "clearApiHistory",
      "setDefaultProvider",
      "clearApiKey",
      "saveApiCache",
      "calculateApiUsage",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi",
      "syncSpotPricesFromApi",
      "testApiConnection",
      "handleProviderSync",
      "updateSyncButtonStates",
      "showProviderInfo",
      "showManualInput",
      "hideManualInput",
      "resetSpotPrice",
      "extractUniqueValues",
      "generateVariations",
      "normalizeItemName",
      "buildSearchIndices",
      "generateLookupTable",
      "loadLookupTable",
      "cacheLookupTable",
      "refreshLookupTable",
      "initializeAutocomplete",
      "logChange",
      "logItemChanges",
      "toggleChange",
      "generateColors",
      "createPieChart",
      "getVersionString",
      "replaceTemplateVariables",
      "injectVersionString",
      "addMapping",
      "mapField",
      "createBreakdownElements",
      "showDetailsModal",
      "removeFilter",
      "generateCategorySummary",
      "hasMatchingData",
      "applyColumnFilter",
      "tokenizeWords",
      "generateNGrams",
      "calculateLevenshteinDistance",
      "fuzzyMatch",
      "fuzzySearch",
      "safeGetElement",
      "restoreBackupZip",
      "generateBackupHtml",
      "generateReadmeContent",
      "escapeAttribute",
      "formatPurchaseLocation",
      "formatStorageLocation",
      "recalcItem",
      "updateItemCount",
      "validateFieldValue",
      "startCellEdit",
      "calculateTotals",
      "deleteItem",
      "showNotes",
      "editItem",
      "toggleCollectable",
      "togglePriceView",
      "importCsv",
      "importNumistaCsv",
      "importJson",
      "trapFocus",
      "calculateTotalPages",
      "goToPage",
      "purgeSpotHistory",
      "updateLastTimestamps",
      "recordSpot",
      "updateSpotCardColor",
      "updateManualSpot",
      "resetSpot",
      "resetSpotByName",
      "setTheme",
      "getContrastColor",
      "openEbaySearch",
      "debugLog",
      "getAppTitle",
      "monitorPerformance",
      "checkFileSize",
      "addCompositionOption",
      "getCompositionFirstWords",
      "getLastUpdateTime",
      "updateSpotTimestamp",
      "pad2",
      "formatDisplayDate",
      "formatCurrency",
      "formatLossProfit",
      "sanitizeHtml",
      "gramsToOzt",
      "oztToGrams",
      "formatWeight",
      "convertToUsd",
      "detectCurrency",
      "stripNonAlphanumeric",
      "sanitizeObjectFields",
      "normalizeType",
      "mapNumistaType",
      "parseNumistaMetal",
      "saveData",
      "loadData",
      "sortInventoryByDateNewestFirst",
      "validateInventoryItem",
      "handleError",
      "getUserFriendlyMessage",
      "downloadFile",
      "closeModalById",
      "openModalById",
      "getChangelogForVersion",
      "populateVersionModal",
      "getEmbeddedChangelog",
      "setupVersionModalEvents"
    ],
    "description": "Code related to param",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:object": {
    "category": "context_clues",
    "keyword": "object",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "displayAIInsights",
      "saveApiConfig",
      "saveApiCache",
      "createBackupData",
      "extractUniqueValues",
      "buildSearchIndices",
      "generateLookupTable",
      "getLookupStats",
      "logItemChanges",
      "createPieChart",
      "CustomMapping",
      "createBreakdownElements",
      "fuzzySearch",
      "createDummyElement",
      "recalcItem",
      "calculateTotals",
      "sanitizeObjectFields",
      "validateInventoryItem"
    ],
    "description": "Code related to object",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:aiinterpretation": {
    "category": "context_clues",
    "keyword": "aiinterpretation",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js"
    ],
    "functions": [
      "displayAIInsights"
    ],
    "description": "Code related to aiinterpretation",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.333Z"
  },
  "context:results": {
    "category": "context_clues",
    "keyword": "results",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/api.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/report-generator.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "displayAIInsights",
      "syncAllProviders",
      "displayLatestResults",
      "generateLatestResultsHTML",
      "storeCurrentResults",
      "saveResultsToHistory",
      "generateLatestResults",
      "formatResults"
    ],
    "description": "Code related to results",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:createelement": {
    "category": "context_clues",
    "keyword": "createelement",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "displayAIInsights",
      "downloadStorageReport",
      "renderTable",
      "downloadHTMLReport"
    ],
    "description": "Code related to createelement",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:insert": {
    "category": "context_clues",
    "keyword": "insert",
    "files": [
      "rProjects/StackTrackr/js/ai-search-prototype.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "displayAIInsights",
      "_create_type_specific_entry",
      "_log_activity",
      "execute_operation"
    ],
    "description": "Code related to insert",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "function:renderApiStatusSummary": {
    "category": "code_functions",
    "keyword": "renderApiStatusSummary",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "renderApiStatusSummary"
    ],
    "description": "Function renderApiStatusSummary in api.js",
    "context_weight": 0.9,
    "line_number": 12,
    "body_preview": "const renderApiStatusSummary = () => { const container = document.getElementById(\"apiStatusSummary\"); if (!container) return;",
    "context_clues": [
      "render",
      "api",
      "status",
      "summary",
      "getelementbyid",
      "disconnected",
      "connected"
    ],
    "last_updated": "2025-08-20T17:24:09.351Z"
  },
  "context:render": {
    "category": "context_clues",
    "keyword": "render",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "renderApiStatusSummary",
      "renderApiHistoryTable",
      "renderChangeLog",
      "createPieChart",
      "renderActiveFilters",
      "renderCell",
      "renderTable",
      "renderChart",
      "renderHistories"
    ],
    "description": "Code related to render",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "context:api": {
    "category": "context_clues",
    "keyword": "api",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/catalog-api.js",
      "rProjects/StackTrackr/js/events.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "renderApiStatusSummary",
      "loadApiConfig",
      "saveApiConfig",
      "clearApiConfig",
      "clearApiCache",
      "getCacheDurationMs",
      "setProviderStatus",
      "updateBatchCalculation",
      "updateProviderSettings",
      "setupProviderSettingsListeners",
      "updateProviderHistoryTables",
      "refreshProviderStatuses",
      "updateDefaultProviderButtons",
      "renderApiHistoryTable",
      "showApiHistoryModal",
      "hideApiHistoryModal",
      "showApiProvidersModal",
      "hideApiProvidersModal",
      "clearApiHistory",
      "setDefaultProvider",
      "clearApiKey",
      "loadApiCache",
      "saveApiCache",
      "calculateApiUsage",
      "fetchSpotPricesFromApi",
      "syncSpotPricesFromApi",
      "testApiConnection",
      "handleProviderSync",
      "syncAllProviders",
      "updateSyncButtonStates",
      "showApiModal",
      "hideApiModal",
      "showFilesModal",
      "hideFilesModal",
      "showProviderInfo",
      "hideProviderInfo",
      "showManualInput",
      "hideManualInput",
      "createBackupData",
      "downloadCompleteBackup",
      "testNumistaAPI",
      "request",
      "setupApiEvents",
      "validateApiKey",
      "testApiKey",
      "checkHasApiKey"
    ],
    "description": "Code related to api",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.553Z"
  },
  "context:status": {
    "category": "context_clues",
    "keyword": "status",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "renderApiStatusSummary",
      "setProviderStatus",
      "refreshFromCache",
      "showApiModal",
      "updateEncryptionUI",
      "toggleCollectable",
      "showStatus"
    ],
    "description": "Code related to status",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "context:disconnected": {
    "category": "context_clues",
    "keyword": "disconnected",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "renderApiStatusSummary",
      "getCacheDurationMs",
      "setProviderStatus"
    ],
    "description": "Code related to disconnected",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.353Z"
  },
  "file:api.js": {
    "category": "file_relationships",
    "keyword": "api.js",
    "primary_file": "rProjects/StackTrackr/js/api.js",
    "functions": [
      "renderApiStatusSummary",
      "loadApiConfig",
      "saveApiConfig",
      "clearApiConfig",
      "clearApiCache",
      "getCacheDurationMs",
      "setProviderStatus",
      "updateBatchCalculation",
      "updateProviderSettings",
      "setupProviderSettingsListeners",
      "updateProviderHistoryTables",
      "refreshProviderStatuses",
      "updateDefaultProviderButtons",
      "renderApiHistoryTable",
      "showApiHistoryModal",
      "hideApiHistoryModal",
      "showApiProvidersModal",
      "hideApiProvidersModal",
      "clearApiHistory",
      "setDefaultProvider",
      "clearApiKey",
      "refreshFromCache",
      "loadApiCache",
      "saveApiCache",
      "autoSyncSpotPrices",
      "calculateApiUsage",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi",
      "syncSpotPricesFromApi",
      "testApiConnection",
      "handleProviderSync",
      "syncAllProviders",
      "updateSyncButtonStates",
      "showApiModal",
      "hideApiModal",
      "showFilesModal",
      "hideFilesModal",
      "showProviderInfo",
      "hideProviderInfo",
      "showManualInput",
      "hideManualInput",
      "resetSpotPrice",
      "createBackupData",
      "downloadCompleteBackup"
    ],
    "description": "File containing renderApiStatusSummary and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.928Z"
  },
  "function:loadApiConfig": {
    "category": "code_functions",
    "keyword": "loadApiConfig",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "loadApiConfig"
    ],
    "description": " Loads Metals API configuration from localStorage @returns {Object|null} Metals API configuration or null if not set ",
    "context_weight": 0.9,
    "line_number": 44,
    "body_preview": "const loadApiConfig = () => { try { const stored = localStorage.getItem(API_KEY_STORAGE_KEY);",
    "context_clues": [
      "load",
      "api",
      "config",
      "loads",
      "metals",
      "configuration",
      "from",
      "localstorage",
      "objectnull",
      "null",
      "loadapiconfig",
      "getitem",
      "parse"
    ],
    "last_updated": "2025-08-20T17:24:09.351Z"
  },
  "context:config": {
    "category": "context_clues",
    "keyword": "config",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rScripts/dynamic_memory.py"
    ],
    "functions": [
      "loadApiConfig",
      "saveApiConfig",
      "clearApiConfig",
      "setDefaultProvider",
      "initDatabase",
      "_add_to_sync_config"
    ],
    "description": "Code related to config",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.265Z"
  },
  "context:metals": {
    "category": "context_clues",
    "keyword": "metals",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "loadApiConfig",
      "saveApiConfig",
      "clearApiConfig",
      "fetchBatchSpotPrices",
      "createBackupData",
      "downloadCompleteBackup",
      "generateCategorySummary",
      "getDisplayComposition"
    ],
    "description": "Code related to metals",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:configuration": {
    "category": "context_clues",
    "keyword": "configuration",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "loadApiConfig",
      "saveApiConfig",
      "clearApiConfig",
      "clearApiCache",
      "createBackupData",
      "downloadCompleteBackup",
      "fuzzySearch",
      "showStatus",
      "runWizard"
    ],
    "description": "Code related to configuration",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.597Z"
  },
  "context:from": {
    "category": "context_clues",
    "keyword": "from",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rScripts/sync_tasks.py",
      "rEngine/call-llm.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "loadApiConfig",
      "updateProviderSettings",
      "refreshFromCache",
      "loadApiCache",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi",
      "syncSpotPricesFromApi",
      "extractUniqueValues",
      "generateLookupTable",
      "loadLookupTable",
      "refreshLookupTable",
      "createBreakdownElements",
      "removeFilter",
      "generateCategorySummary",
      "generateNGrams",
      "restoreBackupZip",
      "sanitizeTablesOnLoad",
      "loadInventory",
      "importCsv",
      "importNumistaCsv",
      "importJson",
      "loadSpotHistory",
      "fetchSpotPrice",
      "updateManualSpot",
      "getCompositionFirstWords",
      "convertToUsd",
      "detectCurrency",
      "stripNonAlphanumeric",
      "parseNumistaMetal",
      "generateHTMLReport",
      "updateHistoryCharts",
      "filenamePatternFrom",
      "processVPRData",
      "fetch_tasks_from_memory",
      "restore_from_backup",
      "get_available_tasks_from_json",
      "get_available_tasks_from_backup",
      "handleMCPMode",
      "loadSearchMatrix"
    ],
    "description": "Code related to from",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:localstorage": {
    "category": "context_clues",
    "keyword": "localstorage",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "loadApiConfig",
      "saveApiConfig",
      "loadApiCache",
      "cacheLookupTable",
      "saveInventory",
      "loadInventory",
      "saveSpotHistory",
      "loadSpotHistory",
      "fetchSpotPrice",
      "setTheme",
      "cleanupStorage",
      "updateStorageStats",
      "analyzeStorageData",
      "updateHistoryCharts"
    ],
    "description": "Code related to localstorage",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.830Z"
  },
  "context:objectnull": {
    "category": "context_clues",
    "keyword": "objectnull",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "loadApiConfig",
      "loadApiCache"
    ],
    "description": "Code related to objectnull",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:null": {
    "category": "context_clues",
    "keyword": "null",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "loadApiConfig",
      "loadApiCache",
      "getCachedLookupTable",
      "mapField",
      "safeAttachListener",
      "createDummyElement",
      "detectCurrency"
    ],
    "description": "Code related to null",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:loadapiconfig": {
    "category": "context_clues",
    "keyword": "loadapiconfig",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "loadApiConfig",
      "updateBatchCalculation",
      "updateProviderSettings",
      "updateProviderHistoryTables",
      "refreshProviderStatuses",
      "updateDefaultProviderButtons",
      "setDefaultProvider",
      "clearApiKey",
      "syncAllProviders",
      "showApiModal"
    ],
    "description": "Code related to loadapiconfig",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.364Z"
  },
  "function:saveApiConfig": {
    "category": "code_functions",
    "keyword": "saveApiConfig",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "saveApiConfig"
    ],
    "description": " Saves Metals API configuration to localStorage @param {Object} config - Metals API configuration object ",
    "context_weight": 0.9,
    "line_number": 143,
    "body_preview": "const saveApiConfig = (config) => { try { const configToSave = {",
    "context_clues": [
      "save",
      "api",
      "config",
      "saves",
      "metals",
      "configuration",
      "localstorage",
      "param",
      "object",
      "saveapiconfig"
    ],
    "last_updated": "2025-08-20T17:24:09.352Z"
  },
  "context:save": {
    "category": "context_clues",
    "keyword": "save",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rScripts/mcp_json_sync.py",
      "rAgents/rScripts/performance_analysis.py",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "saveApiConfig",
      "saveApiCache",
      "saveInventory",
      "saveSpotHistory",
      "saveData",
      "saveDataSync",
      "getUserFriendlyMessage",
      "saveResultsToHistory",
      "save_sync_metadata",
      "main",
      "saveEnvFile"
    ],
    "description": "Code related to save",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.287Z"
  },
  "context:saves": {
    "category": "context_clues",
    "keyword": "saves",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "saveApiConfig",
      "saveApiCache",
      "saveInventory",
      "persistInventoryAndRefresh",
      "saveSpotHistory"
    ],
    "description": "Code related to saves",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.727Z"
  },
  "context:saveapiconfig": {
    "category": "context_clues",
    "keyword": "saveapiconfig",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "saveApiConfig",
      "updateDefaultProviderButtons",
      "setDefaultProvider"
    ],
    "description": "Code related to saveapiconfig",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "function:clearApiConfig": {
    "category": "code_functions",
    "keyword": "clearApiConfig",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiConfig"
    ],
    "description": " Clears Metals API configuration ",
    "context_weight": 0.9,
    "line_number": 182,
    "body_preview": "const clearApiConfig = () => { localStorage.removeItem(API_KEY_STORAGE_KEY); localStorage.removeItem(API_CACHE_KEY);",
    "context_clues": [
      "clear",
      "api",
      "config",
      "clears",
      "metals",
      "configuration",
      "clearapiconfig",
      "removeitem"
    ],
    "last_updated": "2025-08-20T17:24:09.352Z"
  },
  "context:clears": {
    "category": "context_clues",
    "keyword": "clears",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "clearApiConfig",
      "clearApiCache",
      "hideApiProvidersModal",
      "clearApiHistory",
      "clearApiKey",
      "clearChangeLog",
      "clearAllFilters",
      "updateTypeSummary"
    ],
    "description": "Code related to clears",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:clearapiconfig": {
    "category": "context_clues",
    "keyword": "clearapiconfig",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiConfig"
    ],
    "description": "Code related to clearapiconfig",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.352Z"
  },
  "context:removeitem": {
    "category": "context_clues",
    "keyword": "removeitem",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "clearApiConfig",
      "clearApiCache",
      "saveApiCache",
      "clearLookupCache"
    ],
    "description": "Code related to removeitem",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.385Z"
  },
  "function:clearApiCache": {
    "category": "code_functions",
    "keyword": "clearApiCache",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiCache"
    ],
    "description": " Clears only the API cache, keeping the configuration ",
    "context_weight": 0.9,
    "line_number": 201,
    "body_preview": "const clearApiCache = () => { localStorage.removeItem(API_CACHE_KEY); apiCache = null;",
    "context_clues": [
      "clear",
      "api",
      "cache",
      "clears",
      "only",
      "keeping",
      "configuration",
      "clearapicache",
      "removeitem",
      "clearapihistory",
      "cleared"
    ],
    "last_updated": "2025-08-20T17:24:09.353Z"
  },
  "context:cache": {
    "category": "context_clues",
    "keyword": "cache",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "clearApiCache",
      "getCacheDurationMs",
      "refreshProviderStatuses",
      "refreshFromCache",
      "loadApiCache",
      "saveApiCache",
      "autoSyncSpotPrices",
      "loadLookupTable",
      "cacheLookupTable",
      "clearLookupCache",
      "updateLastTimestamps",
      "getLastUpdateTime",
      "updateSpotTimestamp"
    ],
    "description": "Code related to cache",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:only": {
    "category": "context_clues",
    "keyword": "only",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "clearApiCache",
      "numistaGoBack",
      "numistaGoForward",
      "stripNonAlphanumeric"
    ],
    "description": "Code related to only",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:keeping": {
    "category": "context_clues",
    "keyword": "keeping",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiCache"
    ],
    "description": "Code related to keeping",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.353Z"
  },
  "context:clearapicache": {
    "category": "context_clues",
    "keyword": "clearapicache",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiCache"
    ],
    "description": "Code related to clearapicache",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.353Z"
  },
  "context:clearapihistory": {
    "category": "context_clues",
    "keyword": "clearapihistory",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiCache",
      "hideApiProvidersModal",
      "clearApiHistory"
    ],
    "description": "Code related to clearapihistory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.357Z"
  },
  "context:cleared": {
    "category": "context_clues",
    "keyword": "cleared",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "clearApiCache",
      "clearLookupCache"
    ],
    "description": "Code related to cleared",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.385Z"
  },
  "function:getCacheDurationMs": {
    "category": "code_functions",
    "keyword": "getCacheDurationMs",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "getCacheDurationMs"
    ],
    "description": " Gets cache duration in milliseconds @returns {number} Cache duration ",
    "context_weight": 0.9,
    "line_number": 214,
    "body_preview": "const getCacheDurationMs = () => { const hours = apiConfig?.cacheHours ?? 24; return hours * 60 * 60 * 1000;",
    "context_clues": [
      "get",
      "cache",
      "duration",
      "gets",
      "milliseconds",
      "number",
      "getcachedurationms",
      "sets",
      "connection",
      "settings",
      "connected",
      "disconnected",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.353Z"
  },
  "context:duration": {
    "category": "context_clues",
    "keyword": "duration",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "getCacheDurationMs"
    ],
    "description": "Code related to duration",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.353Z"
  },
  "context:gets": {
    "category": "context_clues",
    "keyword": "gets",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getCacheDurationMs",
      "getChartBackgroundColor",
      "getChartTextColor",
      "getChartColor",
      "getStorageItemDisplayName",
      "debugLog",
      "getStorageItemDescription",
      "getStorageReportCSS",
      "getStorageReportJS"
    ],
    "description": "Code related to gets",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:milliseconds": {
    "category": "context_clues",
    "keyword": "milliseconds",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getCacheDurationMs",
      "debounce"
    ],
    "description": "Code related to milliseconds",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:number": {
    "category": "context_clues",
    "keyword": "number",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "getCacheDurationMs",
      "calculateApiUsage",
      "toggleChange",
      "generateColors",
      "generateNGrams",
      "calculateLevenshteinDistance",
      "fuzzySearch",
      "updateItemCount",
      "startCellEdit",
      "deleteItem",
      "showNotes",
      "editItem",
      "toggleCollectable",
      "togglePriceView",
      "calculateTotalPages",
      "goToPage",
      "purgeSpotHistory",
      "recordSpot",
      "pad2",
      "formatCurrency",
      "formatLossProfit",
      "gramsToOzt",
      "oztToGrams",
      "formatWeight",
      "convertToUsd",
      "toNumber"
    ],
    "description": "Code related to number",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.842Z"
  },
  "context:getcachedurationms": {
    "category": "context_clues",
    "keyword": "getcachedurationms",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "getCacheDurationMs",
      "saveApiCache"
    ],
    "description": "Code related to getcachedurationms",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:settings": {
    "category": "context_clues",
    "keyword": "settings",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "getCacheDurationMs",
      "setProviderStatus",
      "updateProviderSettings",
      "setupProviderSettingsListeners",
      "updateProviderHistoryTables",
      "showApiProvidersModal",
      "showApiModal",
      "initTheme"
    ],
    "description": "Code related to settings",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "function:setProviderStatus": {
    "category": "code_functions",
    "keyword": "setProviderStatus",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "setProviderStatus"
    ],
    "description": " Sets connection status for a provider in the settings UI @param {string} provider @param {\"connected\"|\"disconnected\"|\"error\"|\"cached\"} status ",
    "context_weight": 0.9,
    "line_number": 224,
    "body_preview": "const setProviderStatus = (provider, status) => { providerStatuses[provider] = status; renderApiStatusSummary();",
    "context_clues": [
      "set",
      "provider",
      "status",
      "sets",
      "connection",
      "settings",
      "param",
      "string",
      "connecteddisconnectederrorcached",
      "setproviderstatus",
      "remove",
      "connected",
      "disconnected",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.353Z"
  },
  "context:provider": {
    "category": "context_clues",
    "keyword": "provider",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "setProviderStatus",
      "updateBatchCalculation",
      "updateProviderSettings",
      "setupProviderSettingsListeners",
      "updateProviderHistoryTables",
      "refreshProviderStatuses",
      "updateDefaultProviderButtons",
      "setDefaultProvider",
      "clearApiKey",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi",
      "testApiConnection",
      "handleProviderSync",
      "showProviderInfo",
      "hideProviderInfo",
      "updateLastTimestamps",
      "configureProvider"
    ],
    "description": "Code related to provider",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:connecteddisconnectederrorcached": {
    "category": "context_clues",
    "keyword": "connecteddisconnectederrorcached",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "setProviderStatus"
    ],
    "description": "Code related to connecteddisconnectederrorcached",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.353Z"
  },
  "context:setproviderstatus": {
    "category": "context_clues",
    "keyword": "setproviderstatus",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "setProviderStatus"
    ],
    "description": "Code related to setproviderstatus",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.353Z"
  },
  "context:remove": {
    "category": "context_clues",
    "keyword": "remove",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "setProviderStatus",
      "setupColumnResizing",
      "updateThemeButton",
      "removeFilter",
      "cancelEdit",
      "renderCell",
      "calculateCorrectPath",
      "cleanupRecursiveDirectories"
    ],
    "description": "Code related to remove",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "function:updateBatchCalculation": {
    "category": "code_functions",
    "keyword": "updateBatchCalculation",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateBatchCalculation"
    ],
    "description": " Updates batch calculation display for a provider @param {string} provider - Provider key ",
    "context_weight": 0.9,
    "line_number": 257,
    "body_preview": "const updateBatchCalculation = (provider) => { const config = loadApiConfig(); const providerConfig = API_PROVIDERS[provider];",
    "context_clues": [
      "update",
      "batch",
      "calculation",
      "updates",
      "display",
      "provider",
      "param",
      "string",
      "updatebatchcalculation",
      "loadapiconfig",
      "filter",
      "parseint",
      "getelementbyid",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.354Z"
  },
  "context:calculation": {
    "category": "context_clues",
    "keyword": "calculation",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "updateBatchCalculation",
      "storeCurrentResults"
    ],
    "description": "Code related to calculation",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:updates": {
    "category": "context_clues",
    "keyword": "updates",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rScripts/dynamic_memory.py"
    ],
    "functions": [
      "updateBatchCalculation",
      "updateProviderSettings",
      "updateDefaultProviderButtons",
      "setDefaultProvider",
      "syncSpotPricesFromApi",
      "updateSyncButtonStates",
      "showApiModal",
      "updateColumnVisibility",
      "updateEncryptionUI",
      "renderActiveFilters",
      "persistInventoryAndRefresh",
      "updateItemCount",
      "updateSummary",
      "updateNavButtons",
      "updateSpotCardColor",
      "updateManualSpot",
      "setTheme",
      "addCompositionOption",
      "updateSpotTimestamp",
      "updateStorageStats",
      "_update_workflow_docs"
    ],
    "description": "Code related to updates",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.265Z"
  },
  "context:updatebatchcalculation": {
    "category": "context_clues",
    "keyword": "updatebatchcalculation",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateBatchCalculation"
    ],
    "description": "Code related to updatebatchcalculation",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.354Z"
  },
  "context:parseint": {
    "category": "context_clues",
    "keyword": "parseint",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateBatchCalculation",
      "updateProviderSettings",
      "getCachedLookupTable",
      "setupPagination",
      "getNextSerial"
    ],
    "description": "Code related to parseint",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "function:updateProviderSettings": {
    "category": "code_functions",
    "keyword": "updateProviderSettings",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateProviderSettings"
    ],
    "description": " Updates provider settings from form inputs @param {string} provider - Provider key ",
    "context_weight": 0.9,
    "line_number": 285,
    "body_preview": "const updateProviderSettings = (provider) => { const config = loadApiConfig(); // Update cache timeout",
    "context_clues": [
      "update",
      "provider",
      "settings",
      "updates",
      "from",
      "form",
      "inputs",
      "param",
      "string",
      "updateprovidersettings",
      "loadapiconfig",
      "getelementbyid",
      "parseint",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.354Z"
  },
  "context:form": {
    "category": "context_clues",
    "keyword": "form",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "updateProviderSettings",
      "normalizeItemName"
    ],
    "description": "Code related to form",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:inputs": {
    "category": "context_clues",
    "keyword": "inputs",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateProviderSettings"
    ],
    "description": "Code related to inputs",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.354Z"
  },
  "context:updateprovidersettings": {
    "category": "context_clues",
    "keyword": "updateprovidersettings",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateProviderSettings",
      "setupProviderSettingsListeners"
    ],
    "description": "Code related to updateprovidersettings",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.354Z"
  },
  "function:setupProviderSettingsListeners": {
    "category": "code_functions",
    "keyword": "setupProviderSettingsListeners",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "setupProviderSettingsListeners"
    ],
    "description": " Sets up event listeners for provider settings @param {string} provider - Provider key ",
    "context_weight": 0.9,
    "line_number": 323,
    "body_preview": "const setupProviderSettingsListeners = (provider) => { // Cache timeout change const cacheSelect = document.getElementById(`cacheTimeout_${provider}`);",
    "context_clues": [
      "setup",
      "provider",
      "settings",
      "listeners",
      "sets",
      "event",
      "param",
      "string",
      "setupprovidersettingslisteners",
      "getelementbyid",
      "addeventlistener",
      "updateprovidersettings",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.354Z"
  },
  "context:setupprovidersettingslisteners": {
    "category": "context_clues",
    "keyword": "setupprovidersettingslisteners",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "setupProviderSettingsListeners",
      "showApiProvidersModal"
    ],
    "description": "Code related to setupprovidersettingslisteners",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.357Z"
  },
  "function:updateProviderHistoryTables": {
    "category": "code_functions",
    "keyword": "updateProviderHistoryTables",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateProviderHistoryTables"
    ],
    "description": " Renders API usage/quota data for each provider ",
    "context_weight": 0.9,
    "line_number": 358,
    "body_preview": "const updateProviderHistoryTables = () => { const config = loadApiConfig(); Object.keys(API_PROVIDERS).forEach((prov) => {",
    "context_clues": [
      "update",
      "provider",
      "history",
      "tables",
      "renders",
      "usagequota",
      "data",
      "each",
      "updateproviderhistorytables",
      "loadapiconfig",
      "settings",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.355Z"
  },
  "context:history": {
    "category": "context_clues",
    "keyword": "history",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/report-generator.js",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "updateProviderHistoryTables",
      "renderApiHistoryTable",
      "showApiHistoryModal",
      "hideApiHistoryModal",
      "clearApiHistory",
      "calculateApiUsage",
      "numistaGoBack",
      "numistaGoForward",
      "saveSpotHistory",
      "loadSpotHistory",
      "purgeSpotHistory",
      "recordSpot",
      "updateSpotCardColor",
      "generateHTMLReport",
      "generateHistoryTableHTML",
      "updateHistoryCharts",
      "createHistoryChart",
      "createHistoryTable",
      "storeCurrentResults",
      "saveResultsToHistory",
      "generateHistoryTable",
      "logCall"
    ],
    "description": "Code related to history",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:tables": {
    "category": "context_clues",
    "keyword": "tables",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "updateProviderHistoryTables",
      "sanitizeTablesOnLoad",
      "renderHistories"
    ],
    "description": "Code related to tables",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "context:renders": {
    "category": "context_clues",
    "keyword": "renders",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "updateProviderHistoryTables",
      "renderApiHistoryTable",
      "renderChangeLog",
      "renderActiveFilters"
    ],
    "description": "Code related to renders",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:usagequota": {
    "category": "context_clues",
    "keyword": "usagequota",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateProviderHistoryTables"
    ],
    "description": "Code related to usagequota",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.355Z"
  },
  "context:each": {
    "category": "context_clues",
    "keyword": "each",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateProviderHistoryTables"
    ],
    "description": "Code related to each",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.355Z"
  },
  "context:updateproviderhistorytables": {
    "category": "context_clues",
    "keyword": "updateproviderhistorytables",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateProviderHistoryTables",
      "showApiProvidersModal"
    ],
    "description": "Code related to updateproviderhistorytables",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.357Z"
  },
  "function:refreshProviderStatuses": {
    "category": "code_functions",
    "keyword": "refreshProviderStatuses",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "refreshProviderStatuses"
    ],
    "description": " Refreshes provider statuses based on stored keys and cache age ",
    "context_weight": 0.9,
    "line_number": 380,
    "body_preview": "const refreshProviderStatuses = () => { const config = loadApiConfig(); let cache = null;",
    "context_clues": [
      "refresh",
      "provider",
      "statuses",
      "refreshes",
      "based",
      "stored",
      "keys",
      "cache",
      "loadapiconfig",
      "getitem",
      "parse",
      "reading",
      "check",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.355Z"
  },
  "context:refresh": {
    "category": "context_clues",
    "keyword": "refresh",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "refreshProviderStatuses",
      "refreshFromCache",
      "refreshLookupTable",
      "persistInventoryAndRefresh",
      "updateLastTimestamps",
      "refreshCompositionOptions",
      "getLastUpdateTime",
      "updateSpotTimestamp"
    ],
    "description": "Code related to refresh",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:statuses": {
    "category": "context_clues",
    "keyword": "statuses",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "refreshProviderStatuses"
    ],
    "description": "Code related to statuses",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.355Z"
  },
  "context:refreshes": {
    "category": "context_clues",
    "keyword": "refreshes",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "refreshProviderStatuses",
      "refreshFromCache",
      "persistInventoryAndRefresh",
      "refreshCompositionOptions"
    ],
    "description": "Code related to refreshes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:based": {
    "category": "context_clues",
    "keyword": "based",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/search.js",
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/VulnTrackr/modules/database.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "refreshProviderStatuses",
      "updateSyncButtonStates",
      "getChartBackgroundColor",
      "getChartTextColor",
      "updateColumnVisibility",
      "updateEncryptionUI",
      "renderActiveFilters",
      "updateItemCount",
      "calculateTotalPages",
      "filterInventory",
      "sortInventory",
      "updateSpotCardColor",
      "initTheme",
      "initDatabase",
      "generateHTMLReport"
    ],
    "description": "Code related to based",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.896Z"
  },
  "context:stored": {
    "category": "context_clues",
    "keyword": "stored",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "refreshProviderStatuses",
      "clearApiHistory",
      "clearApiKey",
      "mapField",
      "checkVersionChange"
    ],
    "description": "Code related to stored",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:keys": {
    "category": "context_clues",
    "keyword": "keys",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "refreshProviderStatuses",
      "autoSyncSpotPrices",
      "calculateApiUsage",
      "getStorageItemDisplayName",
      "cleanupStorage",
      "promptHidden",
      "prompt",
      "saveEnvFile"
    ],
    "description": "Code related to keys",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "context:reading": {
    "category": "context_clues",
    "keyword": "reading",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "refreshProviderStatuses"
    ],
    "description": "Code related to reading",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.355Z"
  },
  "function:updateDefaultProviderButtons": {
    "category": "code_functions",
    "keyword": "updateDefaultProviderButtons",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateDefaultProviderButtons"
    ],
    "description": " Updates default provider button states ",
    "context_weight": 0.9,
    "line_number": 413,
    "body_preview": "const updateDefaultProviderButtons = () => { const config = loadApiConfig(); const keys = config.keys || {};",
    "context_clues": [
      "update",
      "default",
      "provider",
      "buttons",
      "updates",
      "button",
      "states",
      "updatedefaultproviderbuttons",
      "loadapiconfig",
      "filter",
      "saveapiconfig",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.355Z"
  },
  "context:default": {
    "category": "context_clues",
    "keyword": "default",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateDefaultProviderButtons",
      "setDefaultProvider",
      "resetSpotPrice",
      "resetSpot",
      "formatCurrency",
      "loadData",
      "sanitizeImportedItem",
      "downloadFile"
    ],
    "description": "Code related to default",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:buttons": {
    "category": "context_clues",
    "keyword": "buttons",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "scripts/utilities/analyze_collect_buttons.js"
    ],
    "functions": [
      "updateDefaultProviderButtons",
      "updateNavButtons",
      "analyzeCollectButtons"
    ],
    "description": "Code related to buttons",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.366Z"
  },
  "context:button": {
    "category": "context_clues",
    "keyword": "button",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateDefaultProviderButtons",
      "updateSyncButtonStates",
      "updateThemeButton"
    ],
    "description": "Code related to button",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.553Z"
  },
  "context:states": {
    "category": "context_clues",
    "keyword": "states",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "updateDefaultProviderButtons",
      "updateSyncButtonStates",
      "toggleChange"
    ],
    "description": "Code related to states",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.443Z"
  },
  "context:updatedefaultproviderbuttons": {
    "category": "context_clues",
    "keyword": "updatedefaultproviderbuttons",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateDefaultProviderButtons",
      "setDefaultProvider"
    ],
    "description": "Code related to updatedefaultproviderbuttons",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "function:renderApiHistoryTable": {
    "category": "code_functions",
    "keyword": "renderApiHistoryTable",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "renderApiHistoryTable"
    ],
    "description": " Renders API history table with filtering, sorting and pagination ",
    "context_weight": 0.9,
    "line_number": 443,
    "body_preview": "const renderApiHistoryTable = () => { const table = document.getElementById(\"apiHistoryTable\"); if (!table) return;",
    "context_clues": [
      "render",
      "api",
      "history",
      "table",
      "renders",
      "with",
      "filtering",
      "sorting",
      "pagination",
      "getelementbyid",
      "filter"
    ],
    "last_updated": "2025-08-20T17:24:09.356Z"
  },
  "context:table": {
    "category": "context_clues",
    "keyword": "table",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "renderApiHistoryTable",
      "showApiHistoryModal",
      "normalizeItemName",
      "buildSearchIndices",
      "generateLookupTable",
      "createEmptyLookupTable",
      "loadLookupTable",
      "getCachedLookupTable",
      "cacheLookupTable",
      "clearLookupCache",
      "getLookupStats",
      "refreshLookupTable",
      "logChange",
      "renderChangeLog",
      "setupColumnResizing",
      "updateColumnVisibility",
      "applyQuickFilter",
      "applyColumnFilter",
      "formatPurchaseLocation",
      "formatStorageLocation",
      "persistInventoryAndRefresh",
      "startCellEdit",
      "hideEmptyColumns",
      "renderTable",
      "generateInventoryTable",
      "generateItemDataTable",
      "generateHistoryTableHTML",
      "createHistoryTable",
      "generateHistoryTable"
    ],
    "description": "Code related to table",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:sorting": {
    "category": "context_clues",
    "keyword": "sorting",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/sorting.js"
    ],
    "functions": [
      "renderApiHistoryTable",
      "sortInventory"
    ],
    "description": "Code related to sorting",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.715Z"
  },
  "context:pagination": {
    "category": "context_clues",
    "keyword": "pagination",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "renderApiHistoryTable",
      "setupPagination",
      "clearAllFilters",
      "calculateTotalPages",
      "goToPage"
    ],
    "description": "Code related to pagination",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.664Z"
  },
  "function:showApiHistoryModal": {
    "category": "code_functions",
    "keyword": "showApiHistoryModal",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "showApiHistoryModal"
    ],
    "description": " Shows API history modal with table ",
    "context_weight": 0.9,
    "line_number": 493,
    "body_preview": "const showApiHistoryModal = () => { const modal = document.getElementById(\"apiHistoryModal\"); if (!modal) return;",
    "context_clues": [
      "show",
      "api",
      "history",
      "modal",
      "shows",
      "with",
      "table",
      "getelementbyid",
      "loadspothistory",
      "filter",
      "filterinput",
      "clearfilterbtn"
    ],
    "last_updated": "2025-08-20T17:24:09.356Z"
  },
  "context:loadspothistory": {
    "category": "context_clues",
    "keyword": "loadspothistory",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "showApiHistoryModal",
      "loadSpotHistory"
    ],
    "description": "Code related to loadspothistory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.727Z"
  },
  "context:filterinput": {
    "category": "context_clues",
    "keyword": "filterinput",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "showApiHistoryModal"
    ],
    "description": "Code related to filterinput",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.356Z"
  },
  "context:clearfilterbtn": {
    "category": "context_clues",
    "keyword": "clearfilterbtn",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "showApiHistoryModal"
    ],
    "description": "Code related to clearfilterbtn",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.356Z"
  },
  "function:hideApiHistoryModal": {
    "category": "code_functions",
    "keyword": "hideApiHistoryModal",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "hideApiHistoryModal"
    ],
    "description": " Hides API history modal ",
    "context_weight": 0.9,
    "line_number": 524,
    "body_preview": "const hideApiHistoryModal = () => { const modal = document.getElementById(\"apiHistoryModal\"); if (modal) modal.style.display = \"none\";",
    "context_clues": [
      "hide",
      "api",
      "history",
      "modal",
      "hides",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.356Z"
  },
  "function:showApiProvidersModal": {
    "category": "code_functions",
    "keyword": "showApiProvidersModal",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "showApiProvidersModal"
    ],
    "description": " Shows API providers modal ",
    "context_weight": 0.9,
    "line_number": 532,
    "body_preview": "const showApiProvidersModal = () => { const modal = document.getElementById(\"apiProvidersModal\"); if (modal) {",
    "context_clues": [
      "show",
      "api",
      "providers",
      "modal",
      "shows",
      "getelementbyid",
      "updateproviderhistorytables",
      "initialize",
      "settings",
      "setupprovidersettingslisteners"
    ],
    "last_updated": "2025-08-20T17:24:09.357Z"
  },
  "function:hideApiProvidersModal": {
    "category": "code_functions",
    "keyword": "hideApiProvidersModal",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "hideApiProvidersModal"
    ],
    "description": " Hides API providers modal ",
    "context_weight": 0.9,
    "line_number": 589,
    "body_preview": "const hideApiProvidersModal = () => { const modal = document.getElementById(\"apiProvidersModal\"); if (modal) modal.style.display = \"none\";",
    "context_clues": [
      "hide",
      "api",
      "providers",
      "modal",
      "hides",
      "getelementbyid",
      "clears",
      "clearapihistory"
    ],
    "last_updated": "2025-08-20T17:24:09.357Z"
  },
  "function:clearApiHistory": {
    "category": "code_functions",
    "keyword": "clearApiHistory",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiHistory"
    ],
    "description": " Clears stored API price history @param {boolean} [silent=false] - When true, does not reopen the history modal ",
    "context_weight": 0.9,
    "line_number": 598,
    "body_preview": "const clearApiHistory = (silent = false) => { spotHistory = []; saveSpotHistory();",
    "context_clues": [
      "clear",
      "api",
      "history",
      "clears",
      "stored",
      "price",
      "param",
      "boolean",
      "silentfalse",
      "when",
      "true",
      "does",
      "reopen",
      "modal",
      "clearapihistory"
    ],
    "last_updated": "2025-08-20T17:24:09.357Z"
  },
  "context:price": {
    "category": "context_clues",
    "keyword": "price",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "clearApiHistory",
      "showManualInput",
      "hideManualInput",
      "resetSpotPrice",
      "togglePriceView",
      "toggleGlobalPriceView",
      "parsePriceField",
      "saveSpotHistory",
      "updateLastTimestamps",
      "recordSpot",
      "updateSpotCardColor",
      "fetchSpotPrice",
      "updateManualSpot",
      "resetSpot"
    ],
    "description": "Code related to price",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:boolean": {
    "category": "context_clues",
    "keyword": "boolean",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "clearApiHistory",
      "refreshFromCache",
      "syncSpotPricesFromApi",
      "updateSyncButtonStates",
      "loadLookupTable",
      "tokenizeWords",
      "generateNGrams",
      "safeGetElement",
      "importNumistaCsv",
      "importJson",
      "sortInventory",
      "checkFileSize"
    ],
    "description": "Code related to boolean",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:silentfalse": {
    "category": "context_clues",
    "keyword": "silentfalse",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiHistory"
    ],
    "description": "Code related to silentfalse",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.357Z"
  },
  "context:true": {
    "category": "context_clues",
    "keyword": "true",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "clearApiHistory",
      "tokenizeWords",
      "checkFileSize"
    ],
    "description": "Code related to true",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:does": {
    "category": "context_clues",
    "keyword": "does",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiHistory"
    ],
    "description": "Code related to does",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.357Z"
  },
  "context:reopen": {
    "category": "context_clues",
    "keyword": "reopen",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiHistory"
    ],
    "description": "Code related to reopen",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.357Z"
  },
  "function:setDefaultProvider": {
    "category": "code_functions",
    "keyword": "setDefaultProvider",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "setDefaultProvider"
    ],
    "description": " Updates default provider selection in config @param {string} provider ",
    "context_weight": 0.9,
    "line_number": 611,
    "body_preview": "const setDefaultProvider = (provider) => { const config = loadApiConfig(); if (!config.keys[provider]) {",
    "context_clues": [
      "set",
      "default",
      "provider",
      "updates",
      "selection",
      "config",
      "param",
      "string",
      "setdefaultprovider",
      "loadapiconfig",
      "saveapiconfig",
      "updatedefaultproviderbuttons",
      "updatesyncbuttonstates",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "context:selection": {
    "category": "context_clues",
    "keyword": "selection",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "setDefaultProvider"
    ],
    "description": "Code related to selection",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "context:setdefaultprovider": {
    "category": "context_clues",
    "keyword": "setdefaultprovider",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "setDefaultProvider"
    ],
    "description": "Code related to setdefaultprovider",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "context:updatesyncbuttonstates": {
    "category": "context_clues",
    "keyword": "updatesyncbuttonstates",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "setDefaultProvider",
      "updateSyncButtonStates"
    ],
    "description": "Code related to updatesyncbuttonstates",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.364Z"
  },
  "function:clearApiKey": {
    "category": "code_functions",
    "keyword": "clearApiKey",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiKey"
    ],
    "description": " Clears stored API key for a provider @param {string} provider ",
    "context_weight": 0.9,
    "line_number": 627,
    "body_preview": "const clearApiKey = (provider) => { const config = loadApiConfig(); delete config.keys[provider];",
    "context_clues": [
      "clear",
      "api",
      "key",
      "clears",
      "stored",
      "provider",
      "param",
      "string",
      "clearapikey",
      "loadapiconfig",
      "delete",
      "filter"
    ],
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "context:key": {
    "category": "context_clues",
    "keyword": "key",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "clearApiKey",
      "currentMonthKey",
      "validateApiKey",
      "testApiKey",
      "checkHasApiKey"
    ],
    "description": "Code related to key",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:clearapikey": {
    "category": "context_clues",
    "keyword": "clearapikey",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "clearApiKey"
    ],
    "description": "Code related to clearapikey",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "context:delete": {
    "category": "context_clues",
    "keyword": "delete",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "clearApiKey",
      "deleteItem"
    ],
    "description": "Code related to delete",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "function:refreshFromCache": {
    "category": "code_functions",
    "keyword": "refreshFromCache",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "refreshFromCache"
    ],
    "description": " Refreshes display using cached data without making API calls @returns {boolean} Success status ",
    "context_weight": 0.9,
    "line_number": 659,
    "body_preview": "const refreshFromCache = () => { const cache = loadApiCache(); if (!cache || !cache.data) {",
    "context_clues": [
      "refresh",
      "from",
      "cache",
      "refreshes",
      "display",
      "using",
      "cached",
      "data",
      "without",
      "making",
      "calls",
      "boolean",
      "success",
      "status",
      "loadapicache"
    ],
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "context:using": {
    "category": "context_clues",
    "keyword": "using",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "refreshFromCache",
      "mapField",
      "exportNumistaCsv",
      "formatCurrency",
      "convertToUsd",
      "parseCSVFile"
    ],
    "description": "Code related to using",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "context:cached": {
    "category": "context_clues",
    "keyword": "cached",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "refreshFromCache",
      "loadApiCache",
      "resetSpotPrice",
      "getCachedLookupTable",
      "clearLookupCache",
      "updateLastTimestamps",
      "resetSpot"
    ],
    "description": "Code related to cached",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:without": {
    "category": "context_clues",
    "keyword": "without",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/file-protocol-fix.js"
    ],
    "functions": [
      "refreshFromCache",
      "safeDebug"
    ],
    "description": "Code related to without",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.572Z"
  },
  "context:making": {
    "category": "context_clues",
    "keyword": "making",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "refreshFromCache"
    ],
    "description": "Code related to making",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "context:calls": {
    "category": "context_clues",
    "keyword": "calls",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "refreshFromCache"
    ],
    "description": "Code related to calls",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "context:success": {
    "category": "context_clues",
    "keyword": "success",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "refreshFromCache"
    ],
    "description": "Code related to success",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.358Z"
  },
  "context:loadapicache": {
    "category": "context_clues",
    "keyword": "loadapicache",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "refreshFromCache",
      "loadApiCache"
    ],
    "description": "Code related to loadapicache",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "function:loadApiCache": {
    "category": "code_functions",
    "keyword": "loadApiCache",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "loadApiCache"
    ],
    "description": " Loads cached API data from localStorage @returns {Object|null} Cached data or null if expired/not found ",
    "context_weight": 0.9,
    "line_number": 708,
    "body_preview": "const loadApiCache = () => { try { const stored = localStorage.getItem(API_CACHE_KEY);",
    "context_clues": [
      "load",
      "api",
      "cache",
      "loads",
      "cached",
      "data",
      "from",
      "localstorage",
      "objectnull",
      "null",
      "expirednot",
      "found",
      "loadapicache",
      "getitem",
      "parse"
    ],
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:expirednot": {
    "category": "context_clues",
    "keyword": "expirednot",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "loadApiCache"
    ],
    "description": "Code related to expirednot",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:found": {
    "category": "context_clues",
    "keyword": "found",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "loadApiCache",
      "loadData"
    ],
    "description": "Code related to found",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "function:saveApiCache": {
    "category": "code_functions",
    "keyword": "saveApiCache",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "saveApiCache"
    ],
    "description": " Saves API data to cache @param {Object} data - Data to cache ",
    "context_weight": 0.9,
    "line_number": 733,
    "body_preview": "const saveApiCache = (data, provider) => { try { const duration = getCacheDurationMs();",
    "context_clues": [
      "save",
      "api",
      "cache",
      "saves",
      "data",
      "param",
      "object",
      "saveapicache",
      "getcachedurationms",
      "removeitem",
      "gettime"
    ],
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:saveapicache": {
    "category": "context_clues",
    "keyword": "saveapicache",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "saveApiCache"
    ],
    "description": "Code related to saveapicache",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:gettime": {
    "category": "context_clues",
    "keyword": "gettime",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "saveApiCache"
    ],
    "description": "Code related to gettime",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "function:autoSyncSpotPrices": {
    "category": "code_functions",
    "keyword": "autoSyncSpotPrices",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "autoSyncSpotPrices"
    ],
    "description": " Automatically syncs spot prices if API keys exist and cache is stale @returns {Promise<void>} Resolves when sync completes or immediately if no sync needed ",
    "context_weight": 0.9,
    "line_number": 757,
    "body_preview": "const autoSyncSpotPrices = async () => { if ( !apiConfig ||",
    "context_clues": [
      "auto",
      "sync",
      "spot",
      "prices",
      "automatically",
      "syncs",
      "keys",
      "exist",
      "cache",
      "stale",
      "promisevoid",
      "resolves",
      "when",
      "completes",
      "immediately"
    ],
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:auto": {
    "category": "context_clues",
    "keyword": "auto",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/VulnTrackr/app.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "autoSyncSpotPrices",
      "autoCalculatePanels",
      "autoLoadContext"
    ],
    "description": "Code related to auto",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:spot": {
    "category": "context_clues",
    "keyword": "spot",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "autoSyncSpotPrices",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi",
      "syncSpotPricesFromApi",
      "resetSpotPrice",
      "saveSpotHistory",
      "loadSpotHistory",
      "purgeSpotHistory",
      "updateLastTimestamps",
      "recordSpot",
      "updateSpotCardColor",
      "fetchSpotPrice",
      "updateManualSpot",
      "resetSpot",
      "resetSpotByName",
      "updateSpotTimestamp"
    ],
    "description": "Code related to spot",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:prices": {
    "category": "context_clues",
    "keyword": "prices",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "autoSyncSpotPrices",
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi",
      "syncSpotPricesFromApi",
      "fetchSpotPrice"
    ],
    "description": "Code related to prices",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:automatically": {
    "category": "context_clues",
    "keyword": "automatically",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "autoSyncSpotPrices"
    ],
    "description": "Code related to automatically",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:syncs": {
    "category": "context_clues",
    "keyword": "syncs",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "autoSyncSpotPrices",
      "syncSpotPricesFromApi",
      "syncAllProviders"
    ],
    "description": "Code related to syncs",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.363Z"
  },
  "context:exist": {
    "category": "context_clues",
    "keyword": "exist",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "autoSyncSpotPrices"
    ],
    "description": "Code related to exist",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:stale": {
    "category": "context_clues",
    "keyword": "stale",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rEngine/recall.js"
    ],
    "functions": [
      "autoSyncSpotPrices",
      "checkMemoryFreshness"
    ],
    "description": "Code related to stale",
    "context_weight": 0.9999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:promisevoid": {
    "category": "context_clues",
    "keyword": "promisevoid",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "autoSyncSpotPrices"
    ],
    "description": "Code related to promisevoid",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:resolves": {
    "category": "context_clues",
    "keyword": "resolves",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "autoSyncSpotPrices"
    ],
    "description": "Code related to resolves",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:completes": {
    "category": "context_clues",
    "keyword": "completes",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "autoSyncSpotPrices"
    ],
    "description": "Code related to completes",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "context:immediately": {
    "category": "context_clues",
    "keyword": "immediately",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "autoSyncSpotPrices"
    ],
    "description": "Code related to immediately",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.359Z"
  },
  "function:calculateApiUsage": {
    "category": "code_functions",
    "keyword": "calculateApiUsage",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "calculateApiUsage"
    ],
    "description": " Calculates API usage for batch vs individual requests @param {Array} selectedMetals - Array of metal keys @param {number} historyDays - Number of history days @param {boolean} batchSupported - Whether provider supports batch requests @returns {Object} Usage calculation result ",
    "context_weight": 0.9,
    "line_number": 792,
    "body_preview": "const calculateApiUsage = (selectedMetals, historyDays = 0, batchSupported = false) => { if (batchSupported && selectedMetals.length > 1) { return {",
    "context_clues": [
      "calculate",
      "api",
      "usage",
      "calculates",
      "batch",
      "individual",
      "requests",
      "param",
      "array",
      "selectedmetals",
      "metal",
      "keys",
      "number",
      "historydays",
      "history"
    ],
    "last_updated": "2025-08-20T17:24:09.360Z"
  },
  "context:calculates": {
    "category": "context_clues",
    "keyword": "calculates",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "calculateApiUsage",
      "getBreakdownData",
      "fuzzyMatch",
      "updateSummary",
      "calculateTotals",
      "calculateTotalPages",
      "getChartColor",
      "analyzeStorageData"
    ],
    "description": "Code related to calculates",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.789Z"
  },
  "context:individual": {
    "category": "context_clues",
    "keyword": "individual",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "calculateApiUsage",
      "fetchSpotPricesFromApi",
      "tokenizeWords"
    ],
    "description": "Code related to individual",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:requests": {
    "category": "context_clues",
    "keyword": "requests",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "calculateApiUsage"
    ],
    "description": "Code related to requests",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.360Z"
  },
  "context:array": {
    "category": "context_clues",
    "keyword": "array",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "calculateApiUsage",
      "fetchBatchSpotPrices",
      "extractUniqueValues",
      "generateVariations",
      "generateLookupTable",
      "loadLookupTable",
      "refreshLookupTable",
      "initializeAutocomplete",
      "toggleChange",
      "generateColors",
      "filterInventoryAdvanced",
      "tokenizeWords",
      "fuzzySearch",
      "generateBackupHtml",
      "calculateTotalPages",
      "sortInventoryByDateNewestFirst",
      "validateInventoryItem"
    ],
    "description": "Code related to array",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:selectedmetals": {
    "category": "context_clues",
    "keyword": "selectedmetals",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "calculateApiUsage"
    ],
    "description": "Code related to selectedmetals",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.360Z"
  },
  "context:metal": {
    "category": "context_clues",
    "keyword": "metal",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "calculateApiUsage",
      "showManualInput",
      "hideManualInput",
      "resetSpotPrice",
      "getBreakdownData",
      "showDetailsModal",
      "hasMatchingData",
      "calculateTotals",
      "recordSpot",
      "updateManualSpot",
      "resetSpot",
      "resetSpotByName",
      "openEbaySearch",
      "getLastUpdateTime",
      "parseNumistaMetal"
    ],
    "description": "Code related to metal",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:historydays": {
    "category": "context_clues",
    "keyword": "historydays",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "calculateApiUsage"
    ],
    "description": "Code related to historydays",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.360Z"
  },
  "function:fetchBatchSpotPrices": {
    "category": "code_functions",
    "keyword": "fetchBatchSpotPrices",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "fetchBatchSpotPrices"
    ],
    "description": " Makes batch API request for multiple metals @param {string} provider - Provider key from API_PROVIDERS @param {string} apiKey - API key @param {Array} selectedMetals - Array of metal keys to fetch @param {number} historyDays - Number of historical days to fetch @param {Array} historyTimes - Array of HH:MM times to fetch each day @returns {Promise<Object>} Promise resolving to spot prices data ",
    "context_weight": 0.9,
    "line_number": 823,
    "body_preview": "const fetchBatchSpotPrices = async (provider, apiKey, selectedMetals, historyDays = 0, historyTimes = []) => { const providerConfig = API_PROVIDERS[provider]; if (!providerConfig || !providerConfig.batchSupported) {",
    "context_clues": [
      "fetch",
      "batch",
      "spot",
      "prices",
      "makes",
      "request",
      "multiple",
      "metals",
      "param",
      "string",
      "provider",
      "from",
      "api_providers",
      "apikey",
      "array"
    ],
    "last_updated": "2025-08-20T17:24:09.360Z"
  },
  "context:makes": {
    "category": "context_clues",
    "keyword": "makes",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi"
    ],
    "description": "Code related to makes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.361Z"
  },
  "context:multiple": {
    "category": "context_clues",
    "keyword": "multiple",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "fetchBatchSpotPrices",
      "startCellEdit",
      "handleBulkUpload"
    ],
    "description": "Code related to multiple",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "context:api_providers": {
    "category": "context_clues",
    "keyword": "api_providers",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi"
    ],
    "description": "Code related to api_providers",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.361Z"
  },
  "context:apikey": {
    "category": "context_clues",
    "keyword": "apikey",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "fetchBatchSpotPrices",
      "fetchSpotPricesFromApi",
      "testApiConnection"
    ],
    "description": "Code related to apikey",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.362Z"
  },
  "function:fetchSpotPricesFromApi": {
    "category": "code_functions",
    "keyword": "fetchSpotPricesFromApi",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "fetchSpotPricesFromApi"
    ],
    "description": " Makes API request for spot prices (individual or batch) @param {string} provider - Provider key from API_PROVIDERS @param {string} apiKey - API key @returns {Promise<Object>} Promise resolving to spot prices data ",
    "context_weight": 0.9,
    "line_number": 931,
    "body_preview": "const fetchSpotPricesFromApi = async (provider, apiKey) => { const providerConfig = API_PROVIDERS[provider]; if (!providerConfig) {",
    "context_clues": [
      "fetch",
      "spot",
      "prices",
      "from",
      "api",
      "makes",
      "request",
      "individual",
      "batch",
      "param",
      "string",
      "provider",
      "api_providers",
      "apikey",
      "promiseobject"
    ],
    "last_updated": "2025-08-20T17:24:09.361Z"
  },
  "context:promiseobject": {
    "category": "context_clues",
    "keyword": "promiseobject",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "fetchSpotPricesFromApi"
    ],
    "description": "Code related to promiseobject",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.361Z"
  },
  "function:syncSpotPricesFromApi": {
    "category": "code_functions",
    "keyword": "syncSpotPricesFromApi",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "syncSpotPricesFromApi"
    ],
    "description": " Syncs spot prices from API and updates the application @param {boolean} showProgress - Whether to show progress indicators @param {boolean} forceSync - Whether to force sync even if cache is valid @returns {Promise<boolean>} Promise resolving to success status ",
    "context_weight": 0.9,
    "line_number": 1077,
    "body_preview": "const syncSpotPricesFromApi = async ( showProgress = true, forceSync = false,",
    "context_clues": [
      "sync",
      "spot",
      "prices",
      "from",
      "api",
      "syncs",
      "updates",
      "application",
      "param",
      "boolean",
      "showprogress",
      "whether",
      "show",
      "progress",
      "indicators"
    ],
    "last_updated": "2025-08-20T17:24:09.362Z"
  },
  "context:application": {
    "category": "context_clues",
    "keyword": "application",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "syncSpotPricesFromApi",
      "CustomMapping",
      "setupEventListeners",
      "createBackupZip",
      "restoreBackupZip",
      "updateSummary",
      "setTheme",
      "getAppTitle",
      "populateVersionModal",
      "setupVersionModalEvents",
      "syncApplicationDocs"
    ],
    "description": "Code related to application",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.416Z"
  },
  "context:showprogress": {
    "category": "context_clues",
    "keyword": "showprogress",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "syncSpotPricesFromApi"
    ],
    "description": "Code related to showprogress",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.362Z"
  },
  "context:whether": {
    "category": "context_clues",
    "keyword": "whether",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "syncSpotPricesFromApi",
      "updateSyncButtonStates",
      "safeGetElement"
    ],
    "description": "Code related to whether",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "context:progress": {
    "category": "context_clues",
    "keyword": "progress",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "syncSpotPricesFromApi",
      "updateSyncButtonStates",
      "startImportProgress",
      "updateImportProgress",
      "endImportProgress",
      "updateProgressBar"
    ],
    "description": "Code related to progress",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:indicators": {
    "category": "context_clues",
    "keyword": "indicators",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "syncSpotPricesFromApi",
      "getTrendIndicator"
    ],
    "description": "Code related to indicators",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "function:testApiConnection": {
    "category": "code_functions",
    "keyword": "testApiConnection",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "testApiConnection"
    ],
    "description": " Tests API connection @param {string} provider - Provider key @param {string} apiKey - API key to test @returns {Promise<boolean>} Promise resolving to connection test result ",
    "context_weight": 0.9,
    "line_number": 1204,
    "body_preview": "const testApiConnection = async (provider, apiKey) => { try { // Just test one metal (silver) to verify connection",
    "context_clues": [
      "test",
      "api",
      "connection",
      "tests",
      "param",
      "string",
      "provider",
      "apikey",
      "promiseboolean",
      "promise",
      "resolving",
      "result"
    ],
    "last_updated": "2025-08-20T17:24:09.362Z"
  },
  "context:promiseboolean": {
    "category": "context_clues",
    "keyword": "promiseboolean",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "testApiConnection"
    ],
    "description": "Code related to promiseboolean",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.362Z"
  },
  "context:resolving": {
    "category": "context_clues",
    "keyword": "resolving",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "testApiConnection"
    ],
    "description": "Code related to resolving",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.362Z"
  },
  "context:result": {
    "category": "context_clues",
    "keyword": "result",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "testApiConnection",
      "monitorPerformance",
      "validateInventoryItem"
    ],
    "description": "Code related to result",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "function:handleProviderSync": {
    "category": "code_functions",
    "keyword": "handleProviderSync",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "handleProviderSync"
    ],
    "description": " Handles testing and syncing for a specific provider @param {string} provider - Provider key ",
    "context_weight": 0.9,
    "line_number": 1255,
    "body_preview": "const handleProviderSync = async (provider) => { const keyInput = document.getElementById(`apiKey_${provider}`); if (!keyInput) return;",
    "context_clues": [
      "handle",
      "provider",
      "sync",
      "handles",
      "testing",
      "syncing",
      "specific",
      "param",
      "string",
      "handleprovidersync",
      "getelementbyid",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.363Z"
  },
  "context:handles": {
    "category": "context_clues",
    "keyword": "handles",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/search.js",
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "handleProviderSync",
      "safeAttachListener",
      "setupColumnResizing",
      "simplifyChipValue",
      "saveInventory",
      "sanitizeTablesOnLoad",
      "loadInventory",
      "openNumistaModal",
      "filterInventory",
      "sortInventory",
      "parseDate",
      "currentMonthKey",
      "handleError"
    ],
    "description": "Code related to handles",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:syncing": {
    "category": "context_clues",
    "keyword": "syncing",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "handleProviderSync",
      "updateSyncButtonStates"
    ],
    "description": "Code related to syncing",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.364Z"
  },
  "context:specific": {
    "category": "context_clues",
    "keyword": "specific",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rEngine/configure-apis.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "handleProviderSync",
      "showManualInput",
      "hideManualInput",
      "extractUniqueValues",
      "removeFilter",
      "applyQuickFilter",
      "getChangelogForVersion",
      "createHistoryTable",
      "_create_type_specific_entry",
      "configureProvider",
      "detectPainPoint"
    ],
    "description": "Code related to specific",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:handleprovidersync": {
    "category": "context_clues",
    "keyword": "handleprovidersync",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "handleProviderSync"
    ],
    "description": "Code related to handleprovidersync",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.363Z"
  },
  "function:syncAllProviders": {
    "category": "code_functions",
    "keyword": "syncAllProviders",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "syncAllProviders"
    ],
    "description": " Syncs all configured providers and records results ",
    "context_weight": 0.9,
    "line_number": 1341,
    "body_preview": "const syncAllProviders = async () => { const config = loadApiConfig(); if (!config || !config.keys) return 0;",
    "context_clues": [
      "sync",
      "all",
      "providers",
      "syncs",
      "configured",
      "records",
      "results",
      "loadapiconfig",
      "updated",
      "fetchspotpricesfromapi",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.363Z"
  },
  "context:all": {
    "category": "context_clues",
    "keyword": "all",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/filters.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "syncAllProviders",
      "clearAllFilters",
      "testAllProviders"
    ],
    "description": "Code related to all",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.583Z"
  },
  "context:records": {
    "category": "context_clues",
    "keyword": "records",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "syncAllProviders",
      "logChange",
      "sanitizeTablesOnLoad",
      "recordSpot"
    ],
    "description": "Code related to records",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:fetchspotpricesfromapi": {
    "category": "context_clues",
    "keyword": "fetchspotpricesfromapi",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "syncAllProviders"
    ],
    "description": "Code related to fetchspotpricesfromapi",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.363Z"
  },
  "function:updateSyncButtonStates": {
    "category": "code_functions",
    "keyword": "updateSyncButtonStates",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateSyncButtonStates"
    ],
    "description": " Updates sync button states based on API availability @param {boolean} syncing - Whether sync is in progress ",
    "context_weight": 0.9,
    "line_number": 1376,
    "body_preview": "const updateSyncButtonStates = (syncing = false) => { const hasApi = apiConfig && apiConfig.provider && apiConfig.keys[apiConfig.provider];",
    "context_clues": [
      "update",
      "sync",
      "button",
      "states",
      "updates",
      "based",
      "availability",
      "param",
      "boolean",
      "syncing",
      "whether",
      "progress",
      "updatesyncbuttonstates",
      "getelementbyid",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.364Z"
  },
  "context:availability": {
    "category": "context_clues",
    "keyword": "availability",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "updateSyncButtonStates"
    ],
    "description": "Code related to availability",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.364Z"
  },
  "function:showApiModal": {
    "category": "code_functions",
    "keyword": "showApiModal",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "showApiModal"
    ],
    "description": " Updates API status display in modal   Shows settings modal and populates API fields ",
    "context_weight": 0.9,
    "line_number": 1400,
    "body_preview": "const showApiModal = () => { const modal = document.getElementById(\"apiModal\"); if (!modal) return;",
    "context_clues": [
      "show",
      "api",
      "modal",
      "updates",
      "status",
      "display",
      "shows",
      "settings",
      "populates",
      "fields",
      "getelementbyid",
      "loadapiconfig"
    ],
    "last_updated": "2025-08-20T17:24:09.364Z"
  },
  "context:fields": {
    "category": "context_clues",
    "keyword": "fields",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "showApiModal",
      "CustomMapping",
      "sanitizeObjectFields",
      "sanitizeImportedItem"
    ],
    "description": "Code related to fields",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "function:hideApiModal": {
    "category": "code_functions",
    "keyword": "hideApiModal",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "hideApiModal"
    ],
    "description": " Hides API modal ",
    "context_weight": 0.9,
    "line_number": 1438,
    "body_preview": "const hideApiModal = () => { const modal = document.getElementById(\"apiModal\"); if (modal) {",
    "context_clues": [
      "hide",
      "api",
      "modal",
      "hides",
      "getelementbyid",
      "openmodalbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.365Z"
  },
  "function:showFilesModal": {
    "category": "code_functions",
    "keyword": "showFilesModal",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "showFilesModal"
    ],
    "description": "Function showFilesModal in api.js",
    "context_weight": 0.9,
    "line_number": 1445,
    "body_preview": "const showFilesModal = () => { const modal = document.getElementById(\"filesModal\"); if (window.openModalById) {",
    "context_clues": [
      "show",
      "files",
      "modal",
      "getelementbyid",
      "openmodalbyid",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.365Z"
  },
  "function:hideFilesModal": {
    "category": "code_functions",
    "keyword": "hideFilesModal",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "hideFilesModal"
    ],
    "description": "Function hideFilesModal in api.js",
    "context_weight": 0.9,
    "line_number": 1455,
    "body_preview": "const hideFilesModal = () => { if (window.closeModalById) { closeModalById('filesModal');",
    "context_clues": [
      "hide",
      "files",
      "modal",
      "closemodalbyid",
      "getelementbyid",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.365Z"
  },
  "function:showProviderInfo": {
    "category": "code_functions",
    "keyword": "showProviderInfo",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "showProviderInfo"
    ],
    "description": " Shows provider information modal @param {string} providerKey ",
    "context_weight": 0.9,
    "line_number": 1476,
    "body_preview": "const showProviderInfo = (providerKey) => { const modal = document.getElementById(\"apiInfoModal\"); if (!modal || !API_PROVIDERS[providerKey]) return;",
    "context_clues": [
      "show",
      "provider",
      "info",
      "shows",
      "information",
      "modal",
      "param",
      "string",
      "providerkey",
      "getelementbyid",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.366Z"
  },
  "context:info": {
    "category": "context_clues",
    "keyword": "info",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "showProviderInfo",
      "hideProviderInfo",
      "getLastUpdateTime",
      "getDockerPersistenceInstructions"
    ],
    "description": "Code related to info",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:providerkey": {
    "category": "context_clues",
    "keyword": "providerkey",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "showProviderInfo"
    ],
    "description": "Code related to providerkey",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.366Z"
  },
  "function:hideProviderInfo": {
    "category": "code_functions",
    "keyword": "hideProviderInfo",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "hideProviderInfo"
    ],
    "description": " Hides provider information modal ",
    "context_weight": 0.9,
    "line_number": 1510,
    "body_preview": "const hideProviderInfo = () => { const modal = document.getElementById(\"apiInfoModal\"); if (modal) {",
    "context_clues": [
      "hide",
      "provider",
      "info",
      "hides",
      "information",
      "modal",
      "getelementbyid",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.366Z"
  },
  "function:showManualInput": {
    "category": "code_functions",
    "keyword": "showManualInput",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "showManualInput"
    ],
    "description": " Shows manual price input for a specific metal @param {string} metal - Metal name (Silver, Gold, etc.) ",
    "context_weight": 0.9,
    "line_number": 1539,
    "body_preview": "const showManualInput = (metal) => { const manualInput = document.getElementById(`manualInput${metal}`); if (manualInput) {",
    "context_clues": [
      "show",
      "manual",
      "input",
      "shows",
      "price",
      "specific",
      "metal",
      "param",
      "string",
      "name",
      "silver",
      "gold",
      "getelementbyid",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.366Z"
  },
  "context:manual": {
    "category": "context_clues",
    "keyword": "manual",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "showManualInput",
      "hideManualInput",
      "recordSpot",
      "updateManualSpot"
    ],
    "description": "Code related to manual",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:input": {
    "category": "context_clues",
    "keyword": "input",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "showManualInput",
      "hideManualInput",
      "mapField",
      "clearAllFilters",
      "tokenizeWords",
      "generateNGrams",
      "fuzzyMatch",
      "updateManualSpot",
      "sanitizeHtml",
      "stripNonAlphanumeric",
      "createReadline",
      "promptHidden",
      "prompt"
    ],
    "description": "Code related to input",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:name": {
    "category": "context_clues",
    "keyword": "name",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "showManualInput",
      "hideManualInput",
      "resetSpotPrice",
      "extractUniqueValues",
      "normalizeItemName",
      "logChange",
      "addMapping",
      "mapField",
      "hasMatchingData",
      "openNumistaModal",
      "resetSpotByName",
      "getStorageItemDisplayName",
      "openEbaySearch",
      "getBrandingName",
      "getAppTitle",
      "getFooterDomain",
      "monitorPerformance",
      "downloadFile"
    ],
    "description": "Code related to name",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "context:silver": {
    "category": "context_clues",
    "keyword": "silver",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "showManualInput",
      "hideManualInput",
      "resetSpotPrice",
      "calculateTotals",
      "updateManualSpot",
      "resetSpot",
      "getDisplayComposition"
    ],
    "description": "Code related to silver",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:gold": {
    "category": "context_clues",
    "keyword": "gold",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "showManualInput",
      "hideManualInput",
      "resetSpotPrice",
      "calculateTotals",
      "updateManualSpot",
      "resetSpot",
      "getDisplayComposition"
    ],
    "description": "Code related to gold",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "function:hideManualInput": {
    "category": "code_functions",
    "keyword": "hideManualInput",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "hideManualInput"
    ],
    "description": " Hides manual price input for a specific metal @param {string} metal - Metal name (Silver, Gold, etc.) ",
    "context_weight": 0.9,
    "line_number": 1556,
    "body_preview": "const hideManualInput = (metal) => { const manualInput = document.getElementById(`manualInput${metal}`); if (manualInput) {",
    "context_clues": [
      "hide",
      "manual",
      "input",
      "hides",
      "price",
      "specific",
      "metal",
      "param",
      "string",
      "name",
      "silver",
      "gold",
      "getelementbyid",
      "clear",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.367Z"
  },
  "function:resetSpotPrice": {
    "category": "code_functions",
    "keyword": "resetSpotPrice",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "resetSpotPrice"
    ],
    "description": " Resets spot price to default or API cached value @param {string} metal - Metal name (Silver, Gold, etc.) ",
    "context_weight": 0.9,
    "line_number": 1573,
    "body_preview": "const resetSpotPrice = (metal) => { const metalConfig = Object.values(METALS).find((m) => m.name === metal); if (!metalConfig) return;",
    "context_clues": [
      "reset",
      "spot",
      "price",
      "resets",
      "default",
      "cached",
      "value",
      "param",
      "string",
      "metal",
      "name",
      "silver",
      "gold",
      "resetspotprice",
      "find"
    ],
    "last_updated": "2025-08-20T17:24:09.367Z"
  },
  "context:resets": {
    "category": "context_clues",
    "keyword": "resets",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "resetSpotPrice",
      "clearAllFilters",
      "closeNumistaModal",
      "resetSpot"
    ],
    "description": "Code related to resets",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:value": {
    "category": "context_clues",
    "keyword": "value",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "resetSpotPrice",
      "removeFilter",
      "simplifyChipValue",
      "applyQuickFilter",
      "applyColumnFilter",
      "formatStorageLocation",
      "validateFieldValue",
      "togglePriceView",
      "toggleGlobalPriceView",
      "getValue",
      "recordSpot",
      "resetSpot",
      "addCompositionOption",
      "formatCurrency",
      "formatLossProfit",
      "detectCurrency",
      "normalizeType",
      "loadData"
    ],
    "description": "Code related to value",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:resetspotprice": {
    "category": "context_clues",
    "keyword": "resetspotprice",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "resetSpotPrice",
      "resetSpotByName"
    ],
    "description": "Code related to resetspotprice",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.730Z"
  },
  "function:createBackupData": {
    "category": "code_functions",
    "keyword": "createBackupData",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "createBackupData"
    ],
    "description": " Exports backup data including Metals API configuration @returns {Object} Complete backup data object ",
    "context_weight": 0.9,
    "line_number": 1612,
    "body_preview": "const createBackupData = () => { const backupData = { version: APP_VERSION,",
    "context_clues": [
      "create",
      "backup",
      "data",
      "exports",
      "including",
      "metals",
      "configuration",
      "object",
      "complete",
      "createbackupdata",
      "loaddata",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.367Z"
  },
  "context:backup": {
    "category": "context_clues",
    "keyword": "backup",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "createBackupData",
      "downloadCompleteBackup",
      "createBackupZip",
      "restoreBackupZip",
      "generateBackupHtml",
      "generateReadmeContent",
      "ensure_backup_dir",
      "backup_json_files",
      "restore_from_backup",
      "load_json_memory_fallback",
      "get_available_tasks_from_json",
      "search_json_memory",
      "create_emergency_recovery_package",
      "export_mcp_memory_to_json",
      "load_backup_memory",
      "get_available_tasks_from_backup",
      "search_backup_memory",
      "backup_file",
      "backup_database",
      "moveFileWithBackup"
    ],
    "description": "Code related to backup",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:exports": {
    "category": "context_clues",
    "keyword": "exports",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "createBackupData",
      "exportNumistaCsv",
      "exportCsv",
      "exportJson",
      "exportPdf"
    ],
    "description": "Code related to exports",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.641Z"
  },
  "context:including": {
    "category": "context_clues",
    "keyword": "including",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "createBackupData",
      "downloadCompleteBackup"
    ],
    "description": "Code related to including",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.368Z"
  },
  "context:complete": {
    "category": "context_clues",
    "keyword": "complete",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "createBackupData",
      "downloadCompleteBackup",
      "createBackupZip",
      "generateHTMLReport"
    ],
    "description": "Code related to complete",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.896Z"
  },
  "context:createbackupdata": {
    "category": "context_clues",
    "keyword": "createbackupdata",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "createBackupData"
    ],
    "description": "Code related to createbackupdata",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.367Z"
  },
  "context:loaddata": {
    "category": "context_clues",
    "keyword": "loaddata",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "createBackupData"
    ],
    "description": "Code related to loaddata",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.367Z"
  },
  "function:downloadCompleteBackup": {
    "category": "code_functions",
    "keyword": "downloadCompleteBackup",
    "files": [
      "rProjects/StackTrackr/js/api.js"
    ],
    "functions": [
      "downloadCompleteBackup"
    ],
    "description": " Downloads complete backup files including inventory and Metals API configuration ",
    "context_weight": 0.9,
    "line_number": 1639,
    "body_preview": "const downloadCompleteBackup = async () => { try { const timestamp = new Date()",
    "context_clues": [
      "download",
      "complete",
      "backup",
      "downloads",
      "files",
      "including",
      "inventory",
      "metals",
      "configuration",
      "create",
      "export",
      "loaddatasync",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.368Z"
  },
  "context:download": {
    "category": "context_clues",
    "keyword": "download",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "downloadCompleteBackup",
      "downloadFile",
      "downloadStorageReport",
      "downloadHTMLReport"
    ],
    "description": "Code related to download",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:downloads": {
    "category": "context_clues",
    "keyword": "downloads",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "downloadCompleteBackup",
      "downloadFile"
    ],
    "description": "Code related to downloads",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:inventory": {
    "category": "context_clues",
    "keyword": "inventory",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/search.js",
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "downloadCompleteBackup",
      "extractUniqueValues",
      "generateLookupTable",
      "loadLookupTable",
      "refreshLookupTable",
      "initializeAutocomplete",
      "logChange",
      "setupColumnResizing",
      "generateCategorySummary",
      "hasMatchingData",
      "renderActiveFilters",
      "filterInventoryAdvanced",
      "fuzzyMatch",
      "optimizeStoragePhase1C",
      "createBackupZip",
      "restoreBackupZip",
      "generateBackupHtml",
      "generateReadmeContent",
      "saveInventory",
      "sanitizeTablesOnLoad",
      "loadInventory",
      "getColor",
      "filterLink",
      "recalcItem",
      "persistInventoryAndRefresh",
      "updateItemCount",
      "cancelEdit",
      "renderCell",
      "hideEmptyColumns",
      "renderTable",
      "updateSummary",
      "deleteItem",
      "editItem",
      "toggleCollectable",
      "startImportProgress",
      "updateImportProgress",
      "endImportProgress",
      "importCsv",
      "importNumistaCsv",
      "getValue",
      "parsePriceField",
      "exportNumistaCsv",
      "exportCsv",
      "importJson",
      "exportJson",
      "exportPdf",
      "filterInventory",
      "sortInventory",
      "generateInventoryTable",
      "sortInventoryByDateNewestFirst",
      "validateInventoryItem",
      "sanitizeImportedItem"
    ],
    "description": "Code related to inventory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:loaddatasync": {
    "category": "context_clues",
    "keyword": "loaddatasync",
    "files": [
      "rProjects/StackTrackr/js/api.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "downloadCompleteBackup",
      "loadSpotHistory",
      "saveDataSync",
      "loadDataSync"
    ],
    "description": "Code related to loaddatasync",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "function:extractUniqueValues": {
    "category": "code_functions",
    "keyword": "extractUniqueValues",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "extractUniqueValues"
    ],
    "description": " Extract unique values from inventory for a specific field  @param {Array} inventory - Current inventory data @param {string} field - Field name to extract @param {Object} [options={}] - Extraction options @param {boolean} [options.includeEmpty=false] - Include empty/null values @param {boolean} [options.caseSensitive=false] - Preserve original case @returns {string[]} Array of unique values ",
    "context_weight": 0.9,
    "line_number": 204,
    "body_preview": "const extractUniqueValues = (inventory, field, options = {}) => { try { const { includeEmpty = false, caseSensitive = false } = options;",
    "context_clues": [
      "extract",
      "unique",
      "values",
      "from",
      "inventory",
      "specific",
      "field",
      "param",
      "array",
      "current",
      "data",
      "string",
      "name",
      "object",
      "options"
    ],
    "last_updated": "2025-08-20T17:24:09.382Z"
  },
  "context:extract": {
    "category": "context_clues",
    "keyword": "extract",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "extractUniqueValues",
      "getChangelogForVersion"
    ],
    "description": "Code related to extract",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:unique": {
    "category": "context_clues",
    "keyword": "unique",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "extractUniqueValues"
    ],
    "description": "Code related to unique",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.382Z"
  },
  "context:values": {
    "category": "context_clues",
    "keyword": "values",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "extractUniqueValues",
      "logItemChanges",
      "createPieChart",
      "simplifyChipValue",
      "applyQuickFilter",
      "recalcItem",
      "debugLog",
      "getCompositionFirstWords"
    ],
    "description": "Code related to values",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:field": {
    "category": "context_clues",
    "keyword": "field",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "extractUniqueValues",
      "addMapping",
      "mapField",
      "CustomMapping",
      "removeFilter",
      "hasMatchingData",
      "applyQuickFilter",
      "applyColumnFilter",
      "validateFieldValue",
      "startCellEdit",
      "parsePriceField"
    ],
    "description": "Code related to field",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.639Z"
  },
  "context:options": {
    "category": "context_clues",
    "keyword": "options",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "extractUniqueValues",
      "fuzzySearch",
      "refreshCompositionOptions",
      "normalizeType",
      "downloadStorageReport"
    ],
    "description": "Code related to options",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "file:autocomplete.js": {
    "category": "file_relationships",
    "keyword": "autocomplete.js",
    "primary_file": "rProjects/StackTrackr/js/autocomplete.js",
    "functions": [
      "extractUniqueValues",
      "generateVariations",
      "normalizeItemName",
      "buildSearchIndices",
      "generateLookupTable",
      "createEmptyLookupTable",
      "loadLookupTable",
      "getCachedLookupTable",
      "cacheLookupTable",
      "clearLookupCache",
      "getLookupStats",
      "refreshLookupTable",
      "initializeAutocomplete"
    ],
    "description": "File containing extractUniqueValues and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.936Z"
  },
  "function:generateVariations": {
    "category": "code_functions",
    "keyword": "generateVariations",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "generateVariations"
    ],
    "description": " Generate searchable variations for a given term Includes common abbreviations, partial matches, and variations  @param {string} term - Original term @returns {string[]} Array of searchable variations ",
    "context_weight": 0.9,
    "line_number": 254,
    "body_preview": "const generateVariations = (term) => { if (!term || typeof term !== 'string') return []; const variations = new Set([term]);",
    "context_clues": [
      "generate",
      "variations",
      "searchable",
      "given",
      "term",
      "includes",
      "common",
      "abbreviations",
      "partial",
      "matches",
      "param",
      "string",
      "original",
      "array",
      "generatevariations"
    ],
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:variations": {
    "category": "context_clues",
    "keyword": "variations",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "generateVariations"
    ],
    "description": "Code related to variations",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:searchable": {
    "category": "context_clues",
    "keyword": "searchable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "generateVariations",
      "buildSearchIndices"
    ],
    "description": "Code related to searchable",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:given": {
    "category": "context_clues",
    "keyword": "given",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateVariations",
      "createPieChart",
      "hasMatchingData",
      "trapFocus",
      "getChartColor",
      "getContrastColor",
      "openEbaySearch"
    ],
    "description": "Code related to given",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.789Z"
  },
  "context:term": {
    "category": "context_clues",
    "keyword": "term",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "generateVariations"
    ],
    "description": "Code related to term",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:includes": {
    "category": "context_clues",
    "keyword": "includes",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "generateVariations",
      "filterInventoryAdvanced"
    ],
    "description": "Code related to includes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:common": {
    "category": "context_clues",
    "keyword": "common",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "generateVariations",
      "isFeatureEnabled",
      "simplifyChipValue"
    ],
    "description": "Code related to common",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:abbreviations": {
    "category": "context_clues",
    "keyword": "abbreviations",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "generateVariations"
    ],
    "description": "Code related to abbreviations",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:partial": {
    "category": "context_clues",
    "keyword": "partial",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "generateVariations",
      "normalizeString"
    ],
    "description": "Code related to partial",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:matches": {
    "category": "context_clues",
    "keyword": "matches",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "generateVariations",
      "normalizeItemName",
      "fuzzySearch"
    ],
    "description": "Code related to matches",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.597Z"
  },
  "context:original": {
    "category": "context_clues",
    "keyword": "original",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "generateVariations",
      "logItemChanges"
    ],
    "description": "Code related to original",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "context:generatevariations": {
    "category": "context_clues",
    "keyword": "generatevariations",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "generateVariations"
    ],
    "description": "Code related to generatevariations",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "function:normalizeItemName": {
    "category": "code_functions",
    "keyword": "normalizeItemName",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "normalizeItemName"
    ],
    "description": " Normalize item name to base form for grouping Removes year prefixes and matches against lookup table @param {string} fullName - Full item name (e.g., \"2024 American Silver Eagle\") @returns {string} Base name (e.g., \"American Silver Eagle\") ",
    "context_weight": 0.9,
    "line_number": 300,
    "body_preview": "const normalizeItemName = (fullName) => { if (!fullName || typeof fullName !== 'string') { return fullName || '';",
    "context_clues": [
      "normalize",
      "item",
      "name",
      "base",
      "form",
      "grouping",
      "removes",
      "year",
      "prefixes",
      "matches",
      "against",
      "lookup",
      "table",
      "param",
      "string"
    ],
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:normalize": {
    "category": "context_clues",
    "keyword": "normalize",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeItemName",
      "normalizeString",
      "normalizeType"
    ],
    "description": "Code related to normalize",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:item": {
    "category": "context_clues",
    "keyword": "item",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "normalizeItemName",
      "logItemChanges",
      "generateCategorySummary",
      "fuzzyMatch",
      "recalcItem",
      "updateItemCount",
      "deleteItem",
      "showNotes",
      "editItem",
      "toggleCollectable",
      "togglePriceView",
      "showItemDetail",
      "closeItemDetail",
      "getStorageItemDisplayName",
      "openEbaySearch",
      "normalizeType",
      "validateInventoryItem",
      "sanitizeImportedItem",
      "analyzeStorageItem",
      "getStorageItemDescription",
      "createStorageItemModal",
      "generateItemDataTable",
      "_update_memory_item"
    ],
    "description": "Code related to item",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:base": {
    "category": "context_clues",
    "keyword": "base",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeItemName",
      "buildSearchIndices",
      "getAppTitle"
    ],
    "description": "Code related to base",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "context:grouping": {
    "category": "context_clues",
    "keyword": "grouping",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "normalizeItemName"
    ],
    "description": "Code related to grouping",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:removes": {
    "category": "context_clues",
    "keyword": "removes",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeItemName",
      "clear",
      "removeFilter",
      "saveInventory",
      "sanitizeTablesOnLoad",
      "purgeSpotHistory",
      "stripNonAlphanumeric",
      "cleanString",
      "loadDataSync",
      "cleanupStorage"
    ],
    "description": "Code related to removes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:year": {
    "category": "context_clues",
    "keyword": "year",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeItemName",
      "formatDisplayDate"
    ],
    "description": "Code related to year",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "context:prefixes": {
    "category": "context_clues",
    "keyword": "prefixes",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "normalizeItemName"
    ],
    "description": "Code related to prefixes",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:against": {
    "category": "context_clues",
    "keyword": "against",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "normalizeItemName"
    ],
    "description": "Code related to against",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:lookup": {
    "category": "context_clues",
    "keyword": "lookup",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "normalizeItemName",
      "buildSearchIndices",
      "generateLookupTable",
      "createEmptyLookupTable",
      "loadLookupTable",
      "getCachedLookupTable",
      "cacheLookupTable",
      "clearLookupCache",
      "getLookupStats",
      "refreshLookupTable"
    ],
    "description": "Code related to lookup",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "function:buildSearchIndices": {
    "category": "code_functions",
    "keyword": "buildSearchIndices",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "buildSearchIndices"
    ],
    "description": " Build searchable indices with variants for all lookup data  @param {LookupTable} lookupTable - Base lookup table data @returns {Object} Enhanced lookup table with search indices ",
    "context_weight": 0.9,
    "line_number": 384,
    "body_preview": "const buildSearchIndices = (lookupTable) => { try { const indices = {",
    "context_clues": [
      "build",
      "search",
      "indices",
      "searchable",
      "with",
      "variants",
      "lookup",
      "data",
      "param",
      "lookuptable",
      "base",
      "table",
      "object",
      "enhanced",
      "buildsearchindices"
    ],
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:build": {
    "category": "context_clues",
    "keyword": "build",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/constants.js",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "buildSearchIndices",
      "getVersionString",
      "getTemplateVariables",
      "showStats",
      "quickSetup",
      "buildSearchMatrix"
    ],
    "description": "Code related to build",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "context:indices": {
    "category": "context_clues",
    "keyword": "indices",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "buildSearchIndices"
    ],
    "description": "Code related to indices",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:variants": {
    "category": "context_clues",
    "keyword": "variants",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "buildSearchIndices"
    ],
    "description": "Code related to variants",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "context:lookuptable": {
    "category": "context_clues",
    "keyword": "lookuptable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "buildSearchIndices",
      "createEmptyLookupTable",
      "cacheLookupTable",
      "refreshLookupTable"
    ],
    "description": "Code related to lookuptable",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "context:buildsearchindices": {
    "category": "context_clues",
    "keyword": "buildsearchindices",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "buildSearchIndices"
    ],
    "description": "Code related to buildsearchindices",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.383Z"
  },
  "function:generateLookupTable": {
    "category": "code_functions",
    "keyword": "generateLookupTable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "generateLookupTable"
    ],
    "description": " Generate lookup table from current inventory data with pre-built seed data  @param {Array} [inventory] - Inventory data (defaults to global inventory) @param {Object} [options={}] - Generation options @param {boolean} [options.includeAbbreviations=true] - Include metal abbreviations @param {boolean} [options.buildIndices=true] - Build search indices @param {boolean} [options.usePrebuiltData=true] - Include pre-built industry data @returns {LookupTable} Generated lookup table ",
    "context_weight": 0.9,
    "line_number": 460,
    "body_preview": "const generateLookupTable = (inventory, options = {}) => { try { const { includeAbbreviations = true, buildIndices = true, usePrebuiltData = true } = options;",
    "context_clues": [
      "generate",
      "lookup",
      "table",
      "from",
      "current",
      "inventory",
      "data",
      "with",
      "prebuilt",
      "seed",
      "param",
      "array",
      "defaults",
      "global",
      "object"
    ],
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:prebuilt": {
    "category": "context_clues",
    "keyword": "prebuilt",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "generateLookupTable",
      "createEmptyLookupTable"
    ],
    "description": "Code related to prebuilt",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:seed": {
    "category": "context_clues",
    "keyword": "seed",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "generateLookupTable",
      "createEmptyLookupTable"
    ],
    "description": "Code related to seed",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:defaults": {
    "category": "context_clues",
    "keyword": "defaults",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateLookupTable",
      "fetchSpotPrice",
      "sanitizeImportedItem"
    ],
    "description": "Code related to defaults",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:global": {
    "category": "context_clues",
    "keyword": "global",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "generateLookupTable",
      "getNextSerial",
      "toggleGlobalPriceView"
    ],
    "description": "Code related to global",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "function:createEmptyLookupTable": {
    "category": "code_functions",
    "keyword": "createEmptyLookupTable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "createEmptyLookupTable"
    ],
    "description": " Create an empty lookup table structure with pre-built data  @returns {LookupTable} Empty lookup table with pre-built seed data ",
    "context_weight": 0.9,
    "line_number": 557,
    "body_preview": "const createEmptyLookupTable = () => ({ names: [...PREBUILT_LOOKUP_DATA], purchaseLocations: [",
    "context_clues": [
      "create",
      "empty",
      "lookup",
      "table",
      "structure",
      "with",
      "prebuilt",
      "data",
      "lookuptable",
      "seed",
      "createemptylookuptable",
      "autocomplete"
    ],
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:empty": {
    "category": "context_clues",
    "keyword": "empty",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "createEmptyLookupTable",
      "hideEmptyColumns",
      "sanitizeImportedItem"
    ],
    "description": "Code related to empty",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:structure": {
    "category": "context_clues",
    "keyword": "structure",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "createEmptyLookupTable",
      "cleanupDocumentationStructure",
      "createCorrectStructure",
      "moveFilesToCorrectLocations",
      "calculateCorrectPath",
      "moveFileWithBackup",
      "findFilesRecursively",
      "cleanupRecursiveDirectories",
      "findRecursiveDirectories",
      "verifyStructure",
      "countFiles"
    ],
    "description": "Code related to structure",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:createemptylookuptable": {
    "category": "context_clues",
    "keyword": "createemptylookuptable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "createEmptyLookupTable",
      "getLookupStats"
    ],
    "description": "Code related to createemptylookuptable",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.385Z"
  },
  "context:autocomplete": {
    "category": "context_clues",
    "keyword": "autocomplete",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "createEmptyLookupTable",
      "getCachedLookupTable",
      "cacheLookupTable",
      "clearLookupCache",
      "getLookupStats",
      "initializeAutocomplete"
    ],
    "description": "Code related to autocomplete",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "function:loadLookupTable": {
    "category": "code_functions",
    "keyword": "loadLookupTable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "loadLookupTable"
    ],
    "description": " Load lookup table from cache or generate new one  @param {Array} [inventory] - Current inventory data @param {boolean} [forceRefresh=false] - Force regeneration regardless of cache @returns {LookupTable} Lookup table data ",
    "context_weight": 0.9,
    "line_number": 587,
    "body_preview": "const loadLookupTable = (inventory, forceRefresh = false) => { try { // Check if we should use cached data",
    "context_clues": [
      "load",
      "lookup",
      "table",
      "from",
      "cache",
      "generate",
      "param",
      "array",
      "inventory",
      "current",
      "data",
      "boolean",
      "forcerefreshfalse",
      "force",
      "regeneration"
    ],
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:forcerefreshfalse": {
    "category": "context_clues",
    "keyword": "forcerefreshfalse",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "loadLookupTable"
    ],
    "description": "Code related to forcerefreshfalse",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:force": {
    "category": "context_clues",
    "keyword": "force",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "loadLookupTable"
    ],
    "description": "Code related to force",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:regeneration": {
    "category": "context_clues",
    "keyword": "regeneration",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "loadLookupTable"
    ],
    "description": "Code related to regeneration",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "function:getCachedLookupTable": {
    "category": "code_functions",
    "keyword": "getCachedLookupTable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "getCachedLookupTable"
    ],
    "description": " Get cached lookup table if valid  @returns {LookupTable|null} Cached lookup table or null if invalid/expired ",
    "context_weight": 0.9,
    "line_number": 620,
    "body_preview": "const getCachedLookupTable = () => { try { if (typeof localStorage === 'undefined') return null;",
    "context_clues": [
      "get",
      "cached",
      "lookup",
      "table",
      "valid",
      "lookuptablenull",
      "null",
      "invalidexpired",
      "getcachedlookuptable",
      "getitem",
      "parseint",
      "autocomplete"
    ],
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:valid": {
    "category": "context_clues",
    "keyword": "valid",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "getCachedLookupTable"
    ],
    "description": "Code related to valid",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:lookuptablenull": {
    "category": "context_clues",
    "keyword": "lookuptablenull",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "getCachedLookupTable"
    ],
    "description": "Code related to lookuptablenull",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:invalidexpired": {
    "category": "context_clues",
    "keyword": "invalidexpired",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "getCachedLookupTable"
    ],
    "description": "Code related to invalidexpired",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "context:getcachedlookuptable": {
    "category": "context_clues",
    "keyword": "getcachedlookuptable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "getCachedLookupTable"
    ],
    "description": "Code related to getcachedlookuptable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.384Z"
  },
  "function:cacheLookupTable": {
    "category": "code_functions",
    "keyword": "cacheLookupTable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "cacheLookupTable"
    ],
    "description": " Cache lookup table to localStorage  @param {LookupTable} lookupTable - Lookup table to cache ",
    "context_weight": 0.9,
    "line_number": 665,
    "body_preview": "const cacheLookupTable = (lookupTable) => { try { if (typeof localStorage === 'undefined') return;",
    "context_clues": [
      "cache",
      "lookup",
      "table",
      "localstorage",
      "param",
      "lookuptable",
      "convert",
      "searchindices",
      "autocomplete"
    ],
    "last_updated": "2025-08-20T17:24:09.385Z"
  },
  "context:searchindices": {
    "category": "context_clues",
    "keyword": "searchindices",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "cacheLookupTable"
    ],
    "description": "Code related to searchindices",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.385Z"
  },
  "function:clearLookupCache": {
    "category": "code_functions",
    "keyword": "clearLookupCache",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "clearLookupCache"
    ],
    "description": " Clear cached lookup table ",
    "context_weight": 0.9,
    "line_number": 691,
    "body_preview": "const clearLookupCache = () => { try { if (typeof localStorage === 'undefined') return;",
    "context_clues": [
      "clear",
      "lookup",
      "cache",
      "cached",
      "table",
      "clearlookupcache",
      "removeitem",
      "cleared",
      "autocomplete"
    ],
    "last_updated": "2025-08-20T17:24:09.385Z"
  },
  "context:clearlookupcache": {
    "category": "context_clues",
    "keyword": "clearlookupcache",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "clearLookupCache",
      "refreshLookupTable"
    ],
    "description": "Code related to clearlookupcache",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "function:getLookupStats": {
    "category": "code_functions",
    "keyword": "getLookupStats",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "getLookupStats"
    ],
    "description": " Get current lookup table stats  @returns {Object} Lookup table statistics ",
    "context_weight": 0.9,
    "line_number": 709,
    "body_preview": "const getLookupStats = () => { const table = currentLookupTable || createEmptyLookupTable(); return {",
    "context_clues": [
      "get",
      "lookup",
      "stats",
      "current",
      "table",
      "object",
      "statistics",
      "getlookupstats",
      "createemptylookuptable",
      "autocomplete"
    ],
    "last_updated": "2025-08-20T17:24:09.385Z"
  },
  "context:stats": {
    "category": "context_clues",
    "keyword": "stats",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "getLookupStats",
      "updateStorageStats",
      "showStats"
    ],
    "description": "Code related to stats",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "context:statistics": {
    "category": "context_clues",
    "keyword": "statistics",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "getLookupStats",
      "updateStorageStats",
      "showStats"
    ],
    "description": "Code related to statistics",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:getlookupstats": {
    "category": "context_clues",
    "keyword": "getlookupstats",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "getLookupStats"
    ],
    "description": "Code related to getlookupstats",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.385Z"
  },
  "function:refreshLookupTable": {
    "category": "code_functions",
    "keyword": "refreshLookupTable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "refreshLookupTable"
    ],
    "description": " Refresh lookup table from current inventory  @param {Array} [inventory] - Current inventory data @returns {LookupTable} Refreshed lookup table ",
    "context_weight": 0.9,
    "line_number": 731,
    "body_preview": "const refreshLookupTable = (inventory) => { console.log('🔄 Refreshing lookup table...'); clearLookupCache();",
    "context_clues": [
      "refresh",
      "lookup",
      "table",
      "from",
      "current",
      "inventory",
      "param",
      "array",
      "data",
      "lookuptable",
      "refreshed",
      "clearlookupcache",
      "loadlookuptable",
      "initialize",
      "loaded"
    ],
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "context:refreshed": {
    "category": "context_clues",
    "keyword": "refreshed",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "refreshLookupTable"
    ],
    "description": "Code related to refreshed",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "context:loadlookuptable": {
    "category": "context_clues",
    "keyword": "loadlookuptable",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "refreshLookupTable"
    ],
    "description": "Code related to loadlookuptable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "function:initializeAutocomplete": {
    "category": "code_functions",
    "keyword": "initializeAutocomplete",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "initializeAutocomplete"
    ],
    "description": " Initialize autocomplete system Should be called when inventory is loaded or changed  @param {Array} [inventory] - Current inventory data ",
    "context_weight": 0.9,
    "line_number": 743,
    "body_preview": "const initializeAutocomplete = (inventory) => { try { console.log('🚀 Initializing autocomplete system...');",
    "context_clues": [
      "initialize",
      "autocomplete",
      "system",
      "should",
      "called",
      "when",
      "inventory",
      "loaded",
      "changed",
      "param",
      "array",
      "current",
      "data",
      "initializeautocomplete",
      "initializing"
    ],
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "context:should": {
    "category": "context_clues",
    "keyword": "should",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "initializeAutocomplete"
    ],
    "description": "Code related to should",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "context:called": {
    "category": "context_clues",
    "keyword": "called",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "initializeAutocomplete"
    ],
    "description": "Code related to called",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "context:changed": {
    "category": "context_clues",
    "keyword": "changed",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js",
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "initializeAutocomplete",
      "createBreakdownElements"
    ],
    "description": "Code related to changed",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:initializeautocomplete": {
    "category": "context_clues",
    "keyword": "initializeautocomplete",
    "files": [
      "rProjects/StackTrackr/js/autocomplete.js"
    ],
    "functions": [
      "initializeAutocomplete"
    ],
    "description": "Code related to initializeautocomplete",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.386Z"
  },
  "function:testNumistaAPI": {
    "category": "code_functions",
    "keyword": "testNumistaAPI",
    "files": [
      "rProjects/StackTrackr/js/catalog-api.js"
    ],
    "functions": [
      "testNumistaAPI"
    ],
    "description": "Test function for Numista API",
    "context_weight": 0.9,
    "line_number": 830,
    "body_preview": "async function testNumistaAPI() { if (!catalogConfig.isNumistaEnabled()) { console.log('❌ Numista API not configured');",
    "context_clues": [
      "test",
      "numista",
      "configured",
      "catalog",
      "api"
    ],
    "last_updated": "2025-08-20T17:24:09.400Z"
  },
  "context:numista": {
    "category": "context_clues",
    "keyword": "numista",
    "files": [
      "rProjects/StackTrackr/js/catalog-api.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "testNumistaAPI",
      "importNumistaCsv",
      "exportNumistaCsv",
      "openNumistaModal",
      "closeNumistaModal",
      "numistaGoBack",
      "numistaGoForward",
      "updateNavButtons",
      "trapFocus",
      "mapNumistaType",
      "parseNumistaMetal"
    ],
    "description": "Code related to numista",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:catalog": {
    "category": "context_clues",
    "keyword": "catalog",
    "files": [
      "rProjects/StackTrackr/js/catalog-api.js",
      "rProjects/StackTrackr/js/catalog-providers.js"
    ],
    "functions": [
      "testNumistaAPI",
      "request",
      "register",
      "get",
      "list"
    ],
    "description": "Code related to catalog",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.432Z"
  },
  "file:catalog-api.js": {
    "category": "file_relationships",
    "keyword": "catalog-api.js",
    "primary_file": "rProjects/StackTrackr/js/catalog-api.js",
    "functions": [
      "testNumistaAPI",
      "request"
    ],
    "description": "File containing testNumistaAPI and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.943Z"
  },
  "function:register": {
    "category": "code_functions",
    "keyword": "register",
    "files": [
      "rProjects/StackTrackr/js/catalog-providers.js"
    ],
    "functions": [
      "register"
    ],
    "description": "Function register in catalog-providers.js",
    "context_weight": 0.9,
    "line_number": 21,
    "body_preview": "function register(p){ map[p.key || p.name.toLowerCase()] = p; } function get(key){ return map[key] || map['numista']; } function list(){ return Object.values(map); }",
    "context_clues": [
      "register",
      "get",
      "catalog",
      "providers"
    ],
    "last_updated": "2025-08-20T17:24:09.431Z"
  },
  "context:register": {
    "category": "context_clues",
    "keyword": "register",
    "files": [
      "rProjects/StackTrackr/js/catalog-providers.js"
    ],
    "functions": [
      "register"
    ],
    "description": "Code related to register",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.431Z"
  },
  "file:catalog-providers.js": {
    "category": "file_relationships",
    "keyword": "catalog-providers.js",
    "primary_file": "rProjects/StackTrackr/js/catalog-providers.js",
    "functions": [
      "register",
      "get",
      "list"
    ],
    "description": "File containing register and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.957Z"
  },
  "function:get": {
    "category": "code_functions",
    "keyword": "get",
    "files": [
      "rProjects/StackTrackr/js/catalog-providers.js"
    ],
    "functions": [
      "get"
    ],
    "description": "Function get in catalog-providers.js",
    "context_weight": 0.9,
    "line_number": 22,
    "body_preview": "function get(key){ return map[key] || map['numista']; } function list(){ return Object.values(map); } register(new NumistaCatalogProvider());",
    "context_clues": [
      "get",
      "catalog",
      "providers"
    ],
    "last_updated": "2025-08-20T17:24:09.431Z"
  },
  "function:list": {
    "category": "code_functions",
    "keyword": "list",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "list"
    ],
    "description": " Returns a simplified view of current mappings. @returns {Array<{regex:string, field:string}>} ",
    "context_weight": 0.9,
    "line_number": 58,
    "body_preview": "function list() { return mappings.map((m) => ({ regex: m.regex.toString(), field: m.field })); }",
    "context_clues": [
      "list",
      "simplified",
      "view",
      "current",
      "mappings",
      "arrayregexstring",
      "fieldstring",
      "addmapping",
      "clear",
      "custommapping"
    ],
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "function:logChange": {
    "category": "code_functions",
    "keyword": "logChange",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logChange"
    ],
    "description": " Change log tracking and rendering Tracks all cell changes in the inventory table   Records a change to the change log and persists it @param {string} itemName - Name of the inventory item @param {string} field - Field that was changed @param {any} oldValue - Previous value @param {any} newValue - New value @param {number} idx - Index of item in inventory array ",
    "context_weight": 0.9,
    "line_number": 14,
    "body_preview": "const logChange = (itemName, field, oldValue, newValue, idx) => { changeLog.push({ timestamp: Date.now(),",
    "context_clues": [
      "log",
      "change",
      "tracking",
      "rendering",
      "tracks",
      "cell",
      "changes",
      "inventory",
      "table",
      "records",
      "persists",
      "param",
      "string",
      "itemname",
      "name"
    ],
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "context:change": {
    "category": "context_clues",
    "keyword": "change",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "logChange",
      "renderChangeLog",
      "toggleChange",
      "clearChangeLog",
      "setupSystemThemeListener",
      "checkVersionChange"
    ],
    "description": "Code related to change",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:tracking": {
    "category": "context_clues",
    "keyword": "tracking",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "logChange",
      "handleBulkUpload",
      "generateHTMLReport"
    ],
    "description": "Code related to tracking",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.896Z"
  },
  "context:rendering": {
    "category": "context_clues",
    "keyword": "rendering",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logChange"
    ],
    "description": "Code related to rendering",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "context:tracks": {
    "category": "context_clues",
    "keyword": "tracks",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logChange"
    ],
    "description": "Code related to tracks",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "context:cell": {
    "category": "context_clues",
    "keyword": "cell",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "logChange",
      "formatStorageLocation",
      "startCellEdit",
      "renderCell"
    ],
    "description": "Code related to cell",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "context:changes": {
    "category": "context_clues",
    "keyword": "changes",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/VulnTrackr/app.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "logChange",
      "logItemChanges",
      "setTrackedPanel",
      "has_changes",
      "find_changes"
    ],
    "description": "Code related to changes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:persists": {
    "category": "context_clues",
    "keyword": "persists",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logChange"
    ],
    "description": "Code related to persists",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "context:itemname": {
    "category": "context_clues",
    "keyword": "itemname",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logChange"
    ],
    "description": "Code related to itemname",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "file:changeLog.js": {
    "category": "file_relationships",
    "keyword": "changeLog.js",
    "primary_file": "rProjects/StackTrackr/js/changeLog.js",
    "functions": [
      "logChange",
      "logItemChanges",
      "renderChangeLog",
      "toggleChange",
      "clearChangeLog"
    ],
    "description": "File containing logChange and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.962Z"
  },
  "function:logItemChanges": {
    "category": "code_functions",
    "keyword": "logItemChanges",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logItemChanges"
    ],
    "description": " Compares two item objects and logs any differences @param {Object} oldItem - Original item values @param {Object} newItem - Updated item values ",
    "context_weight": 0.9,
    "line_number": 32,
    "body_preview": "const logItemChanges = (oldItem, newItem) => { const fields = [ 'date',",
    "context_clues": [
      "log",
      "item",
      "changes",
      "compares",
      "objects",
      "logs",
      "differences",
      "param",
      "object",
      "olditem",
      "original",
      "values",
      "newitem",
      "updated",
      "changelog"
    ],
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "context:compares": {
    "category": "context_clues",
    "keyword": "compares",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "logItemChanges",
      "checkVersionChange"
    ],
    "description": "Code related to compares",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:objects": {
    "category": "context_clues",
    "keyword": "objects",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logItemChanges"
    ],
    "description": "Code related to objects",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "context:differences": {
    "category": "context_clues",
    "keyword": "differences",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logItemChanges"
    ],
    "description": "Code related to differences",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "context:olditem": {
    "category": "context_clues",
    "keyword": "olditem",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logItemChanges"
    ],
    "description": "Code related to olditem",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "context:newitem": {
    "category": "context_clues",
    "keyword": "newitem",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "logItemChanges"
    ],
    "description": "Code related to newitem",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.442Z"
  },
  "function:renderChangeLog": {
    "category": "code_functions",
    "keyword": "renderChangeLog",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "renderChangeLog"
    ],
    "description": " Renders the change log table with all entries ",
    "context_weight": 0.9,
    "line_number": 60,
    "body_preview": "const renderChangeLog = () => { const tableBody = document.querySelector('#changeLogTable tbody'); if (!tableBody) return;",
    "context_clues": [
      "render",
      "change",
      "log",
      "renders",
      "table",
      "with",
      "entries",
      "changelog"
    ],
    "last_updated": "2025-08-20T17:24:09.443Z"
  },
  "context:entries": {
    "category": "context_clues",
    "keyword": "entries",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "renderChangeLog",
      "clearChangeLog",
      "purgeSpotHistory",
      "cleanupStorage",
      "searchMatrix"
    ],
    "description": "Code related to entries",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "function:toggleChange": {
    "category": "code_functions",
    "keyword": "toggleChange",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "toggleChange"
    ],
    "description": " Toggles a logged change between undone and redone states @param {number} logIdx - Index of change entry in changeLog array ",
    "context_weight": 0.9,
    "line_number": 88,
    "body_preview": "const toggleChange = (logIdx) => { const entry = changeLog[logIdx]; if (!entry) return;",
    "context_clues": [
      "toggle",
      "change",
      "toggles",
      "logged",
      "between",
      "undone",
      "redone",
      "states",
      "param",
      "number",
      "logidx",
      "index",
      "entry",
      "changelog",
      "array"
    ],
    "last_updated": "2025-08-20T17:24:09.443Z"
  },
  "context:toggle": {
    "category": "context_clues",
    "keyword": "toggle",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "toggleChange",
      "toggleFeature",
      "updateThemeButton",
      "setupThemeToggle",
      "toggleCollectable",
      "togglePriceView",
      "toggleGlobalPriceView",
      "toggleTheme",
      "updateSpotTimestamp"
    ],
    "description": "Code related to toggle",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:toggles": {
    "category": "context_clues",
    "keyword": "toggles",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "toggleChange",
      "toggleCollectable",
      "togglePriceView"
    ],
    "description": "Code related to toggles",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "context:logged": {
    "category": "context_clues",
    "keyword": "logged",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "toggleChange"
    ],
    "description": "Code related to logged",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.443Z"
  },
  "context:between": {
    "category": "context_clues",
    "keyword": "between",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "toggleChange",
      "calculateLevenshteinDistance",
      "fuzzyMatch",
      "togglePriceView",
      "updateSpotTimestamp"
    ],
    "description": "Code related to between",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:undone": {
    "category": "context_clues",
    "keyword": "undone",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "toggleChange"
    ],
    "description": "Code related to undone",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.443Z"
  },
  "context:redone": {
    "category": "context_clues",
    "keyword": "redone",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "toggleChange"
    ],
    "description": "Code related to redone",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.443Z"
  },
  "context:logidx": {
    "category": "context_clues",
    "keyword": "logidx",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "toggleChange"
    ],
    "description": "Code related to logidx",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.443Z"
  },
  "function:clearChangeLog": {
    "category": "code_functions",
    "keyword": "clearChangeLog",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "clearChangeLog"
    ],
    "description": " Clears all change log entries after confirmation ",
    "context_weight": 0.9,
    "line_number": 129,
    "body_preview": "const clearChangeLog = () => { if (!confirm('Clear change log?')) return; changeLog = [];",
    "context_clues": [
      "clear",
      "change",
      "log",
      "clears",
      "entries",
      "after",
      "confirmation",
      "clearchangelog",
      "setitem",
      "changelog"
    ],
    "last_updated": "2025-08-20T17:24:09.443Z"
  },
  "context:after": {
    "category": "context_clues",
    "keyword": "after",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "clearChangeLog",
      "hideEmptyColumns",
      "deleteItem",
      "debounce"
    ],
    "description": "Code related to after",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:confirmation": {
    "category": "context_clues",
    "keyword": "confirmation",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "clearChangeLog",
      "deleteItem"
    ],
    "description": "Code related to confirmation",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:clearchangelog": {
    "category": "context_clues",
    "keyword": "clearchangelog",
    "files": [
      "rProjects/StackTrackr/js/changeLog.js"
    ],
    "functions": [
      "clearChangeLog"
    ],
    "description": "Code related to clearchangelog",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.443Z"
  },
  "function:generateColors": {
    "category": "code_functions",
    "keyword": "generateColors",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "generateColors"
    ],
    "description": "CHART UTILITIES =============================================================================  Generates a color palette for pie chart segments  @param {number} count - Number of colors needed @returns {Array} Array of color strings ",
    "context_weight": 0.9,
    "line_number": 10,
    "body_preview": "const generateColors = (count) => { const colors = [ '#3b82f6', // Primary blue",
    "context_clues": [
      "generate",
      "colors",
      "chart",
      "utilities",
      "generates",
      "color",
      "palette",
      "segments",
      "param",
      "number",
      "count",
      "needed",
      "array",
      "strings",
      "generatecolors"
    ],
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:chart": {
    "category": "context_clues",
    "keyword": "chart",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "generateColors",
      "getChartBackgroundColor",
      "getChartTextColor",
      "createPieChart",
      "destroyCharts",
      "getBreakdownData",
      "getChartColor",
      "initializeStorageChart",
      "getStorageReportJS",
      "createHistoryChart",
      "renderChart"
    ],
    "description": "Code related to chart",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.842Z"
  },
  "context:utilities": {
    "category": "context_clues",
    "keyword": "utilities",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "generateColors",
      "normalizeString",
      "startImportProgress"
    ],
    "description": "Code related to utilities",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.637Z"
  },
  "context:generates": {
    "category": "context_clues",
    "keyword": "generates",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateColors",
      "generateCategorySummary",
      "createBackupZip",
      "generateBackupHtml",
      "generateReadmeContent",
      "generateStorageReport",
      "generateStorageReportHTML",
      "generateItemDataTable",
      "generateStorageReportTar"
    ],
    "description": "Code related to generates",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.792Z"
  },
  "context:color": {
    "category": "context_clues",
    "keyword": "color",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateColors",
      "getChartBackgroundColor",
      "getChartTextColor",
      "getColor",
      "updateSpotCardColor",
      "getChartColor",
      "getContrastColor",
      "formatLossProfit"
    ],
    "description": "Code related to color",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.789Z"
  },
  "context:palette": {
    "category": "context_clues",
    "keyword": "palette",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "generateColors"
    ],
    "description": "Code related to palette",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:segments": {
    "category": "context_clues",
    "keyword": "segments",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "generateColors"
    ],
    "description": "Code related to segments",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:count": {
    "category": "context_clues",
    "keyword": "count",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/inventory.js",
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "generateColors",
      "updateItemCount",
      "countFiles"
    ],
    "description": "Code related to count",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:needed": {
    "category": "context_clues",
    "keyword": "needed",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "generateColors",
      "__compressIfNeeded",
      "__decompressIfNeeded",
      "checkVersionChange"
    ],
    "description": "Code related to needed",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:strings": {
    "category": "context_clues",
    "keyword": "strings",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateColors",
      "calculateLevenshteinDistance",
      "fuzzyMatch",
      "fuzzySearch",
      "getContrastColor",
      "mapNumistaType"
    ],
    "description": "Code related to strings",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:generatecolors": {
    "category": "context_clues",
    "keyword": "generatecolors",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "generateColors"
    ],
    "description": "Code related to generatecolors",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "file:charts.js": {
    "category": "file_relationships",
    "keyword": "charts.js",
    "primary_file": "rProjects/StackTrackr/js/charts.js",
    "functions": [
      "generateColors",
      "getChartBackgroundColor",
      "getChartTextColor",
      "createPieChart",
      "destroyCharts"
    ],
    "description": "File containing generateColors and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.968Z"
  },
  "function:getChartBackgroundColor": {
    "category": "code_functions",
    "keyword": "getChartBackgroundColor",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "getChartBackgroundColor"
    ],
    "description": " Gets appropriate background color for charts based on current theme  @returns {string} Background color ",
    "context_weight": 0.9,
    "line_number": 42,
    "body_preview": "const getChartBackgroundColor = () => { const isDark = document.documentElement.getAttribute('data-theme') === 'dark'; return isDark ? '#1e293b' : '#f8fafc';",
    "context_clues": [
      "get",
      "chart",
      "background",
      "color",
      "gets",
      "appropriate",
      "charts",
      "based",
      "current",
      "theme",
      "string",
      "getchartbackgroundcolor",
      "getattribute"
    ],
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:background": {
    "category": "context_clues",
    "keyword": "background",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getChartBackgroundColor",
      "getContrastColor"
    ],
    "description": "Code related to background",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:appropriate": {
    "category": "context_clues",
    "keyword": "appropriate",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getChartBackgroundColor",
      "getChartTextColor",
      "formatLossProfit"
    ],
    "description": "Code related to appropriate",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:charts": {
    "category": "context_clues",
    "keyword": "charts",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "getChartBackgroundColor",
      "getChartTextColor",
      "destroyCharts",
      "showDetailsModal",
      "closeDetailsModal",
      "updateHistoryCharts",
      "renderHistories"
    ],
    "description": "Code related to charts",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "context:theme": {
    "category": "context_clues",
    "keyword": "theme",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getChartBackgroundColor",
      "getChartTextColor",
      "updateThemeButton",
      "setupThemeToggle",
      "setTheme",
      "initTheme",
      "toggleTheme",
      "setupSystemThemeListener",
      "generateStorageReportHTML",
      "getStorageReportCSS",
      "getStorageReportJS"
    ],
    "description": "Code related to theme",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:getchartbackgroundcolor": {
    "category": "context_clues",
    "keyword": "getchartbackgroundcolor",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "getChartBackgroundColor"
    ],
    "description": "Code related to getchartbackgroundcolor",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:getattribute": {
    "category": "context_clues",
    "keyword": "getattribute",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getChartBackgroundColor",
      "getChartTextColor",
      "hideEmptyColumns",
      "toggleTheme",
      "generateStorageReportHTML"
    ],
    "description": "Code related to getattribute",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "function:getChartTextColor": {
    "category": "code_functions",
    "keyword": "getChartTextColor",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "getChartTextColor"
    ],
    "description": " Gets appropriate text color for charts based on current theme  @returns {string} Text color ",
    "context_weight": 0.9,
    "line_number": 52,
    "body_preview": "const getChartTextColor = () => { const isDark = document.documentElement.getAttribute('data-theme') === 'dark'; return isDark ? '#f8fafc' : '#1e293b';",
    "context_clues": [
      "get",
      "chart",
      "text",
      "color",
      "gets",
      "appropriate",
      "charts",
      "based",
      "current",
      "theme",
      "string",
      "getcharttextcolor",
      "getattribute",
      "creates"
    ],
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:text": {
    "category": "context_clues",
    "keyword": "text",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getChartTextColor",
      "replaceTemplateVariables",
      "escapeAttribute",
      "getDisplayComposition",
      "sanitizeHtml",
      "getChangelogForVersion"
    ],
    "description": "Code related to text",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:getcharttextcolor": {
    "category": "context_clues",
    "keyword": "getcharttextcolor",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "getChartTextColor"
    ],
    "description": "Code related to getcharttextcolor",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:creates": {
    "category": "context_clues",
    "keyword": "creates",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getChartTextColor",
      "createPieChart",
      "createBreakdownElements",
      "createBackupZip",
      "debounce",
      "createStorageItemModal"
    ],
    "description": "Code related to creates",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "function:createPieChart": {
    "category": "code_functions",
    "keyword": "createPieChart",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "createPieChart"
    ],
    "description": " Creates a pie chart with the given data  @param {HTMLCanvasElement} canvas - Canvas element to render chart on @param {Object} data - Chart data with labels and values @param {string} title - Chart title @returns {Chart} Chart.js instance ",
    "context_weight": 0.9,
    "line_number": 65,
    "body_preview": "const createPieChart = (canvas, data, title) => { const labels = Object.keys(data); const values = Object.values(data).map(item => item.value);",
    "context_clues": [
      "create",
      "pie",
      "chart",
      "creates",
      "with",
      "given",
      "data",
      "param",
      "htmlcanvaselement",
      "canvas",
      "element",
      "render",
      "object",
      "labels",
      "values"
    ],
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:pie": {
    "category": "context_clues",
    "keyword": "pie",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "createPieChart"
    ],
    "description": "Code related to pie",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:htmlcanvaselement": {
    "category": "context_clues",
    "keyword": "htmlcanvaselement",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "createPieChart"
    ],
    "description": "Code related to htmlcanvaselement",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:canvas": {
    "category": "context_clues",
    "keyword": "canvas",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "createPieChart"
    ],
    "description": "Code related to canvas",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "context:element": {
    "category": "context_clues",
    "keyword": "element",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "createPieChart",
      "injectVersionString",
      "createDummyElement",
      "safeGetElement",
      "trapFocus",
      "updateSpotTimestamp"
    ],
    "description": "Code related to element",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:labels": {
    "category": "context_clues",
    "keyword": "labels",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "createPieChart"
    ],
    "description": "Code related to labels",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.454Z"
  },
  "function:destroyCharts": {
    "category": "code_functions",
    "keyword": "destroyCharts",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "destroyCharts"
    ],
    "description": " Destroys existing chart instances to prevent memory leaks ",
    "context_weight": 0.9,
    "line_number": 159,
    "body_preview": "const destroyCharts = () => { Object.keys(chartInstances).forEach(key => { if (chartInstances[key]) {",
    "context_clues": [
      "destroy",
      "charts",
      "destroys",
      "existing",
      "chart",
      "instances",
      "prevent",
      "memory",
      "leaks"
    ],
    "last_updated": "2025-08-20T17:24:09.455Z"
  },
  "context:destroy": {
    "category": "context_clues",
    "keyword": "destroy",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "destroyCharts"
    ],
    "description": "Code related to destroy",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.455Z"
  },
  "context:destroys": {
    "category": "context_clues",
    "keyword": "destroys",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "destroyCharts"
    ],
    "description": "Code related to destroys",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.455Z"
  },
  "context:instances": {
    "category": "context_clues",
    "keyword": "instances",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "destroyCharts"
    ],
    "description": "Code related to instances",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.455Z"
  },
  "context:prevent": {
    "category": "context_clues",
    "keyword": "prevent",
    "files": [
      "rProjects/StackTrackr/js/charts.js",
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "destroyCharts",
      "createDummyElement"
    ],
    "description": "Code related to prevent",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.607Z"
  },
  "context:leaks": {
    "category": "context_clues",
    "keyword": "leaks",
    "files": [
      "rProjects/StackTrackr/js/charts.js"
    ],
    "functions": [
      "destroyCharts"
    ],
    "description": "Code related to leaks",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.455Z"
  },
  "function:getVersionString": {
    "category": "code_functions",
    "keyword": "getVersionString",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getVersionString"
    ],
    "description": " Returns formatted version string  @param {string} [prefix=\"v\"] - Prefix to add before version @returns {string} Formatted version string (e.g., \"v3.03.07b\") ",
    "context_weight": 0.9,
    "line_number": 275,
    "body_preview": "const getVersionString = (prefix = \"v\") => `${prefix}${APP_VERSION}`; /** * Template replacement functions for documentation",
    "context_clues": [
      "get",
      "version",
      "string",
      "formatted",
      "param",
      "prefixv",
      "prefix",
      "before",
      "v30307b",
      "getversionstring",
      "build",
      "process",
      "gettemplatevariables",
      "constants"
    ],
    "last_updated": "2025-08-20T17:24:09.468Z"
  },
  "context:formatted": {
    "category": "context_clues",
    "keyword": "formatted",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getVersionString",
      "injectVersionString",
      "generateBackupHtml",
      "generateReadmeContent",
      "formatDisplayDate",
      "formatCurrency",
      "formatWeight"
    ],
    "description": "Code related to formatted",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:prefixv": {
    "category": "context_clues",
    "keyword": "prefixv",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getVersionString",
      "injectVersionString"
    ],
    "description": "Code related to prefixv",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "context:prefix": {
    "category": "context_clues",
    "keyword": "prefix",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getVersionString",
      "injectVersionString"
    ],
    "description": "Code related to prefix",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "context:before": {
    "category": "context_clues",
    "keyword": "before",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "getVersionString",
      "injectVersionString",
      "generateSampleData"
    ],
    "description": "Code related to before",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:v30307b": {
    "category": "context_clues",
    "keyword": "v30307b",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getVersionString"
    ],
    "description": "Code related to v30307b",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.468Z"
  },
  "context:getversionstring": {
    "category": "context_clues",
    "keyword": "getversionstring",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getVersionString"
    ],
    "description": "Code related to getversionstring",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.468Z"
  },
  "context:gettemplatevariables": {
    "category": "context_clues",
    "keyword": "gettemplatevariables",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getVersionString",
      "getTemplateVariables",
      "replaceTemplateVariables"
    ],
    "description": "Code related to gettemplatevariables",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.469Z"
  },
  "context:constants": {
    "category": "context_clues",
    "keyword": "constants",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getVersionString",
      "getTemplateVariables",
      "replaceTemplateVariables",
      "isFeatureEnabled",
      "enableFeature",
      "disableFeature",
      "toggleFeature"
    ],
    "description": "Code related to constants",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.471Z"
  },
  "file:constants.js": {
    "category": "file_relationships",
    "keyword": "constants.js",
    "primary_file": "rProjects/StackTrackr/js/constants.js",
    "functions": [
      "getVersionString",
      "getTemplateVariables",
      "replaceTemplateVariables",
      "injectVersionString",
      "isFeatureEnabled",
      "enableFeature",
      "disableFeature",
      "toggleFeature"
    ],
    "description": "File containing getVersionString and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.976Z"
  },
  "function:getTemplateVariables": {
    "category": "code_functions",
    "keyword": "getTemplateVariables",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getTemplateVariables"
    ],
    "description": " Template replacement functions for documentation Used by build process to replace {{TEMPLATE}} variables ",
    "context_weight": 0.9,
    "line_number": 281,
    "body_preview": "const getTemplateVariables = () => ({ VERSION: APP_VERSION, VERSION_WITH_V: `v${APP_VERSION}`,",
    "context_clues": [
      "get",
      "template",
      "variables",
      "replacement",
      "functions",
      "documentation",
      "used",
      "build",
      "process",
      "replace",
      "gettemplatevariables",
      "constants"
    ],
    "last_updated": "2025-08-20T17:24:09.469Z"
  },
  "context:template": {
    "category": "context_clues",
    "keyword": "template",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getTemplateVariables",
      "replaceTemplateVariables"
    ],
    "description": "Code related to template",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.469Z"
  },
  "context:variables": {
    "category": "context_clues",
    "keyword": "variables",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getTemplateVariables",
      "replaceTemplateVariables",
      "getContrastColor"
    ],
    "description": "Code related to variables",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:replacement": {
    "category": "context_clues",
    "keyword": "replacement",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "getTemplateVariables"
    ],
    "description": "Code related to replacement",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.469Z"
  },
  "context:used": {
    "category": "context_clues",
    "keyword": "used",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "getTemplateVariables",
      "toggleGlobalPriceView",
      "renderHistories"
    ],
    "description": "Code related to used",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "context:replace": {
    "category": "context_clues",
    "keyword": "replace",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getTemplateVariables",
      "replaceTemplateVariables",
      "importNumistaCsv",
      "importJson"
    ],
    "description": "Code related to replace",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "function:replaceTemplateVariables": {
    "category": "code_functions",
    "keyword": "replaceTemplateVariables",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "replaceTemplateVariables"
    ],
    "description": " Replaces template variables in text @param {string} text - Text containing {{VARIABLE}} placeholders @returns {string} Text with variables replaced ",
    "context_weight": 0.9,
    "line_number": 294,
    "body_preview": "const replaceTemplateVariables = (text) => { const variables = getTemplateVariables(); return text.replace(/\\{\\{(\\w+)\\}\\}/g, (match, key) => {",
    "context_clues": [
      "replace",
      "template",
      "variables",
      "replaces",
      "text",
      "param",
      "string",
      "containing",
      "variable",
      "placeholders",
      "with",
      "replaced",
      "gettemplatevariables",
      "imports",
      "constants"
    ],
    "last_updated": "2025-08-20T17:24:09.469Z"
  },
  "context:replaces": {
    "category": "context_clues",
    "keyword": "replaces",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "replaceTemplateVariables"
    ],
    "description": "Code related to replaces",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.469Z"
  },
  "context:containing": {
    "category": "context_clues",
    "keyword": "containing",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "replaceTemplateVariables",
      "createBackupZip",
      "detectCurrency",
      "stripNonAlphanumeric"
    ],
    "description": "Code related to containing",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:variable": {
    "category": "context_clues",
    "keyword": "variable",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "replaceTemplateVariables",
      "getNextSerial"
    ],
    "description": "Code related to variable",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:placeholders": {
    "category": "context_clues",
    "keyword": "placeholders",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "replaceTemplateVariables"
    ],
    "description": "Code related to placeholders",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.469Z"
  },
  "context:replaced": {
    "category": "context_clues",
    "keyword": "replaced",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "replaceTemplateVariables"
    ],
    "description": "Code related to replaced",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.469Z"
  },
  "context:imports": {
    "category": "context_clues",
    "keyword": "imports",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "replaceTemplateVariables",
      "endImportProgress",
      "importCsv",
      "importNumistaCsv",
      "importJson"
    ],
    "description": "Code related to imports",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "function:injectVersionString": {
    "category": "code_functions",
    "keyword": "injectVersionString",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "injectVersionString"
    ],
    "description": " Inserts formatted version string into a target element  @param {string} elementId - ID of the element to update @param {string} [prefix=\"v\"] - Prefix to add before version ",
    "context_weight": 0.9,
    "line_number": 313,
    "body_preview": "const injectVersionString = (elementId, prefix = \"v\") => { const el = document.getElementById(elementId); if (el) {",
    "context_clues": [
      "inject",
      "version",
      "string",
      "inserts",
      "formatted",
      "into",
      "target",
      "element",
      "param",
      "elementid",
      "update",
      "prefixv",
      "prefix",
      "before",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "context:inject": {
    "category": "context_clues",
    "keyword": "inject",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "injectVersionString"
    ],
    "description": "Code related to inject",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "context:inserts": {
    "category": "context_clues",
    "keyword": "inserts",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "injectVersionString"
    ],
    "description": "Code related to inserts",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "context:into": {
    "category": "context_clues",
    "keyword": "into",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "injectVersionString",
      "tokenizeWords",
      "parseDate",
      "formatDisplayDate"
    ],
    "description": "Code related to into",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "context:target": {
    "category": "context_clues",
    "keyword": "target",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "injectVersionString",
      "fuzzyMatch"
    ],
    "description": "Code related to target",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.597Z"
  },
  "context:elementid": {
    "category": "context_clues",
    "keyword": "elementid",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "injectVersionString"
    ],
    "description": "Code related to elementid",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "function:isFeatureEnabled": {
    "category": "code_functions",
    "keyword": "isFeatureEnabled",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "isFeatureEnabled"
    ],
    "description": " Convenience functions for common feature flag operations ",
    "context_weight": 0.9,
    "line_number": 786,
    "body_preview": "const isFeatureEnabled = (feature) => featureFlags.isEnabled(feature); const enableFeature = (feature, persist = true) => featureFlags.enable(feature, persist); const disableFeature = (feature, persist = true) => featureFlags.disable(feature, persist);",
    "context_clues": [
      "feature",
      "enabled",
      "convenience",
      "functions",
      "common",
      "flag",
      "operations",
      "initialization",
      "initialized",
      "getdebuginfo",
      "constants"
    ],
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "context:feature": {
    "category": "context_clues",
    "keyword": "feature",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "isFeatureEnabled",
      "enableFeature",
      "disableFeature",
      "toggleFeature"
    ],
    "description": "Code related to feature",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.471Z"
  },
  "context:enabled": {
    "category": "context_clues",
    "keyword": "enabled",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/debug-log.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "isFeatureEnabled",
      "isEnabled",
      "debugLog"
    ],
    "description": "Code related to enabled",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "context:convenience": {
    "category": "context_clues",
    "keyword": "convenience",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "isFeatureEnabled"
    ],
    "description": "Code related to convenience",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "context:flag": {
    "category": "context_clues",
    "keyword": "flag",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "isFeatureEnabled",
      "debugLog",
      "validateInventoryItem"
    ],
    "description": "Code related to flag",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:operations": {
    "category": "context_clues",
    "keyword": "operations",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "isFeatureEnabled"
    ],
    "description": "Code related to operations",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "context:initialized": {
    "category": "context_clues",
    "keyword": "initialized",
    "files": [
      "rProjects/StackTrackr/js/constants.js",
      "rProjects/StackTrackr/js/encryption.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "isFeatureEnabled",
      "enableFeature",
      "disableFeature",
      "toggleFeature",
      "hasMasterPassword",
      "_initialize_database"
    ],
    "description": "Code related to initialized",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.155Z"
  },
  "context:getdebuginfo": {
    "category": "context_clues",
    "keyword": "getdebuginfo",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "isFeatureEnabled",
      "enableFeature",
      "disableFeature",
      "toggleFeature"
    ],
    "description": "Code related to getdebuginfo",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.471Z"
  },
  "function:enableFeature": {
    "category": "code_functions",
    "keyword": "enableFeature",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "enableFeature"
    ],
    "description": "Function enableFeature in constants.js",
    "context_weight": 0.9,
    "line_number": 787,
    "body_preview": "const enableFeature = (feature, persist = true) => featureFlags.enable(feature, persist); const disableFeature = (feature, persist = true) => featureFlags.disable(feature, persist); const toggleFeature = (feature, persist = true) => featureFlags.toggle(feature, persist);",
    "context_clues": [
      "enable",
      "feature",
      "initialization",
      "initialized",
      "getdebuginfo",
      "constants"
    ],
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "context:enable": {
    "category": "context_clues",
    "keyword": "enable",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "enableFeature"
    ],
    "description": "Code related to enable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.470Z"
  },
  "function:disableFeature": {
    "category": "code_functions",
    "keyword": "disableFeature",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "disableFeature"
    ],
    "description": "Function disableFeature in constants.js",
    "context_weight": 0.9,
    "line_number": 788,
    "body_preview": "const disableFeature = (feature, persist = true) => featureFlags.disable(feature, persist); const toggleFeature = (feature, persist = true) => featureFlags.toggle(feature, persist); /**",
    "context_clues": [
      "disable",
      "feature",
      "initialization",
      "initialized",
      "getdebuginfo",
      "constants"
    ],
    "last_updated": "2025-08-20T17:24:09.471Z"
  },
  "context:disable": {
    "category": "context_clues",
    "keyword": "disable",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "disableFeature"
    ],
    "description": "Code related to disable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.471Z"
  },
  "function:toggleFeature": {
    "category": "code_functions",
    "keyword": "toggleFeature",
    "files": [
      "rProjects/StackTrackr/js/constants.js"
    ],
    "functions": [
      "toggleFeature"
    ],
    "description": "Function toggleFeature in constants.js",
    "context_weight": 0.9,
    "line_number": 789,
    "body_preview": "const toggleFeature = (feature, persist = true) => featureFlags.toggle(feature, persist); /** * Log feature flag state on initialization (debug mode only)",
    "context_clues": [
      "toggle",
      "feature",
      "initialization",
      "initialized",
      "getdebuginfo",
      "constants"
    ],
    "last_updated": "2025-08-20T17:24:09.471Z"
  },
  "function:addMapping": {
    "category": "code_functions",
    "keyword": "addMapping",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "addMapping"
    ],
    "description": " Adds a new mapping rule. @param {string} pattern Regex pattern as a string @param {string} field Field name to map to @returns {void} ",
    "context_weight": 0.9,
    "line_number": 23,
    "body_preview": "function addMapping(pattern, field) { try { const regex = new RegExp(pattern, \"i\");",
    "context_clues": [
      "add",
      "mapping",
      "adds",
      "rule",
      "param",
      "string",
      "pattern",
      "regex",
      "field",
      "name",
      "void",
      "addmapping",
      "custommapping"
    ],
    "last_updated": "2025-08-20T17:24:09.484Z"
  },
  "context:mapping": {
    "category": "context_clues",
    "keyword": "mapping",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "addMapping",
      "clear",
      "CustomMapping"
    ],
    "description": "Code related to mapping",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "context:adds": {
    "category": "context_clues",
    "keyword": "adds",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rScripts/dynamic_memory.py"
    ],
    "functions": [
      "addMapping",
      "addCompositionOption",
      "_add_to_sync_config"
    ],
    "description": "Code related to adds",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.265Z"
  },
  "context:rule": {
    "category": "context_clues",
    "keyword": "rule",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "addMapping",
      "mapField",
      "CustomMapping"
    ],
    "description": "Code related to rule",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "context:pattern": {
    "category": "context_clues",
    "keyword": "pattern",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "addMapping",
      "filenamePatternFrom"
    ],
    "description": "Code related to pattern",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:regex": {
    "category": "context_clues",
    "keyword": "regex",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "addMapping"
    ],
    "description": "Code related to regex",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.484Z"
  },
  "context:void": {
    "category": "context_clues",
    "keyword": "void",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "addMapping",
      "clear",
      "sanitizeTablesOnLoad"
    ],
    "description": "Code related to void",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:addmapping": {
    "category": "context_clues",
    "keyword": "addmapping",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "addMapping",
      "list"
    ],
    "description": "Code related to addmapping",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "context:custommapping": {
    "category": "context_clues",
    "keyword": "custommapping",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "addMapping",
      "clear",
      "list"
    ],
    "description": "Code related to custommapping",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "file:customMapping.js": {
    "category": "file_relationships",
    "keyword": "customMapping.js",
    "primary_file": "rProjects/StackTrackr/js/customMapping.js",
    "functions": [
      "addMapping",
      "mapField",
      "clear",
      "list",
      "CustomMapping"
    ],
    "description": "File containing addMapping and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.984Z"
  },
  "function:mapField": {
    "category": "code_functions",
    "keyword": "mapField",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "mapField"
    ],
    "description": " Attempts to map an input field name using stored rules. @param {string} name Field name to test @returns {string|null} Mapped field or null if no rule matches ",
    "context_weight": 0.9,
    "line_number": 37,
    "body_preview": "function mapField(name) { for (const rule of mappings) { if (rule.regex.test(name)) {",
    "context_clues": [
      "map",
      "field",
      "attempts",
      "input",
      "name",
      "using",
      "stored",
      "rules",
      "param",
      "string",
      "test",
      "stringnull",
      "mapped",
      "null",
      "rule"
    ],
    "last_updated": "2025-08-20T17:24:09.484Z"
  },
  "context:map": {
    "category": "context_clues",
    "keyword": "map",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "mapField",
      "mapNumistaType"
    ],
    "description": "Code related to map",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:attempts": {
    "category": "context_clues",
    "keyword": "attempts",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "mapField"
    ],
    "description": "Code related to attempts",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.484Z"
  },
  "context:rules": {
    "category": "context_clues",
    "keyword": "rules",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "mapField",
      "clear"
    ],
    "description": "Code related to rules",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.484Z"
  },
  "context:stringnull": {
    "category": "context_clues",
    "keyword": "stringnull",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "mapField",
      "updateLastTimestamps",
      "detectCurrency"
    ],
    "description": "Code related to stringnull",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:mapped": {
    "category": "context_clues",
    "keyword": "mapped",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "mapField",
      "mapNumistaType"
    ],
    "description": "Code related to mapped",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "function:clear": {
    "category": "code_functions",
    "keyword": "clear",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "clear"
    ],
    "description": " Removes all custom mapping rules. @returns {void} ",
    "context_weight": 0.9,
    "line_number": 50,
    "body_preview": "function clear() { mappings = []; }",
    "context_clues": [
      "clear",
      "removes",
      "custom",
      "mapping",
      "rules",
      "void",
      "custommapping"
    ],
    "last_updated": "2025-08-20T17:24:09.484Z"
  },
  "context:custom": {
    "category": "context_clues",
    "keyword": "custom",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "clear",
      "CustomMapping"
    ],
    "description": "Code related to custom",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "context:simplified": {
    "category": "context_clues",
    "keyword": "simplified",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/file-protocol-fix.js"
    ],
    "functions": [
      "list",
      "safeDebug"
    ],
    "description": "Code related to simplified",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.572Z"
  },
  "context:view": {
    "category": "context_clues",
    "keyword": "view",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "list",
      "showNotes",
      "togglePriceView",
      "toggleGlobalPriceView",
      "downloadStorageReport",
      "createStorageItemModal"
    ],
    "description": "Code related to view",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "context:mappings": {
    "category": "context_clues",
    "keyword": "mappings",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "list"
    ],
    "description": "Code related to mappings",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "context:arrayregexstring": {
    "category": "context_clues",
    "keyword": "arrayregexstring",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "list"
    ],
    "description": "Code related to arrayregexstring",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "context:fieldstring": {
    "category": "context_clues",
    "keyword": "fieldstring",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "list"
    ],
    "description": "Code related to fieldstring",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "function:CustomMapping": {
    "category": "code_functions",
    "keyword": "CustomMapping",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "CustomMapping"
    ],
    "description": " Custom Mapping Module Provides a simple regex-based rule engine for mapping imported field names to application fields.   @typedef {Object} MappingRule @property {RegExp} regex Pattern to match against field names @property {string} field Target field identifier ",
    "context_weight": 0.9,
    "line_number": 13,
    "body_preview": "const CustomMapping = (() => { /** @type {MappingRule[]} */ let mappings = [];",
    "context_clues": [
      "custom",
      "mapping",
      "module",
      "provides",
      "simple",
      "regexbased",
      "rule",
      "engine",
      "imported",
      "field",
      "names",
      "application",
      "fields",
      "typedef",
      "object"
    ],
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "context:module": {
    "category": "context_clues",
    "keyword": "module",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "CustomMapping",
      "safeAttachListener",
      "normalizeString",
      "handleBulkUpload",
      "generateHTMLReport"
    ],
    "description": "Code related to module",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.896Z"
  },
  "context:regexbased": {
    "category": "context_clues",
    "keyword": "regexbased",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "CustomMapping"
    ],
    "description": "Code related to regexbased",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "context:engine": {
    "category": "context_clues",
    "keyword": "engine",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "CustomMapping",
      "normalizeString"
    ],
    "description": "Code related to engine",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:imported": {
    "category": "context_clues",
    "keyword": "imported",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "CustomMapping",
      "startImportProgress",
      "updateImportProgress",
      "sanitizeImportedItem"
    ],
    "description": "Code related to imported",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:names": {
    "category": "context_clues",
    "keyword": "names",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js",
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "CustomMapping",
      "simplifyChipValue"
    ],
    "description": "Code related to names",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:typedef": {
    "category": "context_clues",
    "keyword": "typedef",
    "files": [
      "rProjects/StackTrackr/js/customMapping.js"
    ],
    "functions": [
      "CustomMapping"
    ],
    "description": "Code related to typedef",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.485Z"
  },
  "function:isEnabled": {
    "category": "code_functions",
    "keyword": "isEnabled",
    "files": [
      "rProjects/StackTrackr/js/debug-log.js"
    ],
    "functions": [
      "isEnabled"
    ],
    "description": "Function isEnabled in debug-log.js",
    "context_weight": 0.9,
    "line_number": 6,
    "body_preview": "function isEnabled() { try { return !!localStorage.getItem('stackrtrackr.debug'); } catch (_) { return true; } }",
    "context_clues": [
      "enabled",
      "getitem",
      "debug",
      "log"
    ],
    "last_updated": "2025-08-20T17:24:09.497Z"
  },
  "context:debug": {
    "category": "context_clues",
    "keyword": "debug",
    "files": [
      "rProjects/StackTrackr/js/debug-log.js",
      "rProjects/StackTrackr/js/debugModal.js",
      "rProjects/StackTrackr/js/file-protocol-fix.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "isEnabled",
      "log",
      "showDebugModal",
      "hideDebugModal",
      "safeDebug",
      "debugLog"
    ],
    "description": "Code related to debug",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "file:debug-log.js": {
    "category": "file_relationships",
    "keyword": "debug-log.js",
    "primary_file": "rProjects/StackTrackr/js/debug-log.js",
    "functions": [
      "isEnabled",
      "log"
    ],
    "description": "File containing isEnabled and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.989Z"
  },
  "function:log": {
    "category": "code_functions",
    "keyword": "log",
    "files": [
      "rProjects/StackTrackr/js/debug-log.js"
    ],
    "functions": [
      "log"
    ],
    "description": "Function log in debug-log.js",
    "context_weight": 0.9,
    "line_number": 4,
    "body_preview": "if (typeof global.debugLog === 'function') return; const history = []; function isEnabled() {",
    "context_clues": [
      "log",
      "getitem",
      "debug"
    ],
    "last_updated": "2025-08-20T17:24:09.497Z"
  },
  "function:showDebugModal": {
    "category": "code_functions",
    "keyword": "showDebugModal",
    "files": [
      "rProjects/StackTrackr/js/debugModal.js"
    ],
    "functions": [
      "showDebugModal"
    ],
    "description": "Function showDebugModal in debugModal.js",
    "context_weight": 0.9,
    "line_number": 1,
    "body_preview": "const showDebugModal = () => { const modal = document.getElementById('debugModal'); const content = document.getElementById('debugModalContent');",
    "context_clues": [
      "show",
      "debug",
      "modal",
      "getelementbyid",
      "getdebughistory",
      "openmodalbyid",
      "debugmodal"
    ],
    "last_updated": "2025-08-20T17:24:09.507Z"
  },
  "context:getdebughistory": {
    "category": "context_clues",
    "keyword": "getdebughistory",
    "files": [
      "rProjects/StackTrackr/js/debugModal.js"
    ],
    "functions": [
      "showDebugModal"
    ],
    "description": "Code related to getdebughistory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.507Z"
  },
  "context:debugmodal": {
    "category": "context_clues",
    "keyword": "debugmodal",
    "files": [
      "rProjects/StackTrackr/js/debugModal.js"
    ],
    "functions": [
      "showDebugModal",
      "hideDebugModal"
    ],
    "description": "Code related to debugmodal",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.507Z"
  },
  "file:debugModal.js": {
    "category": "file_relationships",
    "keyword": "debugModal.js",
    "primary_file": "rProjects/StackTrackr/js/debugModal.js",
    "functions": [
      "showDebugModal",
      "hideDebugModal"
    ],
    "description": "File containing showDebugModal and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:39.994Z"
  },
  "function:hideDebugModal": {
    "category": "code_functions",
    "keyword": "hideDebugModal",
    "files": [
      "rProjects/StackTrackr/js/debugModal.js"
    ],
    "functions": [
      "hideDebugModal"
    ],
    "description": "Function hideDebugModal in debugModal.js",
    "context_weight": 0.9,
    "line_number": 14,
    "body_preview": "const hideDebugModal = () => { if (window.closeModalById) closeModalById('debugModal'); else {",
    "context_clues": [
      "hide",
      "debug",
      "modal",
      "closemodalbyid",
      "getelementbyid",
      "debugmodal"
    ],
    "last_updated": "2025-08-20T17:24:09.507Z"
  },
  "function:getBreakdownData": {
    "category": "code_functions",
    "keyword": "getBreakdownData",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "getBreakdownData"
    ],
    "description": "DETAILS MODAL FUNCTIONS WITH PIE CHART INTEGRATION =============================================================================  Calculates breakdown data for specified metal by type and location RENAMED from calculateBreakdownData to avoid 403 errors  @param {string} metal - Metal type to calculate ('Silver', 'Gold', 'Platinum', or 'Palladium') @returns {Object} Breakdown data organized by type and location ",
    "context_weight": 0.9,
    "line_number": 11,
    "body_preview": "const getBreakdownData = (metal) => { const metalItems = inventory.filter(item => item.metal === metal); const typeBreakdown = {};",
    "context_clues": [
      "get",
      "breakdown",
      "data",
      "details",
      "modal",
      "functions",
      "with",
      "chart",
      "integration",
      "calculates",
      "specified",
      "metal",
      "type",
      "location",
      "renamed"
    ],
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:breakdown": {
    "category": "context_clues",
    "keyword": "breakdown",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "getBreakdownData",
      "createBreakdownElements"
    ],
    "description": "Code related to breakdown",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:details": {
    "category": "context_clues",
    "keyword": "details",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "getBreakdownData",
      "showDetailsModal",
      "closeDetailsModal"
    ],
    "description": "Code related to details",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:specified": {
    "category": "context_clues",
    "keyword": "specified",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getBreakdownData",
      "showDetailsModal",
      "calculateTotals",
      "deleteItem",
      "editItem",
      "openNumistaModal",
      "goToPage",
      "purgeSpotHistory",
      "updateManualSpot",
      "resetSpot",
      "convertToUsd",
      "downloadFile"
    ],
    "description": "Code related to specified",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:type": {
    "category": "context_clues",
    "keyword": "type",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "getBreakdownData",
      "showDetailsModal",
      "hasMatchingData",
      "updateTypeSummary",
      "calculateTotals",
      "recordSpot",
      "normalizeType",
      "mapNumistaType",
      "parseNumistaMetal",
      "downloadFile",
      "analyzeStorageItem",
      "searchByType",
      "_create_type_specific_entry"
    ],
    "description": "Code related to type",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:location": {
    "category": "context_clues",
    "keyword": "location",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getBreakdownData",
      "formatPurchaseLocation",
      "formatStorageLocation"
    ],
    "description": "Code related to location",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "context:renamed": {
    "category": "context_clues",
    "keyword": "renamed",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "getBreakdownData"
    ],
    "description": "Code related to renamed",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "file:detailsModal.js": {
    "category": "file_relationships",
    "keyword": "detailsModal.js",
    "primary_file": "rProjects/StackTrackr/js/detailsModal.js",
    "functions": [
      "getBreakdownData",
      "createBreakdownElements",
      "showDetailsModal",
      "closeDetailsModal"
    ],
    "description": "File containing getBreakdownData and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.000Z"
  },
  "function:createBreakdownElements": {
    "category": "code_functions",
    "keyword": "createBreakdownElements",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "createBreakdownElements"
    ],
    "description": " Creates breakdown DOM elements for display CHANGED from renderBreakdownHTML to use DOM methods instead of innerHTML  @param {Object} breakdown - Breakdown data object @returns {DocumentFragment} DOM fragment containing the breakdown elements ",
    "context_weight": 0.9,
    "line_number": 56,
    "body_preview": "const createBreakdownElements = (breakdown) => { const container = document.createDocumentFragment(); if (Object.keys(breakdown).length === 0) {",
    "context_clues": [
      "create",
      "breakdown",
      "elements",
      "creates",
      "display",
      "changed",
      "from",
      "renderbreakdownhtml",
      "methods",
      "instead",
      "innerhtml",
      "param",
      "object",
      "data",
      "documentfragment"
    ],
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:renderbreakdownhtml": {
    "category": "context_clues",
    "keyword": "renderbreakdownhtml",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "createBreakdownElements"
    ],
    "description": "Code related to renderbreakdownhtml",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:methods": {
    "category": "context_clues",
    "keyword": "methods",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "createBreakdownElements",
      "_update_memory_item"
    ],
    "description": "Code related to methods",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:instead": {
    "category": "context_clues",
    "keyword": "instead",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "createBreakdownElements",
      "importNumistaCsv",
      "importJson",
      "resetSpotByName"
    ],
    "description": "Code related to instead",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.730Z"
  },
  "context:innerhtml": {
    "category": "context_clues",
    "keyword": "innerhtml",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "createBreakdownElements"
    ],
    "description": "Code related to innerhtml",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:documentfragment": {
    "category": "context_clues",
    "keyword": "documentfragment",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "createBreakdownElements"
    ],
    "description": "Code related to documentfragment",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "function:showDetailsModal": {
    "category": "code_functions",
    "keyword": "showDetailsModal",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "showDetailsModal"
    ],
    "description": " Shows the details modal for specified metal with pie charts  @param {string} metal - Metal type to show details for ",
    "context_weight": 0.9,
    "line_number": 115,
    "body_preview": "const showDetailsModal = (metal) => { const breakdownData = getBreakdownData(metal); // Update modal title",
    "context_clues": [
      "show",
      "details",
      "modal",
      "shows",
      "specified",
      "metal",
      "with",
      "charts",
      "param",
      "string",
      "type",
      "getbreakdowndata",
      "update",
      "clear",
      "detailsmodal"
    ],
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:getbreakdowndata": {
    "category": "context_clues",
    "keyword": "getbreakdowndata",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "showDetailsModal"
    ],
    "description": "Code related to getbreakdowndata",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:detailsmodal": {
    "category": "context_clues",
    "keyword": "detailsmodal",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "showDetailsModal",
      "closeDetailsModal"
    ],
    "description": "Code related to detailsmodal",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "function:closeDetailsModal": {
    "category": "code_functions",
    "keyword": "closeDetailsModal",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "closeDetailsModal"
    ],
    "description": " Closes the details modal and cleans up charts ",
    "context_weight": 0.9,
    "line_number": 171,
    "body_preview": "const closeDetailsModal = () => { if (window.closeModalById) closeModalById('detailsModal'); else {",
    "context_clues": [
      "close",
      "details",
      "modal",
      "closes",
      "cleans",
      "charts",
      "closedetailsmodal",
      "closemodalbyid",
      "detailsmodal"
    ],
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "context:closes": {
    "category": "context_clues",
    "keyword": "closes",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "closeDetailsModal",
      "closeNumistaModal"
    ],
    "description": "Code related to closes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.652Z"
  },
  "context:cleans": {
    "category": "context_clues",
    "keyword": "cleans",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeDetailsModal",
      "cleanString"
    ],
    "description": "Code related to cleans",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:closedetailsmodal": {
    "category": "context_clues",
    "keyword": "closedetailsmodal",
    "files": [
      "rProjects/StackTrackr/js/detailsModal.js"
    ],
    "functions": [
      "closeDetailsModal"
    ],
    "description": "Code related to closedetailsmodal",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.520Z"
  },
  "function:hasMasterPassword": {
    "category": "code_functions",
    "keyword": "hasMasterPassword",
    "files": [
      "rProjects/StackTrackr/js/encryption.js"
    ],
    "functions": [
      "hasMasterPassword"
    ],
    "description": "Check if master password has been set",
    "context_weight": 0.9,
    "line_number": 43,
    "body_preview": "const hasMasterPassword = this.hasMasterPassword(); if (hasMasterPassword && this.debugDecryption) { console.log('🔐 Encryption system initialized - master password exists');",
    "context_clues": [
      "has",
      "master",
      "password",
      "check",
      "been",
      "initialized",
      "encryption"
    ],
    "last_updated": "2025-08-20T17:24:09.532Z"
  },
  "context:has": {
    "category": "context_clues",
    "keyword": "has",
    "files": [
      "rProjects/StackTrackr/js/encryption.js",
      "rProjects/StackTrackr/js/filters.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "hasMasterPassword",
      "hasMatchingData",
      "has_changes",
      "checkHasApiKey"
    ],
    "description": "Code related to has",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "context:master": {
    "category": "context_clues",
    "keyword": "master",
    "files": [
      "rProjects/StackTrackr/js/encryption.js"
    ],
    "functions": [
      "hasMasterPassword"
    ],
    "description": "Code related to master",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.532Z"
  },
  "context:password": {
    "category": "context_clues",
    "keyword": "password",
    "files": [
      "rProjects/StackTrackr/js/encryption.js"
    ],
    "functions": [
      "hasMasterPassword"
    ],
    "description": "Code related to password",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.532Z"
  },
  "context:been": {
    "category": "context_clues",
    "keyword": "been",
    "files": [
      "rProjects/StackTrackr/js/encryption.js"
    ],
    "functions": [
      "hasMasterPassword"
    ],
    "description": "Code related to been",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.532Z"
  },
  "context:encryption": {
    "category": "context_clues",
    "keyword": "encryption",
    "files": [
      "rProjects/StackTrackr/js/encryption.js",
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "hasMasterPassword",
      "isUnlocked",
      "setupEncryptionEvents",
      "updateEncryptionUI",
      "saveData"
    ],
    "description": "Code related to encryption",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "file:encryption.js": {
    "category": "file_relationships",
    "keyword": "encryption.js",
    "primary_file": "rProjects/StackTrackr/js/encryption.js",
    "functions": [
      "hasMasterPassword",
      "isUnlocked"
    ],
    "description": "File containing hasMasterPassword and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.011Z"
  },
  "function:isUnlocked": {
    "category": "code_functions",
    "keyword": "isUnlocked",
    "files": [
      "rProjects/StackTrackr/js/encryption.js"
    ],
    "functions": [
      "isUnlocked"
    ],
    "description": "Function isUnlocked in encryption.js",
    "context_weight": 0.9,
    "line_number": 727,
    "body_preview": "const isUnlocked = this.encryption.isUnlocked(); // Update status indicator const statusIndicator = document.getElementById('encryptionStatusIndicator');",
    "context_clues": [
      "unlocked",
      "update",
      "getelementbyid",
      "setup",
      "encryption"
    ],
    "last_updated": "2025-08-20T17:24:09.534Z"
  },
  "context:unlocked": {
    "category": "context_clues",
    "keyword": "unlocked",
    "files": [
      "rProjects/StackTrackr/js/encryption.js"
    ],
    "functions": [
      "isUnlocked"
    ],
    "description": "Code related to unlocked",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.534Z"
  },
  "function:safeAttachListener": {
    "category": "code_functions",
    "keyword": "safeAttachListener",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "safeAttachListener"
    ],
    "description": " EVENTS MODULE - FIXED VERSION  Handles all DOM event listeners with proper null checking and error handling. Includes file protocol compatibility fixes and fallback event attachment methods.  EVENT UTILITIES =============================================================================  Safely attaches event listener with fallback methods @param {HTMLElement} element - Element to attach listener to @param {string} event - Event type @param {Function} handler - Event handler function @param {string} description - Description for logging @returns {boolean} Success status ",
    "context_weight": 0.9,
    "line_number": 19,
    "body_preview": "const safeAttachListener = (element, event, handler, description = \"\") => { if (!element) { console.warn(",
    "context_clues": [
      "safe",
      "attach",
      "listener",
      "events",
      "module",
      "fixed",
      "version",
      "handles",
      "event",
      "listeners",
      "with",
      "proper",
      "null",
      "checking",
      "error"
    ],
    "last_updated": "2025-08-20T17:24:09.561Z"
  },
  "context:safe": {
    "category": "context_clues",
    "keyword": "safe",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/file-protocol-fix.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "safeAttachListener",
      "safeDebug",
      "safeGetElement",
      "escapeAttribute",
      "sanitizeHtml",
      "sanitizeImportedItem"
    ],
    "description": "Code related to safe",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:attach": {
    "category": "context_clues",
    "keyword": "attach",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "safeAttachListener"
    ],
    "description": "Code related to attach",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.561Z"
  },
  "context:listener": {
    "category": "context_clues",
    "keyword": "listener",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "safeAttachListener",
      "setupBasicEventListeners",
      "setupSystemThemeListener"
    ],
    "description": "Code related to listener",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:fixed": {
    "category": "context_clues",
    "keyword": "fixed",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "safeAttachListener",
      "createDummyElement"
    ],
    "description": "Code related to fixed",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.607Z"
  },
  "context:proper": {
    "category": "context_clues",
    "keyword": "proper",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "safeAttachListener"
    ],
    "description": "Code related to proper",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.561Z"
  },
  "context:checking": {
    "category": "context_clues",
    "keyword": "checking",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "safeAttachListener"
    ],
    "description": "Code related to checking",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.561Z"
  },
  "context:error": {
    "category": "context_clues",
    "keyword": "error",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "safeAttachListener",
      "importCsv",
      "handleError",
      "getUserFriendlyMessage"
    ],
    "description": "Code related to error",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "file:events.js": {
    "category": "file_relationships",
    "keyword": "events.js",
    "primary_file": "rProjects/StackTrackr/js/events.js",
    "functions": [
      "safeAttachListener",
      "setupColumnResizing",
      "updateColumnVisibility",
      "setupResponsiveColumns",
      "setupEventListeners",
      "setupPagination",
      "setupBulkEditControls",
      "setupSearch",
      "updateThemeButton",
      "setupThemeToggle",
      "setupApiEvents",
      "setupEncryptionEvents",
      "updateEncryptionUI"
    ],
    "description": "File containing safeAttachListener and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.028Z"
  },
  "function:setupColumnResizing": {
    "category": "code_functions",
    "keyword": "setupColumnResizing",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupColumnResizing"
    ],
    "description": " Implements dynamic column resizing for the inventory table ",
    "context_weight": 0.9,
    "line_number": 52,
    "body_preview": "const setupColumnResizing = () => { const table = document.getElementById(\"inventoryTable\"); if (!table) {",
    "context_clues": [
      "setup",
      "column",
      "resizing",
      "implements",
      "dynamic",
      "inventory",
      "table",
      "setupcolumnresizing",
      "getelementbyid",
      "clear",
      "handles",
      "handle",
      "remove",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.550Z"
  },
  "context:column": {
    "category": "context_clues",
    "keyword": "column",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/search.js",
      "rProjects/StackTrackr/js/sorting.js"
    ],
    "functions": [
      "setupColumnResizing",
      "updateColumnVisibility",
      "setupResponsiveColumns",
      "applyColumnFilter",
      "toggleGlobalPriceView",
      "exportNumistaCsv",
      "filterInventory",
      "sortInventory"
    ],
    "description": "Code related to column",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.715Z"
  },
  "context:resizing": {
    "category": "context_clues",
    "keyword": "resizing",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupColumnResizing"
    ],
    "description": "Code related to resizing",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.550Z"
  },
  "context:implements": {
    "category": "context_clues",
    "keyword": "implements",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupColumnResizing"
    ],
    "description": "Code related to implements",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.550Z"
  },
  "context:dynamic": {
    "category": "context_clues",
    "keyword": "dynamic",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rScripts/dynamic_memory.py"
    ],
    "functions": [
      "setupColumnResizing",
      "__init__",
      "_add_to_sync_config",
      "_update_workflow_docs"
    ],
    "description": "Code related to dynamic",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.265Z"
  },
  "context:setupcolumnresizing": {
    "category": "context_clues",
    "keyword": "setupcolumnresizing",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupColumnResizing"
    ],
    "description": "Code related to setupcolumnresizing",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.550Z"
  },
  "function:updateColumnVisibility": {
    "category": "code_functions",
    "keyword": "updateColumnVisibility",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateColumnVisibility"
    ],
    "description": "RESPONSIVE TABLE HANDLING =============================================================================  Updates column visibility based on current viewport width ",
    "context_weight": 0.9,
    "line_number": 189,
    "body_preview": "const updateColumnVisibility = () => { const width = window.innerWidth; const hidden = new Set();",
    "context_clues": [
      "update",
      "column",
      "visibility",
      "responsive",
      "table",
      "handling",
      "updates",
      "based",
      "current",
      "viewport",
      "width",
      "updatecolumnvisibility",
      "set",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.551Z"
  },
  "context:visibility": {
    "category": "context_clues",
    "keyword": "visibility",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "updateColumnVisibility",
      "setupResponsiveColumns",
      "updateNavButtons"
    ],
    "description": "Code related to visibility",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "context:responsive": {
    "category": "context_clues",
    "keyword": "responsive",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateColumnVisibility",
      "setupResponsiveColumns"
    ],
    "description": "Code related to responsive",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.551Z"
  },
  "context:handling": {
    "category": "context_clues",
    "keyword": "handling",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateColumnVisibility",
      "setupResponsiveColumns",
      "importCsv"
    ],
    "description": "Code related to handling",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.638Z"
  },
  "context:viewport": {
    "category": "context_clues",
    "keyword": "viewport",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateColumnVisibility"
    ],
    "description": "Code related to viewport",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.551Z"
  },
  "context:width": {
    "category": "context_clues",
    "keyword": "width",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateColumnVisibility"
    ],
    "description": "Code related to width",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.551Z"
  },
  "context:updatecolumnvisibility": {
    "category": "context_clues",
    "keyword": "updatecolumnvisibility",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateColumnVisibility",
      "setupResponsiveColumns"
    ],
    "description": "Code related to updatecolumnvisibility",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.551Z"
  },
  "function:setupResponsiveColumns": {
    "category": "code_functions",
    "keyword": "setupResponsiveColumns",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupResponsiveColumns"
    ],
    "description": " Sets up responsive column visibility handling ",
    "context_weight": 0.9,
    "line_number": 252,
    "body_preview": "const setupResponsiveColumns = () => { updateColumnVisibility(); safeAttachListener(",
    "context_clues": [
      "setup",
      "responsive",
      "columns",
      "sets",
      "column",
      "visibility",
      "handling",
      "setupresponsivecolumns",
      "updatecolumnvisibility",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.551Z"
  },
  "context:columns": {
    "category": "context_clues",
    "keyword": "columns",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "setupResponsiveColumns",
      "hideEmptyColumns"
    ],
    "description": "Code related to columns",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:setupresponsivecolumns": {
    "category": "context_clues",
    "keyword": "setupresponsivecolumns",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupResponsiveColumns"
    ],
    "description": "Code related to setupresponsivecolumns",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.551Z"
  },
  "function:setupEventListeners": {
    "category": "code_functions",
    "keyword": "setupEventListeners",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupEventListeners"
    ],
    "description": "MAIN EVENT LISTENERS SETUP =============================================================================  Sets up all primary event listeners for the application ",
    "context_weight": 0.9,
    "line_number": 268,
    "body_preview": "const setupEventListeners = () => { console.log(`Setting up event listeners (v${APP_VERSION})...`); try {",
    "context_clues": [
      "setup",
      "event",
      "listeners",
      "main",
      "sets",
      "primary",
      "application",
      "setupeventlisteners",
      "setting",
      "search",
      "searchinput",
      "searchquery",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.551Z"
  },
  "context:primary": {
    "category": "context_clues",
    "keyword": "primary",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "setupEventListeners",
      "getDisplayComposition"
    ],
    "description": "Code related to primary",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:setupeventlisteners": {
    "category": "context_clues",
    "keyword": "setupeventlisteners",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupEventListeners"
    ],
    "description": "Code related to setupeventlisteners",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.551Z"
  },
  "context:setting": {
    "category": "context_clues",
    "keyword": "setting",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "setupEventListeners",
      "setupPagination",
      "setupBulkEditControls",
      "setupSearch",
      "setupThemeToggle",
      "setupApiEvents",
      "setupEncryptionEvents",
      "setupBasicEventListeners",
      "getStorageItemDescription"
    ],
    "description": "Code related to setting",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "context:searchinput": {
    "category": "context_clues",
    "keyword": "searchinput",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "setupEventListeners",
      "setupSearch",
      "clearAllFilters"
    ],
    "description": "Code related to searchinput",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.583Z"
  },
  "context:searchquery": {
    "category": "context_clues",
    "keyword": "searchquery",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "setupEventListeners",
      "setupSearch",
      "clearAllFilters",
      "removeFilter"
    ],
    "description": "Code related to searchquery",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.583Z"
  },
  "function:setupPagination": {
    "category": "code_functions",
    "keyword": "setupPagination",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupPagination"
    ],
    "description": " Sets up pagination event listeners ",
    "context_weight": 0.9,
    "line_number": 1432,
    "body_preview": "const setupPagination = () => { debugLog(\"Setting up pagination listeners...\"); try {",
    "context_clues": [
      "setup",
      "pagination",
      "sets",
      "event",
      "listeners",
      "setuppagination",
      "setting",
      "parseint",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.552Z"
  },
  "context:setuppagination": {
    "category": "context_clues",
    "keyword": "setuppagination",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupPagination"
    ],
    "description": "Code related to setuppagination",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.552Z"
  },
  "function:setupBulkEditControls": {
    "category": "code_functions",
    "keyword": "setupBulkEditControls",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupBulkEditControls"
    ],
    "description": " Sets up bulk edit control panel event listeners ",
    "context_weight": 0.9,
    "line_number": 1511,
    "body_preview": "const setupBulkEditControls = () => { debugLog(\"Setting up bulk edit control listeners...\"); try {",
    "context_clues": [
      "setup",
      "bulk",
      "edit",
      "controls",
      "sets",
      "control",
      "panel",
      "event",
      "listeners",
      "setupbulkeditcontrols",
      "setting",
      "getelementbyid",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.552Z"
  },
  "context:bulk": {
    "category": "context_clues",
    "keyword": "bulk",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "setupBulkEditControls",
      "handleBulkUpload",
      "parseCSVFile",
      "processVPRData",
      "saveResultsToHistory"
    ],
    "description": "Code related to bulk",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.874Z"
  },
  "context:edit": {
    "category": "context_clues",
    "keyword": "edit",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "setupBulkEditControls",
      "calculateLevenshteinDistance",
      "startCellEdit",
      "cancelEdit",
      "showNotes",
      "editItem"
    ],
    "description": "Code related to edit",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.635Z"
  },
  "context:controls": {
    "category": "context_clues",
    "keyword": "controls",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupBulkEditControls"
    ],
    "description": "Code related to controls",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.552Z"
  },
  "context:control": {
    "category": "context_clues",
    "keyword": "control",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "setupBulkEditControls",
      "cleanString"
    ],
    "description": "Code related to control",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:panel": {
    "category": "context_clues",
    "keyword": "panel",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "setupBulkEditControls",
      "setTrackedPanel"
    ],
    "description": "Code related to panel",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:setupbulkeditcontrols": {
    "category": "context_clues",
    "keyword": "setupbulkeditcontrols",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupBulkEditControls"
    ],
    "description": "Code related to setupbulkeditcontrols",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.552Z"
  },
  "function:setupSearch": {
    "category": "code_functions",
    "keyword": "setupSearch",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupSearch"
    ],
    "description": " Sets up search event listeners ",
    "context_weight": 0.9,
    "line_number": 1569,
    "body_preview": "const setupSearch = () => { debugLog(\"Setting up search listeners...\"); try {",
    "context_clues": [
      "setup",
      "search",
      "sets",
      "event",
      "listeners",
      "setupsearch",
      "setting",
      "searchinput",
      "handlesearchinput",
      "searchquery",
      "reset",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.552Z"
  },
  "context:setupsearch": {
    "category": "context_clues",
    "keyword": "setupsearch",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupSearch"
    ],
    "description": "Code related to setupsearch",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.552Z"
  },
  "context:handlesearchinput": {
    "category": "context_clues",
    "keyword": "handlesearchinput",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupSearch"
    ],
    "description": "Code related to handlesearchinput",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.552Z"
  },
  "function:updateThemeButton": {
    "category": "code_functions",
    "keyword": "updateThemeButton",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateThemeButton"
    ],
    "description": " Sets up theme toggle event listeners ",
    "context_weight": 0.9,
    "line_number": 1680,
    "body_preview": "const updateThemeButton = () => { const savedTheme = localStorage.getItem(THEME_KEY) || \"light\"; // Apply theme classes to all theme buttons",
    "context_clues": [
      "update",
      "theme",
      "button",
      "sets",
      "toggle",
      "event",
      "listeners",
      "updatethemebutton",
      "savedtheme",
      "getitem",
      "remove",
      "add",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.553Z"
  },
  "context:updatethemebutton": {
    "category": "context_clues",
    "keyword": "updatethemebutton",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateThemeButton"
    ],
    "description": "Code related to updatethemebutton",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.553Z"
  },
  "context:savedtheme": {
    "category": "context_clues",
    "keyword": "savedtheme",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "updateThemeButton",
      "setupThemeToggle",
      "initTheme"
    ],
    "description": "Code related to savedtheme",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "function:setupThemeToggle": {
    "category": "code_functions",
    "keyword": "setupThemeToggle",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupThemeToggle"
    ],
    "description": "Function setupThemeToggle in events.js",
    "context_weight": 0.9,
    "line_number": 1709,
    "body_preview": "const setupThemeToggle = () => { debugLog(\"Setting up theme toggle...\"); try {",
    "context_clues": [
      "setup",
      "theme",
      "toggle",
      "setupthemetoggle",
      "setting",
      "initialize",
      "inittheme",
      "savedtheme",
      "getitem",
      "settheme",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.553Z"
  },
  "context:setupthemetoggle": {
    "category": "context_clues",
    "keyword": "setupthemetoggle",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupThemeToggle"
    ],
    "description": "Code related to setupthemetoggle",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.553Z"
  },
  "context:inittheme": {
    "category": "context_clues",
    "keyword": "inittheme",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "setupThemeToggle",
      "initTheme"
    ],
    "description": "Code related to inittheme",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:settheme": {
    "category": "context_clues",
    "keyword": "settheme",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "setupThemeToggle",
      "setTheme",
      "initTheme",
      "toggleTheme",
      "setupSystemThemeListener"
    ],
    "description": "Code related to settheme",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "function:setupApiEvents": {
    "category": "code_functions",
    "keyword": "setupApiEvents",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupApiEvents"
    ],
    "description": " Sets up API-related event listeners ",
    "context_weight": 0.9,
    "line_number": 1775,
    "body_preview": "const setupApiEvents = () => { debugLog(\"Setting up API events...\"); try {",
    "context_clues": [
      "setup",
      "api",
      "events",
      "sets",
      "apirelated",
      "event",
      "listeners",
      "setupapievents",
      "setting",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.553Z"
  },
  "context:apirelated": {
    "category": "context_clues",
    "keyword": "apirelated",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupApiEvents"
    ],
    "description": "Code related to apirelated",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.553Z"
  },
  "context:setupapievents": {
    "category": "context_clues",
    "keyword": "setupapievents",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupApiEvents"
    ],
    "description": "Code related to setupapievents",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.553Z"
  },
  "function:setupEncryptionEvents": {
    "category": "code_functions",
    "keyword": "setupEncryptionEvents",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupEncryptionEvents"
    ],
    "description": "============================================================================= ENCRYPTION EVENT HANDLERS =============================================================================  Sets up encryption-related event handlers ",
    "context_weight": 0.9,
    "line_number": 2190,
    "body_preview": "const setupEncryptionEvents = () => { debugLog(\"Setting up encryption events...\"); try {",
    "context_clues": [
      "setup",
      "encryption",
      "events",
      "event",
      "handlers",
      "sets",
      "encryptionrelated",
      "setupencryptionevents",
      "setting",
      "setuppasswordbtn",
      "getelementbyid",
      "setupmasterpasswordbtn"
    ],
    "last_updated": "2025-08-20T17:24:09.554Z"
  },
  "context:handlers": {
    "category": "context_clues",
    "keyword": "handlers",
    "files": [
      "rProjects/StackTrackr/js/events.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/versionCheck.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rScripts/mcp_json_sync.py"
    ],
    "functions": [
      "setupEncryptionEvents",
      "applyColumnFilter",
      "setupVersionModalEvents",
      "setup_logging"
    ],
    "description": "Code related to handlers",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "context:encryptionrelated": {
    "category": "context_clues",
    "keyword": "encryptionrelated",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupEncryptionEvents"
    ],
    "description": "Code related to encryptionrelated",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.554Z"
  },
  "context:setupencryptionevents": {
    "category": "context_clues",
    "keyword": "setupencryptionevents",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupEncryptionEvents"
    ],
    "description": "Code related to setupencryptionevents",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.554Z"
  },
  "context:setuppasswordbtn": {
    "category": "context_clues",
    "keyword": "setuppasswordbtn",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupEncryptionEvents"
    ],
    "description": "Code related to setuppasswordbtn",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.554Z"
  },
  "context:setupmasterpasswordbtn": {
    "category": "context_clues",
    "keyword": "setupmasterpasswordbtn",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "setupEncryptionEvents"
    ],
    "description": "Code related to setupmasterpasswordbtn",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.554Z"
  },
  "function:updateEncryptionUI": {
    "category": "code_functions",
    "keyword": "updateEncryptionUI",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateEncryptionUI"
    ],
    "description": " Updates the encryption UI based on current encryption status ",
    "context_weight": 0.9,
    "line_number": 2409,
    "body_preview": "const updateEncryptionUI = () => { try { const encryption = new StackrTrackrEncryption();",
    "context_clues": [
      "update",
      "encryption",
      "updates",
      "based",
      "current",
      "status",
      "updateencryptionui",
      "setupsection",
      "getelementbyid",
      "managementsection",
      "events"
    ],
    "last_updated": "2025-08-20T17:24:09.554Z"
  },
  "context:updateencryptionui": {
    "category": "context_clues",
    "keyword": "updateencryptionui",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateEncryptionUI"
    ],
    "description": "Code related to updateencryptionui",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.554Z"
  },
  "context:setupsection": {
    "category": "context_clues",
    "keyword": "setupsection",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateEncryptionUI"
    ],
    "description": "Code related to setupsection",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.554Z"
  },
  "context:managementsection": {
    "category": "context_clues",
    "keyword": "managementsection",
    "files": [
      "rProjects/StackTrackr/js/events.js"
    ],
    "functions": [
      "updateEncryptionUI"
    ],
    "description": "Code related to managementsection",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.554Z"
  },
  "function:safeDebug": {
    "category": "code_functions",
    "keyword": "safeDebug",
    "files": [
      "rProjects/StackTrackr/js/file-protocol-fix.js"
    ],
    "functions": [
      "safeDebug"
    ],
    "description": "SIMPLIFIED FILE PROTOCOL COMPATIBILITY ============================================================================= Minimal file:// protocol fixes without conflicts",
    "context_weight": 0.9,
    "line_number": 4,
    "body_preview": "const safeDebug = (...args) => { if (typeof debugLog === 'function') { debugLog(...args);",
    "context_clues": [
      "safe",
      "debug",
      "simplified",
      "file",
      "protocol",
      "compatibility",
      "minimal",
      "fixes",
      "without",
      "conflicts",
      "loading",
      "fix"
    ],
    "last_updated": "2025-08-20T17:24:09.572Z"
  },
  "context:protocol": {
    "category": "context_clues",
    "keyword": "protocol",
    "files": [
      "rProjects/StackTrackr/js/file-protocol-fix.js",
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "safeDebug",
      "openNumistaModal"
    ],
    "description": "Code related to protocol",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.651Z"
  },
  "context:compatibility": {
    "category": "context_clues",
    "keyword": "compatibility",
    "files": [
      "rProjects/StackTrackr/js/file-protocol-fix.js",
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "safeDebug",
      "applyColumnFilter",
      "loadInventory",
      "toggleGlobalPriceView",
      "resetSpotByName",
      "saveDataSync"
    ],
    "description": "Code related to compatibility",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:minimal": {
    "category": "context_clues",
    "keyword": "minimal",
    "files": [
      "rProjects/StackTrackr/js/file-protocol-fix.js"
    ],
    "functions": [
      "safeDebug"
    ],
    "description": "Code related to minimal",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.572Z"
  },
  "context:fixes": {
    "category": "context_clues",
    "keyword": "fixes",
    "files": [
      "rProjects/StackTrackr/js/file-protocol-fix.js"
    ],
    "functions": [
      "safeDebug"
    ],
    "description": "Code related to fixes",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.572Z"
  },
  "context:conflicts": {
    "category": "context_clues",
    "keyword": "conflicts",
    "files": [
      "rProjects/StackTrackr/js/file-protocol-fix.js"
    ],
    "functions": [
      "safeDebug"
    ],
    "description": "Code related to conflicts",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.572Z"
  },
  "context:loading": {
    "category": "context_clues",
    "keyword": "loading",
    "files": [
      "rProjects/StackTrackr/js/file-protocol-fix.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "safeDebug",
      "sanitizeTablesOnLoad",
      "loadInventory",
      "renderTable",
      "loadSpotHistory",
      "autoLoadContext"
    ],
    "description": "Code related to loading",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.727Z"
  },
  "context:fix": {
    "category": "context_clues",
    "keyword": "fix",
    "files": [
      "rProjects/StackTrackr/js/file-protocol-fix.js",
      "scripts/utilities/fix-documentation-links.js"
    ],
    "functions": [
      "safeDebug",
      "fixDocumentationLinks",
      "fixFileLinks"
    ],
    "description": "Code related to fix",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.401Z"
  },
  "file:file-protocol-fix.js": {
    "category": "file_relationships",
    "keyword": "file-protocol-fix.js",
    "primary_file": "rProjects/StackTrackr/js/file-protocol-fix.js",
    "functions": [
      "safeDebug"
    ],
    "description": "File containing safeDebug and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.037Z"
  },
  "function:clearAllFilters": {
    "category": "code_functions",
    "keyword": "clearAllFilters",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "clearAllFilters"
    ],
    "description": " Clears all active filters and resets search input and pagination. ",
    "context_weight": 0.9,
    "line_number": 12,
    "body_preview": "const clearAllFilters = () => { activeFilters = {}; columnFilters = {};",
    "context_clues": [
      "clear",
      "all",
      "filters",
      "clears",
      "active",
      "resets",
      "search",
      "input",
      "pagination",
      "clearallfilters",
      "searchquery",
      "searchinput",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.583Z"
  },
  "context:filters": {
    "category": "context_clues",
    "keyword": "filters",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/search.js"
    ],
    "functions": [
      "clearAllFilters",
      "removeFilter",
      "renderActiveFilters",
      "filterInventoryAdvanced",
      "persistInventoryAndRefresh",
      "updateItemCount",
      "filterInventory"
    ],
    "description": "Code related to filters",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.703Z"
  },
  "context:active": {
    "category": "context_clues",
    "keyword": "active",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "clearAllFilters",
      "removeFilter",
      "renderActiveFilters",
      "updateItemCount",
      "filterInventory",
      "getFooterDomain"
    ],
    "description": "Code related to active",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "context:clearallfilters": {
    "category": "context_clues",
    "keyword": "clearallfilters",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "clearAllFilters"
    ],
    "description": "Code related to clearallfilters",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.583Z"
  },
  "file:filters.js": {
    "category": "file_relationships",
    "keyword": "filters.js",
    "primary_file": "rProjects/StackTrackr/js/filters.js",
    "functions": [
      "clearAllFilters",
      "removeFilter",
      "simplifyChipValue",
      "generateCategorySummary",
      "hasMatchingData",
      "renderActiveFilters",
      "filterInventoryAdvanced",
      "applyQuickFilter",
      "applyColumnFilter"
    ],
    "description": "File containing clearAllFilters and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.045Z"
  },
  "function:removeFilter": {
    "category": "code_functions",
    "keyword": "removeFilter",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "removeFilter"
    ],
    "description": " Removes a specific filter from active filters or search.  @param {string} field - The field to remove filter from @param {string} value - The value to remove from filter ",
    "context_weight": 0.9,
    "line_number": 38,
    "body_preview": "const removeFilter = (field, value) => { if (field === 'search') { // Clear search query",
    "context_clues": [
      "remove",
      "filter",
      "removes",
      "specific",
      "from",
      "active",
      "filters",
      "search",
      "param",
      "string",
      "field",
      "value",
      "removefilter",
      "clear",
      "searchquery"
    ],
    "last_updated": "2025-08-20T17:24:09.583Z"
  },
  "context:removefilter": {
    "category": "context_clues",
    "keyword": "removefilter",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "removeFilter"
    ],
    "description": "Code related to removefilter",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.583Z"
  },
  "function:simplifyChipValue": {
    "category": "code_functions",
    "keyword": "simplifyChipValue",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "simplifyChipValue"
    ],
    "description": " Simplifies common coin names for display in filter chips. Handles comma-separated values and pattern-based simplifications.  @param {string} value - The original value (may contain comma-separated values) @param {string} field - The field type (e.g., 'name', 'type', etc.) @returns {string} Simplified display value ",
    "context_weight": 0.9,
    "line_number": 75,
    "body_preview": "const simplifyChipValue = (value, field) => { if (!value || typeof value !== 'string') { return value;",
    "context_clues": [
      "simplify",
      "chip",
      "value",
      "simplifies",
      "common",
      "coin",
      "names",
      "display",
      "filter",
      "chips",
      "handles",
      "commaseparated",
      "values",
      "patternbased",
      "simplifications"
    ],
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:simplify": {
    "category": "context_clues",
    "keyword": "simplify",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "simplifyChipValue"
    ],
    "description": "Code related to simplify",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:chip": {
    "category": "context_clues",
    "keyword": "chip",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "simplifyChipValue",
      "renderActiveFilters"
    ],
    "description": "Code related to chip",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:simplifies": {
    "category": "context_clues",
    "keyword": "simplifies",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "simplifyChipValue"
    ],
    "description": "Code related to simplifies",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:coin": {
    "category": "context_clues",
    "keyword": "coin",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "simplifyChipValue",
      "openNumistaModal"
    ],
    "description": "Code related to coin",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.651Z"
  },
  "context:chips": {
    "category": "context_clues",
    "keyword": "chips",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "simplifyChipValue",
      "renderActiveFilters"
    ],
    "description": "Code related to chips",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:commaseparated": {
    "category": "context_clues",
    "keyword": "commaseparated",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "simplifyChipValue"
    ],
    "description": "Code related to commaseparated",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:patternbased": {
    "category": "context_clues",
    "keyword": "patternbased",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "simplifyChipValue"
    ],
    "description": "Code related to patternbased",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:simplifications": {
    "category": "context_clues",
    "keyword": "simplifications",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "simplifyChipValue"
    ],
    "description": "Code related to simplifications",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "function:generateCategorySummary": {
    "category": "code_functions",
    "keyword": "generateCategorySummary",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "generateCategorySummary"
    ],
    "description": " Generates category summary from filtered inventory. Returns summary of metals, types, and item counts above minimum threshold.  @param {Array<Object>} inventory - The filtered inventory @returns {Object} Summary of metals, types, and counts ",
    "context_weight": 0.9,
    "line_number": 216,
    "body_preview": "const generateCategorySummary = (inventory) => { // Get minimum count setting from dropdown control or localStorage const chipMinCountEl = document.getElementById('chipMinCount');",
    "context_clues": [
      "generate",
      "category",
      "summary",
      "generates",
      "from",
      "filtered",
      "inventory",
      "metals",
      "types",
      "item",
      "counts",
      "above",
      "minimum",
      "threshold",
      "param"
    ],
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:category": {
    "category": "context_clues",
    "keyword": "category",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "generateCategorySummary"
    ],
    "description": "Code related to category",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:filtered": {
    "category": "context_clues",
    "keyword": "filtered",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "generateCategorySummary",
      "filterInventoryAdvanced"
    ],
    "description": "Code related to filtered",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:types": {
    "category": "context_clues",
    "keyword": "types",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "generateCategorySummary",
      "startCellEdit",
      "showEntityTypes"
    ],
    "description": "Code related to types",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "context:counts": {
    "category": "context_clues",
    "keyword": "counts",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "generateCategorySummary"
    ],
    "description": "Code related to counts",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:above": {
    "category": "context_clues",
    "keyword": "above",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "generateCategorySummary"
    ],
    "description": "Code related to above",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:minimum": {
    "category": "context_clues",
    "keyword": "minimum",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "generateCategorySummary"
    ],
    "description": "Code related to minimum",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:threshold": {
    "category": "context_clues",
    "keyword": "threshold",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "generateCategorySummary"
    ],
    "description": "Code related to threshold",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "function:hasMatchingData": {
    "category": "code_functions",
    "keyword": "hasMatchingData",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "hasMatchingData"
    ],
    "description": " Checks if a filter field/value combination has matching data in the given inventory.  @param {string} field - The field name (e.g., 'metal', 'type', 'name') @param {string} value - The filter value @param {Array<Object>} inventory - The inventory to check against @returns {boolean} True if there are items matching this filter ",
    "context_weight": 0.9,
    "line_number": 295,
    "body_preview": "const hasMatchingData = (field, value, inventory) => { if (!inventory || inventory.length === 0) return false; return inventory.some(item => {",
    "context_clues": [
      "has",
      "matching",
      "data",
      "checks",
      "filter",
      "fieldvalue",
      "combination",
      "given",
      "inventory",
      "param",
      "string",
      "field",
      "name",
      "metal",
      "type"
    ],
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:matching": {
    "category": "context_clues",
    "keyword": "matching",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "hasMatchingData",
      "updateItemCount"
    ],
    "description": "Code related to matching",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.629Z"
  },
  "context:checks": {
    "category": "context_clues",
    "keyword": "checks",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "hasMatchingData",
      "checkFileSize"
    ],
    "description": "Code related to checks",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:fieldvalue": {
    "category": "context_clues",
    "keyword": "fieldvalue",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "hasMatchingData"
    ],
    "description": "Code related to fieldvalue",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "context:combination": {
    "category": "context_clues",
    "keyword": "combination",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "hasMatchingData"
    ],
    "description": "Code related to combination",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.584Z"
  },
  "function:renderActiveFilters": {
    "category": "code_functions",
    "keyword": "renderActiveFilters",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "renderActiveFilters"
    ],
    "description": " Renders active filter chips beneath the search bar. Updates the filter chip container based on current filters and inventory. ",
    "context_weight": 0.9,
    "line_number": 325,
    "body_preview": "const renderActiveFilters = () => { const container = document.getElementById('activeFilters'); if (!container) return;",
    "context_clues": [
      "render",
      "active",
      "filters",
      "renders",
      "filter",
      "chips",
      "beneath",
      "search",
      "updates",
      "chip",
      "container",
      "based",
      "current",
      "inventory",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:beneath": {
    "category": "context_clues",
    "keyword": "beneath",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "renderActiveFilters"
    ],
    "description": "Code related to beneath",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:container": {
    "category": "context_clues",
    "keyword": "container",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "renderActiveFilters",
      "updateTypeSummary"
    ],
    "description": "Code related to container",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "function:filterInventoryAdvanced": {
    "category": "code_functions",
    "keyword": "filterInventoryAdvanced",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "filterInventoryAdvanced"
    ],
    "description": " Enhanced filter inventory function that includes advanced filters @returns {Array} Filtered inventory items ",
    "context_weight": 0.9,
    "line_number": 547,
    "body_preview": "const filterInventoryAdvanced = () => { let result = inventory; // Apply advanced filters",
    "context_clues": [
      "filter",
      "inventory",
      "advanced",
      "enhanced",
      "that",
      "includes",
      "filters",
      "array",
      "filtered",
      "items",
      "filterinventoryadvanced"
    ],
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:advanced": {
    "category": "context_clues",
    "keyword": "advanced",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/search.js"
    ],
    "functions": [
      "filterInventoryAdvanced",
      "filterInventory"
    ],
    "description": "Code related to advanced",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.703Z"
  },
  "context:that": {
    "category": "context_clues",
    "keyword": "that",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "filterInventoryAdvanced",
      "hideEmptyColumns",
      "resetSpotByName",
      "debounce"
    ],
    "description": "Code related to that",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:items": {
    "category": "context_clues",
    "keyword": "items",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "filterInventoryAdvanced",
      "updateItemCount",
      "showNotes",
      "getStorageItemDescription",
      "getChangelogForVersion",
      "getEmbeddedChangelog"
    ],
    "description": "Code related to items",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:filterinventoryadvanced": {
    "category": "context_clues",
    "keyword": "filterinventoryadvanced",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "filterInventoryAdvanced"
    ],
    "description": "Code related to filterinventoryadvanced",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "function:applyQuickFilter": {
    "category": "code_functions",
    "keyword": "applyQuickFilter",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "applyQuickFilter"
    ],
    "description": " Applies a quick filter for a specific field value (when clicking on table values) Supports 3-level deep filtering - clicking same filter removes it, clicking different filters stacks them @param {string} field - The field to filter by @param {string} value - The value to filter for @param {boolean} [isGrouped=false] - Whether this is a grouped name filter ",
    "context_weight": 0.9,
    "line_number": 873,
    "body_preview": "const applyQuickFilter = (field, value, isGrouped = false) => { // If this exact filter is already active, remove it (toggle behavior) if (activeFilters[field]?.values?.[0] === value && !isGrouped) {",
    "context_clues": [
      "apply",
      "quick",
      "filter",
      "applies",
      "specific",
      "field",
      "value",
      "when",
      "clicking",
      "table",
      "values",
      "supports",
      "3level",
      "deep",
      "filtering"
    ],
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:apply": {
    "category": "context_clues",
    "keyword": "apply",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/VulnTrackr/app.js",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "applyQuickFilter",
      "applyColumnFilter",
      "applyFormulaToData",
      "calculate_hash",
      "backup_file",
      "validate_snapshot",
      "main",
      "backup_database",
      "validate_database_schema",
      "execute_operation"
    ],
    "description": "Code related to apply",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:applies": {
    "category": "context_clues",
    "keyword": "applies",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "applyQuickFilter"
    ],
    "description": "Code related to applies",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:clicking": {
    "category": "context_clues",
    "keyword": "clicking",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "applyQuickFilter"
    ],
    "description": "Code related to clicking",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:supports": {
    "category": "context_clues",
    "keyword": "supports",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "applyQuickFilter",
      "getContrastColor"
    ],
    "description": "Code related to supports",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:3level": {
    "category": "context_clues",
    "keyword": "3level",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "applyQuickFilter"
    ],
    "description": "Code related to 3level",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:deep": {
    "category": "context_clues",
    "keyword": "deep",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "applyQuickFilter"
    ],
    "description": "Code related to deep",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "function:applyColumnFilter": {
    "category": "code_functions",
    "keyword": "applyColumnFilter",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "applyColumnFilter"
    ],
    "description": " Legacy function for backward compatibility with table click handlers @param {string} field - The field to filter by @param {string} value - The value to filter for ",
    "context_weight": 0.9,
    "line_number": 937,
    "body_preview": "const applyColumnFilter = (field, value) => { applyQuickFilter(field, value); };",
    "context_clues": [
      "apply",
      "column",
      "filter",
      "legacy",
      "backward",
      "compatibility",
      "with",
      "table",
      "click",
      "handlers",
      "param",
      "string",
      "field",
      "value",
      "export"
    ],
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "context:legacy": {
    "category": "context_clues",
    "keyword": "legacy",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "applyColumnFilter",
      "updateTypeSummary",
      "togglePriceView",
      "toggleGlobalPriceView"
    ],
    "description": "Code related to legacy",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "context:backward": {
    "category": "context_clues",
    "keyword": "backward",
    "files": [
      "rProjects/StackTrackr/js/filters.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "applyColumnFilter",
      "saveData",
      "loadData",
      "saveDataSync"
    ],
    "description": "Code related to backward",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:click": {
    "category": "context_clues",
    "keyword": "click",
    "files": [
      "rProjects/StackTrackr/js/filters.js"
    ],
    "functions": [
      "applyColumnFilter"
    ],
    "description": "Code related to click",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.585Z"
  },
  "function:normalizeString": {
    "category": "code_functions",
    "keyword": "normalizeString",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "normalizeString"
    ],
    "description": "Fuzzy Search Engine Module for StackTrackr Provides typo-tolerant, partial, and order-independent search utilities  Normalize a string by stripping special characters and optionally lowercasing  @param {string} str - Input string @param {boolean} [caseSensitive=false] - Preserve case if true @returns {string} Normalized string ",
    "context_weight": 0.9,
    "line_number": 11,
    "body_preview": "const normalizeString = (str, caseSensitive = false) => { if (typeof str !== \"string\") return \"\"; let normalized = str",
    "context_clues": [
      "normalize",
      "string",
      "fuzzy",
      "search",
      "engine",
      "module",
      "stacktrackr",
      "provides",
      "typotolerant",
      "partial",
      "orderindependent",
      "utilities",
      "stripping",
      "special",
      "characters"
    ],
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:fuzzy": {
    "category": "context_clues",
    "keyword": "fuzzy",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "normalizeString",
      "tokenizeWords",
      "calculateLevenshteinDistance",
      "fuzzyMatch",
      "fuzzySearch"
    ],
    "description": "Code related to fuzzy",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.597Z"
  },
  "context:typotolerant": {
    "category": "context_clues",
    "keyword": "typotolerant",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "normalizeString"
    ],
    "description": "Code related to typotolerant",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:orderindependent": {
    "category": "context_clues",
    "keyword": "orderindependent",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "normalizeString"
    ],
    "description": "Code related to orderindependent",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:stripping": {
    "category": "context_clues",
    "keyword": "stripping",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeString",
      "cleanString",
      "sanitizeObjectFields"
    ],
    "description": "Code related to stripping",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:special": {
    "category": "context_clues",
    "keyword": "special",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeString",
      "escapeAttribute",
      "sortInventory",
      "sanitizeHtml"
    ],
    "description": "Code related to special",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:characters": {
    "category": "context_clues",
    "keyword": "characters",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeString",
      "sanitizeTablesOnLoad",
      "escapeAttribute",
      "sanitizeHtml",
      "stripNonAlphanumeric",
      "cleanString",
      "sanitizeObjectFields"
    ],
    "description": "Code related to characters",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "file:fuzzy-search.js": {
    "category": "file_relationships",
    "keyword": "fuzzy-search.js",
    "primary_file": "rProjects/StackTrackr/js/fuzzy-search.js",
    "functions": [
      "normalizeString",
      "tokenizeWords",
      "generateNGrams",
      "calculateLevenshteinDistance",
      "fuzzyMatch",
      "fuzzySearch"
    ],
    "description": "File containing normalizeString and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.050Z"
  },
  "function:tokenizeWords": {
    "category": "code_functions",
    "keyword": "tokenizeWords",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "tokenizeWords"
    ],
    "description": " Tokenize a string into individual words  @param {string} str - Input string @param {boolean} [caseSensitive=false] - Preserve case if true @returns {string[]} Array of words ",
    "context_weight": 0.9,
    "line_number": 29,
    "body_preview": "const tokenizeWords = (str, caseSensitive = false) => { const normalized = normalizeString(str, caseSensitive); return normalized ? normalized.split(/\\s+/) : [];",
    "context_clues": [
      "tokenize",
      "words",
      "string",
      "into",
      "individual",
      "param",
      "input",
      "boolean",
      "casesensitivefalse",
      "preserve",
      "case",
      "true",
      "array",
      "generate",
      "fuzzy"
    ],
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:tokenize": {
    "category": "context_clues",
    "keyword": "tokenize",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "tokenizeWords"
    ],
    "description": "Code related to tokenize",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:words": {
    "category": "context_clues",
    "keyword": "words",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "tokenizeWords",
      "getCompositionFirstWords"
    ],
    "description": "Code related to words",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:casesensitivefalse": {
    "category": "context_clues",
    "keyword": "casesensitivefalse",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "tokenizeWords",
      "generateNGrams"
    ],
    "description": "Code related to casesensitivefalse",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:preserve": {
    "category": "context_clues",
    "keyword": "preserve",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "tokenizeWords",
      "generateNGrams"
    ],
    "description": "Code related to preserve",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:case": {
    "category": "context_clues",
    "keyword": "case",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "tokenizeWords",
      "generateNGrams"
    ],
    "description": "Code related to case",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "function:generateNGrams": {
    "category": "code_functions",
    "keyword": "generateNGrams",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "generateNGrams"
    ],
    "description": " Generate character n-grams from a string  @param {string} str - Input string @param {number} [n=2] - Length of n-gram @param {boolean} [caseSensitive=false] - Preserve case if true @returns {string[]} Array of n-grams ",
    "context_weight": 0.9,
    "line_number": 42,
    "body_preview": "const generateNGrams = (str, n = 2, caseSensitive = false) => { const normalized = normalizeString(str, caseSensitive).replace(/\\s+/g, \"\"); if (!normalized) return [];",
    "context_clues": [
      "generate",
      "grams",
      "character",
      "ngrams",
      "from",
      "string",
      "param",
      "input",
      "number",
      "length",
      "ngram",
      "boolean",
      "casesensitivefalse",
      "preserve",
      "case"
    ],
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:grams": {
    "category": "context_clues",
    "keyword": "grams",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateNGrams",
      "gramsToOzt",
      "oztToGrams",
      "formatWeight"
    ],
    "description": "Code related to grams",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:character": {
    "category": "context_clues",
    "keyword": "character",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "generateNGrams"
    ],
    "description": "Code related to character",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:ngrams": {
    "category": "context_clues",
    "keyword": "ngrams",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "generateNGrams"
    ],
    "description": "Code related to ngrams",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:length": {
    "category": "context_clues",
    "keyword": "length",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "generateNGrams"
    ],
    "description": "Code related to length",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:ngram": {
    "category": "context_clues",
    "keyword": "ngram",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "generateNGrams"
    ],
    "description": "Code related to ngram",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "function:calculateLevenshteinDistance": {
    "category": "code_functions",
    "keyword": "calculateLevenshteinDistance",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "calculateLevenshteinDistance"
    ],
    "description": " Calculate Levenshtein distance between two strings  @param {string} str1 - First string @param {string} str2 - Second string @returns {number} Edit distance ",
    "context_weight": 0.9,
    "line_number": 60,
    "body_preview": "const calculateLevenshteinDistance = (str1, str2) => { const a = typeof str1 === \"string\" ? str1 : \"\"; const b = typeof str2 === \"string\" ? str2 : \"\";",
    "context_clues": [
      "calculate",
      "levenshtein",
      "distance",
      "between",
      "strings",
      "param",
      "string",
      "str1",
      "first",
      "str2",
      "second",
      "number",
      "edit",
      "calculatelevenshteindistance",
      "fuzzy"
    ],
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:levenshtein": {
    "category": "context_clues",
    "keyword": "levenshtein",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "calculateLevenshteinDistance"
    ],
    "description": "Code related to levenshtein",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:distance": {
    "category": "context_clues",
    "keyword": "distance",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "calculateLevenshteinDistance"
    ],
    "description": "Code related to distance",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:str1": {
    "category": "context_clues",
    "keyword": "str1",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "calculateLevenshteinDistance"
    ],
    "description": "Code related to str1",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:first": {
    "category": "context_clues",
    "keyword": "first",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "calculateLevenshteinDistance",
      "getCompositionFirstWords",
      "getDisplayComposition",
      "sortInventoryByDateNewestFirst"
    ],
    "description": "Code related to first",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:str2": {
    "category": "context_clues",
    "keyword": "str2",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "calculateLevenshteinDistance"
    ],
    "description": "Code related to str2",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:second": {
    "category": "context_clues",
    "keyword": "second",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "calculateLevenshteinDistance"
    ],
    "description": "Code related to second",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:calculatelevenshteindistance": {
    "category": "context_clues",
    "keyword": "calculatelevenshteindistance",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "calculateLevenshteinDistance"
    ],
    "description": "Code related to calculatelevenshteindistance",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "function:fuzzyMatch": {
    "category": "code_functions",
    "keyword": "fuzzyMatch",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "fuzzyMatch"
    ],
    "description": " Calculates fuzzy similarity between query and target strings  @param {string} query - User search input @param {string} target - Inventory item name to match against @param {Object} [options={}] - Configuration options @param {number} [options.threshold=0.6] - Minimum similarity score @param {boolean} [options.caseSensitive=false] - Case sensitive matching @returns {number} Similarity score between 0 and 1  @example fuzzyMatch(\"Ame\", \"American Silver Eagle\") // returns ~0.7 fuzzyMatch(\"Eagle Amer\", \"American Silver Eagle\") // returns ~0.8 ",
    "context_weight": 0.9,
    "line_number": 99,
    "body_preview": "const fuzzyMatch = (query, target, options = {}) => { try { if (typeof query !== \"string\" || typeof target !== \"string\") {",
    "context_clues": [
      "fuzzy",
      "match",
      "calculates",
      "similarity",
      "between",
      "query",
      "target",
      "strings",
      "param",
      "string",
      "user",
      "search",
      "input",
      "inventory",
      "item"
    ],
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:match": {
    "category": "context_clues",
    "keyword": "match",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "fuzzyMatch"
    ],
    "description": "Code related to match",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.596Z"
  },
  "context:similarity": {
    "category": "context_clues",
    "keyword": "similarity",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "fuzzyMatch"
    ],
    "description": "Code related to similarity",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.597Z"
  },
  "context:query": {
    "category": "context_clues",
    "keyword": "query",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/search.js"
    ],
    "functions": [
      "fuzzyMatch",
      "fuzzySearch",
      "filterInventory"
    ],
    "description": "Code related to query",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.703Z"
  },
  "context:user": {
    "category": "context_clues",
    "keyword": "user",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "fuzzyMatch",
      "importCsv",
      "updateManualSpot",
      "initTheme",
      "getUserFriendlyMessage",
      "createReadline",
      "promptHidden",
      "prompt",
      "checkHasApiKey",
      "getUserPreferences",
      "displayContextSummary"
    ],
    "description": "Code related to user",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "function:fuzzySearch": {
    "category": "code_functions",
    "keyword": "fuzzySearch",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "fuzzySearch"
    ],
    "description": " Search through an array of targets and return fuzzy matches  @param {string} query - Search query @param {string[]} targets - Array of strings to search @param {Object} [options={}] - Configuration options @param {number} [options.threshold=0.6] - Minimum similarity score @param {number} [options.maxResults=Infinity] - Maximum results to return @param {boolean} [options.caseSensitive=false] - Case sensitive matching @returns {{text: string, score: number}[]} Array of results ",
    "context_weight": 0.9,
    "line_number": 179,
    "body_preview": "const fuzzySearch = (query, targets, options = {}) => { if (!Array.isArray(targets)) { console.warn(\"fuzzySearch: targets must be an array\");",
    "context_clues": [
      "fuzzy",
      "search",
      "through",
      "array",
      "targets",
      "return",
      "matches",
      "param",
      "string",
      "query",
      "strings",
      "object",
      "options",
      "configuration",
      "number"
    ],
    "last_updated": "2025-08-20T17:24:09.597Z"
  },
  "context:targets": {
    "category": "context_clues",
    "keyword": "targets",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js"
    ],
    "functions": [
      "fuzzySearch"
    ],
    "description": "Code related to targets",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.597Z"
  },
  "context:return": {
    "category": "context_clues",
    "keyword": "return",
    "files": [
      "rProjects/StackTrackr/js/fuzzy-search.js",
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "fuzzySearch",
      "getDockerPersistenceInstructions"
    ],
    "description": "Code related to return",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "function:createDummyElement": {
    "category": "code_functions",
    "keyword": "createDummyElement",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "createDummyElement"
    ],
    "description": "INITIALIZATION - FIXED VERSION =============================================================================  Helper function to create dummy DOM elements to prevent null reference errors @returns {Object} A dummy element object with basic properties ",
    "context_weight": 0.9,
    "line_number": 8,
    "body_preview": "function createDummyElement() { return { textContent: \"\",",
    "context_clues": [
      "create",
      "dummy",
      "element",
      "initialization",
      "fixed",
      "version",
      "helper",
      "elements",
      "prevent",
      "null",
      "reference",
      "errors",
      "object",
      "with",
      "basic"
    ],
    "last_updated": "2025-08-20T17:24:09.607Z"
  },
  "context:dummy": {
    "category": "context_clues",
    "keyword": "dummy",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "createDummyElement",
      "safeGetElement"
    ],
    "description": "Code related to dummy",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "context:helper": {
    "category": "context_clues",
    "keyword": "helper",
    "files": [
      "rProjects/StackTrackr/js/init.js",
      "rProjects/VulnTrackr/app.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "createDummyElement",
      "colIndexToLetter",
      "_update_memory_item"
    ],
    "description": "Code related to helper",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:reference": {
    "category": "context_clues",
    "keyword": "reference",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "createDummyElement"
    ],
    "description": "Code related to reference",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.607Z"
  },
  "context:errors": {
    "category": "context_clues",
    "keyword": "errors",
    "files": [
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "createDummyElement",
      "validateInventoryItem",
      "handleError"
    ],
    "description": "Code related to errors",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:basic": {
    "category": "context_clues",
    "keyword": "basic",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "createDummyElement",
      "setupBasicEventListeners"
    ],
    "description": "Code related to basic",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "file:init.js": {
    "category": "file_relationships",
    "keyword": "init.js",
    "primary_file": "rProjects/StackTrackr/js/init.js",
    "functions": [
      "createDummyElement",
      "safeGetElement",
      "setupBasicEventListeners"
    ],
    "description": "File containing createDummyElement and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.057Z"
  },
  "function:safeGetElement": {
    "category": "code_functions",
    "keyword": "safeGetElement",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "safeGetElement"
    ],
    "description": " Safely retrieves a DOM element by ID with fallback to dummy element @param {string} id - Element ID @param {boolean} required - Whether to log warning if element missing @returns {HTMLElement|Object} Element or dummy element ",
    "context_weight": 0.9,
    "line_number": 31,
    "body_preview": "function safeGetElement(id, required = false) { const element = document.getElementById(id); if (!element && required) {",
    "context_clues": [
      "safe",
      "get",
      "element",
      "safely",
      "retrieves",
      "with",
      "fallback",
      "dummy",
      "param",
      "string",
      "boolean",
      "required",
      "whether",
      "warning",
      "missing"
    ],
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "context:safely": {
    "category": "context_clues",
    "keyword": "safely",
    "files": [
      "rProjects/StackTrackr/js/init.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "safeGetElement",
      "closeModalById"
    ],
    "description": "Code related to safely",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:retrieves": {
    "category": "context_clues",
    "keyword": "retrieves",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "safeGetElement"
    ],
    "description": "Code related to retrieves",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "context:required": {
    "category": "context_clues",
    "keyword": "required",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "safeGetElement"
    ],
    "description": "Code related to required",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "context:warning": {
    "category": "context_clues",
    "keyword": "warning",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "safeGetElement"
    ],
    "description": "Code related to warning",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "context:missing": {
    "category": "context_clues",
    "keyword": "missing",
    "files": [
      "rProjects/StackTrackr/js/init.js",
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "safeGetElement",
      "displayLatestResults"
    ],
    "description": "Code related to missing",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.828Z"
  },
  "function:setupBasicEventListeners": {
    "category": "code_functions",
    "keyword": "setupBasicEventListeners",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "setupBasicEventListeners"
    ],
    "description": " Basic event listener setup as fallback ",
    "context_weight": 0.9,
    "line_number": 472,
    "body_preview": "function setupBasicEventListeners() { debugLog(\"Setting up basic event listeners as fallback...\"); // Files button",
    "context_clues": [
      "setup",
      "basic",
      "event",
      "listeners",
      "listener",
      "fallback",
      "setupbasiceventlisteners",
      "setting",
      "getelementbyid",
      "init"
    ],
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "context:setupbasiceventlisteners": {
    "category": "context_clues",
    "keyword": "setupbasiceventlisteners",
    "files": [
      "rProjects/StackTrackr/js/init.js"
    ],
    "functions": [
      "setupBasicEventListeners"
    ],
    "description": "Code related to setupbasiceventlisteners",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.608Z"
  },
  "function:optimizeStoragePhase1C": {
    "category": "code_functions",
    "keyword": "optimizeStoragePhase1C",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "optimizeStoragePhase1C"
    ],
    "description": " Phase 1C: Storage optimization and housekeeping ",
    "context_weight": 0.9,
    "line_number": 2414,
    "body_preview": "function optimizeStoragePhase1C(){ try{ if (typeof catalogManager !== 'undefined' && catalogManager && typeof catalogManager.removeOrphanedMappings === 'function'){",
    "context_clues": [
      "optimize",
      "storage",
      "phase1",
      "phase",
      "optimization",
      "housekeeping",
      "removeorphanedmappings",
      "generatestoragereport",
      "initializestoragechart",
      "init",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.623Z"
  },
  "context:optimize": {
    "category": "context_clues",
    "keyword": "optimize",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "optimizeStoragePhase1C"
    ],
    "description": "Code related to optimize",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.623Z"
  },
  "context:storage": {
    "category": "context_clues",
    "keyword": "storage",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "optimizeStoragePhase1C",
      "formatStorageLocation",
      "initializeStorageChart",
      "getStorageItemDisplayName",
      "generateStorageReport",
      "saveData",
      "loadData",
      "cleanupStorage",
      "updateStorageStats",
      "downloadStorageReport",
      "openStorageReportPopup",
      "generateStorageReportHTML",
      "analyzeStorageData",
      "analyzeStorageItem",
      "getStorageItemDescription",
      "createStorageItemModal",
      "generateItemDataTable",
      "getStorageReportCSS",
      "getStorageReportJS",
      "generateStorageReportTar",
      "initLocalStorage"
    ],
    "description": "Code related to storage",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:phase1": {
    "category": "context_clues",
    "keyword": "phase1",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "optimizeStoragePhase1C"
    ],
    "description": "Code related to phase1",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.623Z"
  },
  "context:phase": {
    "category": "context_clues",
    "keyword": "phase",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "optimizeStoragePhase1C"
    ],
    "description": "Code related to phase",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.623Z"
  },
  "context:optimization": {
    "category": "context_clues",
    "keyword": "optimization",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "optimizeStoragePhase1C"
    ],
    "description": "Code related to optimization",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.623Z"
  },
  "context:housekeeping": {
    "category": "context_clues",
    "keyword": "housekeeping",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "optimizeStoragePhase1C"
    ],
    "description": "Code related to housekeeping",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.623Z"
  },
  "context:removeorphanedmappings": {
    "category": "context_clues",
    "keyword": "removeorphanedmappings",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "optimizeStoragePhase1C"
    ],
    "description": "Code related to removeorphanedmappings",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.623Z"
  },
  "context:generatestoragereport": {
    "category": "context_clues",
    "keyword": "generatestoragereport",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "optimizeStoragePhase1C",
      "generateStorageReport"
    ],
    "description": "Code related to generatestoragereport",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:initializestoragechart": {
    "category": "context_clues",
    "keyword": "initializestoragechart",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "optimizeStoragePhase1C",
      "toggleTheme",
      "initializeStorageChart"
    ],
    "description": "Code related to initializestoragechart",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.767Z"
  },
  "file:inventory.js": {
    "category": "file_relationships",
    "keyword": "inventory.js",
    "primary_file": "rProjects/StackTrackr/js/inventory.js",
    "functions": [
      "optimizeStoragePhase1C",
      "createBackupZip",
      "restoreBackupZip",
      "generateBackupHtml",
      "generateReadmeContent",
      "getNextSerial",
      "saveInventory",
      "sanitizeTablesOnLoad",
      "loadInventory",
      "getColor",
      "escapeAttribute",
      "filterLink",
      "formatPurchaseLocation",
      "formatStorageLocation",
      "recalcItem",
      "persistInventoryAndRefresh",
      "updateItemCount",
      "validateFieldValue",
      "startCellEdit",
      "cancelEdit",
      "renderCell",
      "updateTypeSummary",
      "hideEmptyColumns",
      "renderTable",
      "updateSummary",
      "calculateTotals",
      "deleteItem",
      "showNotes",
      "editItem",
      "toggleCollectable",
      "togglePriceView",
      "toggleGlobalPriceView",
      "startImportProgress",
      "updateImportProgress",
      "endImportProgress",
      "importCsv",
      "importNumistaCsv",
      "getValue",
      "parsePriceField",
      "exportNumistaCsv",
      "exportCsv",
      "importJson",
      "exportJson",
      "exportPdf"
    ],
    "description": "File containing optimizeStoragePhase1C and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.085Z"
  },
  "function:createBackupZip": {
    "category": "code_functions",
    "keyword": "createBackupZip",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "createBackupZip"
    ],
    "description": "INVENTORY FUNCTIONS  Creates a comprehensive backup ZIP file containing all application data  This function generates a complete backup archive including: - Current inventory data in JSON format - All export formats (CSV, HTML) - Application settings and configuration - Spot price history - README file explaining backup contents  The backup is packaged as a ZIP file for easy storage and portability. All data is exported in multiple formats to ensure compatibility and provide redundancy for data recovery scenarios.  @returns {void} Downloads a ZIP file containing complete backup  @example Called to generate a complete backup archive await createBackupZip(); ",
    "context_weight": 0.9,
    "line_number": 22,
    "body_preview": "const createBackupZip = async () => { try { // Show loading indicator",
    "context_clues": [
      "create",
      "backup",
      "zip",
      "inventory",
      "functions",
      "creates",
      "comprehensive",
      "file",
      "containing",
      "application",
      "data",
      "this",
      "generates",
      "complete",
      "archive"
    ],
    "last_updated": "2025-08-20T17:24:09.623Z"
  },
  "context:zip": {
    "category": "context_clues",
    "keyword": "zip",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "createBackupZip",
      "restoreBackupZip"
    ],
    "description": "Code related to zip",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "context:comprehensive": {
    "category": "context_clues",
    "keyword": "comprehensive",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "createBackupZip",
      "loadInventory",
      "validateFieldValue",
      "importCsv",
      "generateStorageReportHTML",
      "generateStorageReportTar"
    ],
    "description": "Code related to comprehensive",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.792Z"
  },
  "context:archive": {
    "category": "context_clues",
    "keyword": "archive",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "createBackupZip",
      "generateReadmeContent"
    ],
    "description": "Code related to archive",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "function:restoreBackupZip": {
    "category": "code_functions",
    "keyword": "restoreBackupZip",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "restoreBackupZip"
    ],
    "description": " Restores application data from a backup ZIP file  @param {File} file - ZIP file created by createBackupZip ",
    "context_weight": 0.9,
    "line_number": 186,
    "body_preview": "const restoreBackupZip = async (file) => { try { const zip = await JSZip.loadAsync(file);",
    "context_clues": [
      "restore",
      "backup",
      "zip",
      "restores",
      "application",
      "data",
      "from",
      "file",
      "param",
      "created",
      "createbackupzip",
      "loadasync",
      "parse",
      "setitem",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "context:restore": {
    "category": "context_clues",
    "keyword": "restore",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "restoreBackupZip",
      "restore_from_backup"
    ],
    "description": "Code related to restore",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.994Z"
  },
  "context:restores": {
    "category": "context_clues",
    "keyword": "restores",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "restoreBackupZip"
    ],
    "description": "Code related to restores",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "context:created": {
    "category": "context_clues",
    "keyword": "created",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "restoreBackupZip",
      "generateReadmeContent"
    ],
    "description": "Code related to created",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "context:createbackupzip": {
    "category": "context_clues",
    "keyword": "createbackupzip",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "restoreBackupZip"
    ],
    "description": "Code related to createbackupzip",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "context:loadasync": {
    "category": "context_clues",
    "keyword": "loadasync",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "restoreBackupZip"
    ],
    "description": "Code related to loadasync",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "function:generateBackupHtml": {
    "category": "code_functions",
    "keyword": "generateBackupHtml",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "generateBackupHtml"
    ],
    "description": " Generates HTML content for backup export  @param {Array} sortedInventory - Sorted inventory data @param {string} timeFormatted - Formatted timestamp @returns {string} HTML content ",
    "context_weight": 0.9,
    "line_number": 252,
    "body_preview": "const generateBackupHtml = (sortedInventory, timeFormatted) => { return `<!DOCTYPE html> <html lang=\"en\">",
    "context_clues": [
      "generate",
      "backup",
      "html",
      "generates",
      "content",
      "export",
      "param",
      "array",
      "sortedinventory",
      "sorted",
      "inventory",
      "data",
      "string",
      "timeformatted",
      "formatted"
    ],
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "context:content": {
    "category": "context_clues",
    "keyword": "content",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "generateBackupHtml",
      "generateReadmeContent",
      "generateDetailContent",
      "getCompositionFirstWords",
      "downloadFile",
      "analyzeStorageItem",
      "populateVersionModal"
    ],
    "description": "Code related to content",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:sortedinventory": {
    "category": "context_clues",
    "keyword": "sortedinventory",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "generateBackupHtml",
      "renderTable",
      "exportJson",
      "exportPdf"
    ],
    "description": "Code related to sortedinventory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.641Z"
  },
  "context:sorted": {
    "category": "context_clues",
    "keyword": "sorted",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateBackupHtml",
      "refreshCompositionOptions",
      "sortInventoryByDateNewestFirst"
    ],
    "description": "Code related to sorted",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:timeformatted": {
    "category": "context_clues",
    "keyword": "timeformatted",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "generateBackupHtml",
      "generateReadmeContent"
    ],
    "description": "Code related to timeformatted",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "function:generateReadmeContent": {
    "category": "code_functions",
    "keyword": "generateReadmeContent",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "generateReadmeContent"
    ],
    "description": " Generates README content for backup archive  @param {string} timeFormatted - Formatted timestamp @returns {string} README content ",
    "context_weight": 0.9,
    "line_number": 312,
    "body_preview": "const generateReadmeContent = (timeFormatted) => { return `PRECIOUS METALS INVENTORY TOOL - BACKUP ARCHIVE ===============================================",
    "context_clues": [
      "generate",
      "readme",
      "content",
      "generates",
      "backup",
      "archive",
      "param",
      "string",
      "timeformatted",
      "formatted",
      "timestamp",
      "generatereadmecontent",
      "created",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "context:timestamp": {
    "category": "context_clues",
    "keyword": "timestamp",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateReadmeContent",
      "updateSpotTimestamp"
    ],
    "description": "Code related to timestamp",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:generatereadmecontent": {
    "category": "context_clues",
    "keyword": "generatereadmecontent",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "generateReadmeContent"
    ],
    "description": "Code related to generatereadmecontent",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.624Z"
  },
  "function:getNextSerial": {
    "category": "code_functions",
    "keyword": "getNextSerial",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "============================================================================= Note: catalogMap is now managed by catalogManager class No need for the global catalogMap variable anymore",
    "context_weight": 0.9,
    "line_number": 390,
    "body_preview": "const getNextSerial = () => { const next = (parseInt(localStorage.getItem(SERIAL_KEY) || '0', 10) + 1); localStorage.setItem(SERIAL_KEY, next);",
    "context_clues": [
      "get",
      "next",
      "serial",
      "note",
      "catalogmap",
      "managed",
      "catalogmanager",
      "class",
      "need",
      "global",
      "variable",
      "anymore",
      "getnextserial",
      "parseint",
      "getitem"
    ],
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:next": {
    "category": "context_clues",
    "keyword": "next",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "Code related to next",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:serial": {
    "category": "context_clues",
    "keyword": "serial",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "Code related to serial",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:note": {
    "category": "context_clues",
    "keyword": "note",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "Code related to note",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:catalogmap": {
    "category": "context_clues",
    "keyword": "catalogmap",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "Code related to catalogmap",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:catalogmanager": {
    "category": "context_clues",
    "keyword": "catalogmanager",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "Code related to catalogmanager",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:class": {
    "category": "context_clues",
    "keyword": "class",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "Code related to class",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:need": {
    "category": "context_clues",
    "keyword": "need",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "Code related to need",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:anymore": {
    "category": "context_clues",
    "keyword": "anymore",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "Code related to anymore",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:getnextserial": {
    "category": "context_clues",
    "keyword": "getnextserial",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getNextSerial"
    ],
    "description": "Code related to getnextserial",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "function:saveInventory": {
    "category": "code_functions",
    "keyword": "saveInventory",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "saveInventory"
    ],
    "description": " Saves current inventory to localStorage ",
    "context_weight": 0.9,
    "line_number": 400,
    "body_preview": "const saveInventory = () => { saveData(LS_KEY, inventory); // CatalogManager handles its own saving, no need to explicitly save catalogMap",
    "context_clues": [
      "save",
      "inventory",
      "saves",
      "current",
      "localstorage",
      "saveinventory",
      "savedata",
      "handles",
      "removes"
    ],
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:saveinventory": {
    "category": "context_clues",
    "keyword": "saveinventory",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "saveInventory",
      "persistInventoryAndRefresh",
      "deleteItem"
    ],
    "description": "Code related to saveinventory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:savedata": {
    "category": "context_clues",
    "keyword": "savedata",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveInventory",
      "saveData"
    ],
    "description": "Code related to savedata",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "function:sanitizeTablesOnLoad": {
    "category": "code_functions",
    "keyword": "sanitizeTablesOnLoad",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "sanitizeTablesOnLoad"
    ],
    "description": " Removes non-alphanumeric characters from inventory records.  @returns {void} ",
    "context_weight": 0.9,
    "line_number": 410,
    "body_preview": "const sanitizeTablesOnLoad = () => { inventory = inventory.map(item => sanitizeObjectFields(item)); };",
    "context_clues": [
      "sanitize",
      "tables",
      "load",
      "removes",
      "nonalphanumeric",
      "characters",
      "from",
      "inventory",
      "records",
      "void",
      "loads",
      "handles",
      "loading"
    ],
    "last_updated": "2025-08-20T17:24:09.625Z"
  },
  "context:sanitize": {
    "category": "context_clues",
    "keyword": "sanitize",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeTablesOnLoad",
      "sanitizeHtml",
      "sanitizeObjectFields",
      "sanitizeImportedItem"
    ],
    "description": "Code related to sanitize",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:nonalphanumeric": {
    "category": "context_clues",
    "keyword": "nonalphanumeric",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeTablesOnLoad",
      "stripNonAlphanumeric",
      "sanitizeObjectFields"
    ],
    "description": "Code related to nonalphanumeric",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "function:loadInventory": {
    "category": "code_functions",
    "keyword": "loadInventory",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "loadInventory"
    ],
    "description": " Loads inventory from localStorage with comprehensive data migration  This function handles backwards compatibility by: - Loading existing inventory data from localStorage - Migrating legacy records that may be missing newer fields - Calculating premiums for older records that lack this data - Ensuring all records have required fields with sensible defaults - Preserving existing user data while adding new functionality  @returns {void} Updates the global inventory array with migrated data @throws {Error} Logs errors to console if localStorage access fails ",
    "context_weight": 0.9,
    "line_number": 428,
    "body_preview": "const loadInventory = () => { try { // For now, use synchronous loading to maintain compatibility",
    "context_clues": [
      "load",
      "inventory",
      "loads",
      "from",
      "localstorage",
      "with",
      "comprehensive",
      "data",
      "migration",
      "this",
      "handles",
      "backwards",
      "compatibility",
      "loading",
      "existing"
    ],
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:migration": {
    "category": "context_clues",
    "keyword": "migration",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "loadInventory"
    ],
    "description": "Code related to migration",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:backwards": {
    "category": "context_clues",
    "keyword": "backwards",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "loadInventory"
    ],
    "description": "Code related to backwards",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "function:getColor": {
    "category": "code_functions",
    "keyword": "getColor",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getColor"
    ],
    "description": "Function getColor in inventory.js",
    "context_weight": 0.9,
    "line_number": 553,
    "body_preview": "const getColor = (map, key) => { if (!(key in map)) { // Use a simple hash function based on the key itself to ensure consistent colors",
    "context_clues": [
      "get",
      "color",
      "getcolor",
      "convert",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:getcolor": {
    "category": "context_clues",
    "keyword": "getcolor",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getColor"
    ],
    "description": "Code related to getcolor",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "function:escapeAttribute": {
    "category": "code_functions",
    "keyword": "escapeAttribute",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "escapeAttribute"
    ],
    "description": " Escapes special characters for safe inclusion in HTML attributes @param {string} text - Text to escape @returns {string} Escaped text safe for attribute usage ",
    "context_weight": 0.9,
    "line_number": 574,
    "body_preview": "const escapeAttribute = (text) => text .toString()",
    "context_clues": [
      "escape",
      "attribute",
      "escapes",
      "special",
      "characters",
      "safe",
      "inclusion",
      "html",
      "attributes",
      "param",
      "string",
      "text",
      "escaped",
      "usage",
      "filterlink"
    ],
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:escape": {
    "category": "context_clues",
    "keyword": "escape",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "escapeAttribute"
    ],
    "description": "Code related to escape",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:attribute": {
    "category": "context_clues",
    "keyword": "attribute",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "escapeAttribute"
    ],
    "description": "Code related to attribute",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:escapes": {
    "category": "context_clues",
    "keyword": "escapes",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "escapeAttribute"
    ],
    "description": "Code related to escapes",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:inclusion": {
    "category": "context_clues",
    "keyword": "inclusion",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "escapeAttribute"
    ],
    "description": "Code related to inclusion",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:attributes": {
    "category": "context_clues",
    "keyword": "attributes",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "escapeAttribute"
    ],
    "description": "Code related to attributes",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:escaped": {
    "category": "context_clues",
    "keyword": "escaped",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "escapeAttribute"
    ],
    "description": "Code related to escaped",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:filterlink": {
    "category": "context_clues",
    "keyword": "filterlink",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "escapeAttribute",
      "filterLink",
      "renderCell"
    ],
    "description": "Code related to filterlink",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "function:filterLink": {
    "category": "code_functions",
    "keyword": "filterLink",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "filterLink"
    ],
    "description": "Function filterLink in inventory.js",
    "context_weight": 0.9,
    "line_number": 583,
    "body_preview": "const filterLink = (field, value, color, displayValue = value, title, allowHtml = false) => { const handler = `applyColumnFilter('${field}', ${JSON.stringify(value)})`; // Escape characters for safe inline handler usage",
    "context_clues": [
      "filter",
      "link",
      "filterlink",
      "handler",
      "import",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:link": {
    "category": "context_clues",
    "keyword": "link",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "filterLink"
    ],
    "description": "Code related to link",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.626Z"
  },
  "context:handler": {
    "category": "context_clues",
    "keyword": "handler",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "filterLink",
      "openModalById"
    ],
    "description": "Code related to handler",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "function:formatPurchaseLocation": {
    "category": "code_functions",
    "keyword": "formatPurchaseLocation",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "formatPurchaseLocation"
    ],
    "description": " Formats Purchase Location for table display, wrapping URLs in hyperlinks while preserving filter behavior.  @param {string} loc - Purchase location value @returns {string} HTML string for table cell ",
    "context_weight": 0.9,
    "line_number": 609,
    "body_preview": "const formatPurchaseLocation = (loc) => { let value = loc || '—'; // Convert \"Numista Import\" and \"Unknown\" to \"—\"",
    "context_clues": [
      "format",
      "purchase",
      "location",
      "formats",
      "table",
      "display",
      "wrapping",
      "urls",
      "hyperlinks",
      "while",
      "preserving",
      "filter",
      "behavior",
      "param",
      "string"
    ],
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "context:format": {
    "category": "context_clues",
    "keyword": "format",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "formatPurchaseLocation",
      "formatStorageLocation",
      "exportCsv",
      "exportJson",
      "exportPdf",
      "parseDate",
      "getContrastColor",
      "pad2",
      "todayStr",
      "currentMonthKey",
      "formatDisplayDate",
      "formatCurrency",
      "formatLossProfit",
      "formatWeight",
      "validateApiKey",
      "formatResults"
    ],
    "description": "Code related to format",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:purchase": {
    "category": "context_clues",
    "keyword": "purchase",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "formatPurchaseLocation",
      "togglePriceView"
    ],
    "description": "Code related to purchase",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "context:formats": {
    "category": "context_clues",
    "keyword": "formats",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "formatPurchaseLocation",
      "formatStorageLocation",
      "parseDate",
      "formatDisplayDate",
      "formatCurrency",
      "formatLossProfit",
      "formatWeight",
      "regenerateFormats"
    ],
    "description": "Code related to formats",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.378Z"
  },
  "context:wrapping": {
    "category": "context_clues",
    "keyword": "wrapping",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "formatPurchaseLocation"
    ],
    "description": "Code related to wrapping",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "context:urls": {
    "category": "context_clues",
    "keyword": "urls",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "formatPurchaseLocation"
    ],
    "description": "Code related to urls",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "context:hyperlinks": {
    "category": "context_clues",
    "keyword": "hyperlinks",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "formatPurchaseLocation"
    ],
    "description": "Code related to hyperlinks",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "context:while": {
    "category": "context_clues",
    "keyword": "while",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatPurchaseLocation",
      "getCompositionFirstWords",
      "cleanString"
    ],
    "description": "Code related to while",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:preserving": {
    "category": "context_clues",
    "keyword": "preserving",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatPurchaseLocation",
      "stripNonAlphanumeric",
      "cleanString"
    ],
    "description": "Code related to preserving",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "function:formatStorageLocation": {
    "category": "code_functions",
    "keyword": "formatStorageLocation",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "formatStorageLocation"
    ],
    "description": " Formats Storage Location for table display with truncation @param {string} loc - Storage location value @returns {string} HTML string for table cell ",
    "context_weight": 0.9,
    "line_number": 644,
    "body_preview": "const formatStorageLocation = (loc) => { let value = loc || '—'; // Convert \"Numista Import\" and \"Unknown\" to \"—\"",
    "context_clues": [
      "format",
      "storage",
      "location",
      "formats",
      "table",
      "display",
      "with",
      "truncation",
      "param",
      "string",
      "value",
      "html",
      "cell",
      "convert",
      "import"
    ],
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "function:recalcItem": {
    "category": "code_functions",
    "keyword": "recalcItem",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "recalcItem"
    ],
    "description": " Recalculates premium values for an inventory item @param {Object} item - Inventory item to update ",
    "context_weight": 0.9,
    "line_number": 662,
    "body_preview": "const recalcItem = (item) => { if (item.isCollectable) { item.premiumPerOz = 0;",
    "context_clues": [
      "recalc",
      "item",
      "recalculates",
      "premium",
      "values",
      "inventory",
      "param",
      "object",
      "update",
      "parsefloat"
    ],
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "context:recalc": {
    "category": "context_clues",
    "keyword": "recalc",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "recalcItem"
    ],
    "description": "Code related to recalc",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.627Z"
  },
  "context:recalculates": {
    "category": "context_clues",
    "keyword": "recalculates",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "recalcItem"
    ],
    "description": "Code related to recalculates",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.628Z"
  },
  "context:premium": {
    "category": "context_clues",
    "keyword": "premium",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "recalcItem"
    ],
    "description": "Code related to premium",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.628Z"
  },
  "context:parsefloat": {
    "category": "context_clues",
    "keyword": "parsefloat",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "recalcItem",
      "parsePriceField",
      "fetchSpotPrice",
      "formatCurrency",
      "oztToGrams",
      "formatWeight",
      "toNumber"
    ],
    "description": "Code related to parsefloat",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.842Z"
  },
  "function:persistInventoryAndRefresh": {
    "category": "code_functions",
    "keyword": "persistInventoryAndRefresh",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "persistInventoryAndRefresh"
    ],
    "description": " Saves inventory and refreshes table display ",
    "context_weight": 0.9,
    "line_number": 680,
    "body_preview": "const persistInventoryAndRefresh = () => { saveInventory(); renderTable();",
    "context_clues": [
      "persist",
      "inventory",
      "and",
      "refresh",
      "saves",
      "refreshes",
      "table",
      "display",
      "saveinventory",
      "updates",
      "filters",
      "filteredcount"
    ],
    "last_updated": "2025-08-20T17:24:09.628Z"
  },
  "context:persist": {
    "category": "context_clues",
    "keyword": "persist",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "persistInventoryAndRefresh"
    ],
    "description": "Code related to persist",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.628Z"
  },
  "context:and": {
    "category": "context_clues",
    "keyword": "and",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "persistInventoryAndRefresh",
      "commit_and_push"
    ],
    "description": "Code related to and",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.965Z"
  },
  "context:filteredcount": {
    "category": "context_clues",
    "keyword": "filteredcount",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "persistInventoryAndRefresh",
      "updateItemCount"
    ],
    "description": "Code related to filteredcount",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.629Z"
  },
  "function:updateItemCount": {
    "category": "code_functions",
    "keyword": "updateItemCount",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateItemCount"
    ],
    "description": " Updates the displayed inventory item count based on active filters  @param {number} filteredCount - Items matching current filters @param {number} totalCount - Total items in inventory ",
    "context_weight": 0.9,
    "line_number": 691,
    "body_preview": "const updateItemCount = (filteredCount, totalCount) => { if (!elements.itemCount) return; elements.itemCount.textContent =",
    "context_clues": [
      "update",
      "item",
      "count",
      "updates",
      "displayed",
      "inventory",
      "based",
      "active",
      "filters",
      "param",
      "number",
      "filteredcount",
      "items",
      "matching",
      "current"
    ],
    "last_updated": "2025-08-20T17:24:09.629Z"
  },
  "context:displayed": {
    "category": "context_clues",
    "keyword": "displayed",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateItemCount"
    ],
    "description": "Code related to displayed",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.629Z"
  },
  "function:validateFieldValue": {
    "category": "code_functions",
    "keyword": "validateFieldValue",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "validateFieldValue"
    ],
    "description": " Enhanced validation for inline edits with comprehensive field support @param {string} field - Field being edited @param {string} value - Proposed value @returns {boolean} Whether value is valid ",
    "context_weight": 0.9,
    "line_number": 705,
    "body_preview": "const validateFieldValue = (field, value) => { const trimmedValue = typeof value === 'string' ? value.trim() : String(value).trim(); switch (field) {",
    "context_clues": [
      "validate",
      "field",
      "value",
      "enhanced",
      "validation",
      "inline",
      "edits",
      "with",
      "comprehensive",
      "support",
      "param",
      "string",
      "being",
      "edited",
      "proposed"
    ],
    "last_updated": "2025-08-20T17:24:09.630Z"
  },
  "context:validate": {
    "category": "context_clues",
    "keyword": "validate",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rEngine/validate_schema.py",
      "rAgents/rLegacy/engine/validate_schema.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rScripts/deploy_agent_system.py",
      "rAgents/rTemplates/bootstrap_agent_system.py",
      "rEngine/configure-apis.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "validateFieldValue",
      "checkFileSize",
      "validateInventoryItem",
      "__init__",
      "load_schema",
      "validate_file",
      "main",
      "validate_snapshot",
      "backup_database",
      "validate_database_schema",
      "validateApiKey",
      "quickSetup",
      "validateMemory"
    ],
    "description": "Code related to validate",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "context:validation": {
    "category": "context_clues",
    "keyword": "validation",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "validateFieldValue",
      "importCsv",
      "validateInventoryItem"
    ],
    "description": "Code related to validation",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:inline": {
    "category": "context_clues",
    "keyword": "inline",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "validateFieldValue",
      "startCellEdit"
    ],
    "description": "Code related to inline",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "context:edits": {
    "category": "context_clues",
    "keyword": "edits",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "validateFieldValue"
    ],
    "description": "Code related to edits",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.630Z"
  },
  "context:support": {
    "category": "context_clues",
    "keyword": "support",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "validateFieldValue",
      "startCellEdit",
      "generateStorageReportHTML",
      "getStorageReportCSS",
      "getStorageReportJS"
    ],
    "description": "Code related to support",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:being": {
    "category": "context_clues",
    "keyword": "being",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "validateFieldValue"
    ],
    "description": "Code related to being",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.630Z"
  },
  "context:edited": {
    "category": "context_clues",
    "keyword": "edited",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "validateFieldValue"
    ],
    "description": "Code related to edited",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.630Z"
  },
  "context:proposed": {
    "category": "context_clues",
    "keyword": "proposed",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "validateFieldValue"
    ],
    "description": "Code related to proposed",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.630Z"
  },
  "function:startCellEdit": {
    "category": "code_functions",
    "keyword": "startCellEdit",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "startCellEdit"
    ],
    "description": " Enhanced inline editing for table cells with support for multiple field types @param {number} idx - Index of item to edit @param {string} field - Field name to update @param {HTMLElement} icon - Clicked pencil icon ",
    "context_weight": 0.9,
    "line_number": 760,
    "body_preview": "const startCellEdit = (idx, field, icon) => { const td = icon.closest('td'); const item = inventory[idx];",
    "context_clues": [
      "start",
      "cell",
      "edit",
      "enhanced",
      "inline",
      "editing",
      "table",
      "cells",
      "with",
      "support",
      "multiple",
      "field",
      "types",
      "param",
      "number"
    ],
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "context:editing": {
    "category": "context_clues",
    "keyword": "editing",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "startCellEdit"
    ],
    "description": "Code related to editing",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "context:cells": {
    "category": "context_clues",
    "keyword": "cells",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "startCellEdit"
    ],
    "description": "Code related to cells",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "function:cancelEdit": {
    "category": "code_functions",
    "keyword": "cancelEdit",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "cancelEdit"
    ],
    "description": "Function cancelEdit in inventory.js",
    "context_weight": 0.9,
    "line_number": 849,
    "body_preview": "const cancelEdit = () => { td.classList.remove('editing'); td.innerHTML = originalContent;",
    "context_clues": [
      "cancel",
      "edit",
      "remove",
      "startcelledit",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "context:cancel": {
    "category": "context_clues",
    "keyword": "cancel",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "cancelEdit"
    ],
    "description": "Code related to cancel",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "context:startcelledit": {
    "category": "context_clues",
    "keyword": "startcelledit",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "cancelEdit",
      "renderCell"
    ],
    "description": "Code related to startcelledit",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "function:renderCell": {
    "category": "code_functions",
    "keyword": "renderCell",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "renderCell"
    ],
    "description": "Function renderCell in inventory.js",
    "context_weight": 0.9,
    "line_number": 854,
    "body_preview": "const renderCell = () => { td.classList.remove('editing'); const iconHtml = `<span class=\"inline-edit-icon\" role=\"button\" tabindex=\"0\" onclick=\"startCellEdit(${idx}, '${field}', this)\" aria-label=\"Edit ${field}\" title=\"Edit ${field}\">✎</span>`;",
    "context_clues": [
      "render",
      "cell",
      "remove",
      "startcelledit",
      "filterlink",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.631Z"
  },
  "function:updateTypeSummary": {
    "category": "code_functions",
    "keyword": "updateTypeSummary",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateTypeSummary"
    ],
    "description": " Legacy chip-type filter system - now disabled in favor of renderActiveFilters This function now just clears the typeSummary container to avoid conflicts ",
    "context_weight": 0.9,
    "line_number": 1000,
    "body_preview": "const updateTypeSummary = (items = inventory) => { const el = elements.typeSummary || document.getElementById('typeSummary'); if (!el) return;",
    "context_clues": [
      "update",
      "type",
      "summary",
      "legacy",
      "chiptype",
      "filter",
      "system",
      "disabled",
      "favor",
      "renderactivefilters",
      "this",
      "just",
      "clears",
      "typesummary",
      "container"
    ],
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:chiptype": {
    "category": "context_clues",
    "keyword": "chiptype",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateTypeSummary"
    ],
    "description": "Code related to chiptype",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:disabled": {
    "category": "context_clues",
    "keyword": "disabled",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateTypeSummary"
    ],
    "description": "Code related to disabled",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:favor": {
    "category": "context_clues",
    "keyword": "favor",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateTypeSummary"
    ],
    "description": "Code related to favor",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:renderactivefilters": {
    "category": "context_clues",
    "keyword": "renderactivefilters",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateTypeSummary"
    ],
    "description": "Code related to renderactivefilters",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:just": {
    "category": "context_clues",
    "keyword": "just",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateTypeSummary"
    ],
    "description": "Code related to just",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:typesummary": {
    "category": "context_clues",
    "keyword": "typesummary",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateTypeSummary"
    ],
    "description": "Code related to typesummary",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "function:hideEmptyColumns": {
    "category": "code_functions",
    "keyword": "hideEmptyColumns",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "hideEmptyColumns"
    ],
    "description": " Hides table columns that contain no data after filtering. ",
    "context_weight": 0.9,
    "line_number": 1012,
    "body_preview": "const hideEmptyColumns = () => { if (typeof document === 'undefined') return; const headers = document.querySelectorAll('#inventoryTable thead th[data-column]');",
    "context_clues": [
      "hide",
      "empty",
      "columns",
      "hides",
      "table",
      "that",
      "contain",
      "data",
      "after",
      "filtering",
      "getattribute",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:contain": {
    "category": "context_clues",
    "keyword": "contain",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "hideEmptyColumns"
    ],
    "description": "Code related to contain",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "function:renderTable": {
    "category": "code_functions",
    "keyword": "renderTable",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "renderTable"
    ],
    "description": "Function renderTable in app.js",
    "context_weight": 0.9,
    "line_number": 58,
    "body_preview": "function renderTable(results, opts = {previewRows:10}) { const table = document.getElementById('table'); table.innerHTML = '';",
    "context_clues": [
      "render",
      "table",
      "getelementbyid",
      "createelement",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.842Z"
  },
  "context:filteredinventory": {
    "category": "context_clues",
    "keyword": "filteredinventory",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "renderTable"
    ],
    "description": "Code related to filteredinventory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:updateitemcount": {
    "category": "context_clues",
    "keyword": "updateitemcount",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "renderTable"
    ],
    "description": "Code related to updateitemcount",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:sortinventory": {
    "category": "context_clues",
    "keyword": "sortinventory",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "renderTable"
    ],
    "description": "Code related to sortinventory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:calculatetotalpages": {
    "category": "context_clues",
    "keyword": "calculatetotalpages",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "renderTable",
      "calculateTotalPages",
      "goToPage"
    ],
    "description": "Code related to calculatetotalpages",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.664Z"
  },
  "context:startindex": {
    "category": "context_clues",
    "keyword": "startindex",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "renderTable"
    ],
    "description": "Code related to startindex",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:financial": {
    "category": "context_clues",
    "keyword": "financial",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateSummary",
      "calculateTotals"
    ],
    "description": "Code related to financial",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:displays": {
    "category": "context_clues",
    "keyword": "displays",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateSummary",
      "editItem",
      "fetchSpotPrice",
      "openStorageReportPopup"
    ],
    "description": "Code related to displays",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "context:across": {
    "category": "context_clues",
    "keyword": "across",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateSummary"
    ],
    "description": "Code related to across",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:updatesummary": {
    "category": "context_clues",
    "keyword": "updatesummary",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateSummary"
    ],
    "description": "Code related to updatesummary",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:calculated": {
    "category": "context_clues",
    "keyword": "calculated",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateSummary"
    ],
    "description": "Code related to calculated",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "context:calculatetotals": {
    "category": "context_clues",
    "keyword": "calculatetotals",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateSummary"
    ],
    "description": "Code related to calculatetotals",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.632Z"
  },
  "function:calculateTotals": {
    "category": "code_functions",
    "keyword": "calculateTotals",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "calculateTotals"
    ],
    "description": " Calculates financial metrics for specified metal type  @param {string} metal - Metal type to calculate ('Silver', 'Gold', 'Platinum', or 'Palladium') @returns {Object} Calculated metrics ",
    "context_weight": 0.9,
    "line_number": 1157,
    "body_preview": "const calculateTotals = (metal) => { let totalItems = 0; let totalWeight = 0;",
    "context_clues": [
      "calculate",
      "totals",
      "calculates",
      "financial",
      "metrics",
      "specified",
      "metal",
      "type",
      "param",
      "string",
      "silver",
      "gold",
      "platinum",
      "palladium",
      "object"
    ],
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:totals": {
    "category": "context_clues",
    "keyword": "totals",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "calculateTotals"
    ],
    "description": "Code related to totals",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:metrics": {
    "category": "context_clues",
    "keyword": "metrics",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "calculateTotals"
    ],
    "description": "Code related to metrics",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:platinum": {
    "category": "context_clues",
    "keyword": "platinum",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "calculateTotals",
      "resetSpot"
    ],
    "description": "Code related to platinum",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:palladium": {
    "category": "context_clues",
    "keyword": "palladium",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "calculateTotals"
    ],
    "description": "Code related to palladium",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "function:deleteItem": {
    "category": "code_functions",
    "keyword": "deleteItem",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "deleteItem"
    ],
    "description": " Deletes inventory item at specified index after confirmation  @param {number} idx - Index of item to delete ",
    "context_weight": 0.9,
    "line_number": 1316,
    "body_preview": "const deleteItem = (idx) => { const item = inventory[idx]; if (confirm(\"Delete this item?\")) {",
    "context_clues": [
      "delete",
      "item",
      "deletes",
      "inventory",
      "specified",
      "index",
      "after",
      "confirmation",
      "param",
      "number",
      "deleteitem",
      "saveinventory",
      "deleted"
    ],
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:deletes": {
    "category": "context_clues",
    "keyword": "deletes",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "deleteItem",
      "loadDataSync",
      "cleanupStorage"
    ],
    "description": "Code related to deletes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:deleteitem": {
    "category": "context_clues",
    "keyword": "deleteitem",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "deleteItem"
    ],
    "description": "Code related to deleteitem",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:deleted": {
    "category": "context_clues",
    "keyword": "deleted",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "deleteItem"
    ],
    "description": "Code related to deleted",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "context:opens": {
    "category": "context_clues",
    "keyword": "opens",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "showNotes",
      "openNumistaModal",
      "openEbaySearch",
      "openModalById"
    ],
    "description": "Code related to opens",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:whose": {
    "category": "context_clues",
    "keyword": "whose",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "showNotes",
      "sanitizeObjectFields"
    ],
    "description": "Code related to whose",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:viewedit": {
    "category": "context_clues",
    "keyword": "viewedit",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "showNotes"
    ],
    "description": "Code related to viewedit",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.633Z"
  },
  "function:editItem": {
    "category": "code_functions",
    "keyword": "editItem",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "editItem"
    ],
    "description": " Prepares and displays edit modal for specified inventory item  @param {number} idx - Index of item to edit ",
    "context_weight": 0.9,
    "line_number": 1363,
    "body_preview": "const editItem = (idx, logIdx = null) => { editingIndex = idx; editingChangeLogIndex = logIdx;",
    "context_clues": [
      "edit",
      "item",
      "prepares",
      "displays",
      "modal",
      "specified",
      "inventory",
      "param",
      "number",
      "index"
    ],
    "last_updated": "2025-08-20T17:24:09.635Z"
  },
  "context:prepares": {
    "category": "context_clues",
    "keyword": "prepares",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "editItem"
    ],
    "description": "Code related to prepares",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.635Z"
  },
  "function:toggleCollectable": {
    "category": "code_functions",
    "keyword": "toggleCollectable",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "toggleCollectable"
    ],
    "description": " Toggles collectable status for inventory item  @param {number} idx - Index of item to update ",
    "context_weight": 0.9,
    "line_number": 1420,
    "body_preview": "const toggleCollectable = (idx) => { const item = inventory[idx]; const oldItem = { ...item };",
    "context_clues": [
      "toggle",
      "collectable",
      "toggles",
      "status",
      "inventory",
      "item",
      "param",
      "number",
      "index",
      "update"
    ],
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "context:collectable": {
    "category": "context_clues",
    "keyword": "collectable",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "toggleCollectable"
    ],
    "description": "Code related to collectable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "function:togglePriceView": {
    "category": "code_functions",
    "keyword": "togglePriceView",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "togglePriceView"
    ],
    "description": " Toggles price display between purchase price and market value  @param {number} idx - Index of item to toggle price view for   Legacy function kept for compatibility - no longer used Market value now has its own dedicated column ",
    "context_weight": 0.9,
    "line_number": 1473,
    "body_preview": "const togglePriceView = (idx) => { // Function kept for compatibility but no longer used console.warn('togglePriceView is deprecated - using separate columns now');",
    "context_clues": [
      "toggle",
      "price",
      "view",
      "toggles",
      "display",
      "between",
      "purchase",
      "market",
      "value",
      "param",
      "number",
      "index",
      "item",
      "legacy",
      "kept"
    ],
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "context:market": {
    "category": "context_clues",
    "keyword": "market",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "togglePriceView",
      "toggleGlobalPriceView"
    ],
    "description": "Code related to market",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "context:kept": {
    "category": "context_clues",
    "keyword": "kept",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "togglePriceView",
      "toggleGlobalPriceView"
    ],
    "description": "Code related to kept",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "function:toggleGlobalPriceView": {
    "category": "code_functions",
    "keyword": "toggleGlobalPriceView",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "toggleGlobalPriceView"
    ],
    "description": " Legacy function kept for compatibility - no longer used Market value now has its own dedicated column ",
    "context_weight": 0.9,
    "line_number": 1482,
    "body_preview": "const toggleGlobalPriceView = () => { // Function kept for compatibility but no longer used console.warn('toggleGlobalPriceView is deprecated - using separate columns now');",
    "context_clues": [
      "toggle",
      "global",
      "price",
      "view",
      "legacy",
      "kept",
      "compatibility",
      "longer",
      "used",
      "market",
      "value",
      "dedicated",
      "column",
      "import",
      "export"
    ],
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "context:longer": {
    "category": "context_clues",
    "keyword": "longer",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "toggleGlobalPriceView"
    ],
    "description": "Code related to longer",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "context:dedicated": {
    "category": "context_clues",
    "keyword": "dedicated",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "toggleGlobalPriceView"
    ],
    "description": "Code related to dedicated",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.636Z"
  },
  "function:startImportProgress": {
    "category": "code_functions",
    "keyword": "startImportProgress",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "startImportProgress"
    ],
    "description": "============================================================================= IMPORT/EXPORT FUNCTIONS ============================================================================= Import progress utilities",
    "context_weight": 0.9,
    "line_number": 1492,
    "body_preview": "const startImportProgress = (total) => { if (!elements.importProgress || !elements.importProgressText) return; elements.importProgress.max = total;",
    "context_clues": [
      "start",
      "import",
      "progress",
      "importexport",
      "functions",
      "utilities",
      "startimportprogress",
      "importprogress",
      "importprogresstext",
      "imported",
      "updateimportprogress",
      "processed",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.637Z"
  },
  "context:importexport": {
    "category": "context_clues",
    "keyword": "importexport",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "startImportProgress",
      "renderHistories"
    ],
    "description": "Code related to importexport",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "context:startimportprogress": {
    "category": "context_clues",
    "keyword": "startimportprogress",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "startImportProgress"
    ],
    "description": "Code related to startimportprogress",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.637Z"
  },
  "context:importprogress": {
    "category": "context_clues",
    "keyword": "importprogress",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "startImportProgress",
      "updateImportProgress",
      "endImportProgress"
    ],
    "description": "Code related to importprogress",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.637Z"
  },
  "context:importprogresstext": {
    "category": "context_clues",
    "keyword": "importprogresstext",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "startImportProgress",
      "updateImportProgress",
      "endImportProgress"
    ],
    "description": "Code related to importprogresstext",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.637Z"
  },
  "context:updateimportprogress": {
    "category": "context_clues",
    "keyword": "updateimportprogress",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "startImportProgress",
      "updateImportProgress"
    ],
    "description": "Code related to updateimportprogress",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.637Z"
  },
  "context:processed": {
    "category": "context_clues",
    "keyword": "processed",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "startImportProgress",
      "updateImportProgress",
      "getValue",
      "saveResultsToHistory"
    ],
    "description": "Code related to processed",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.874Z"
  },
  "function:updateImportProgress": {
    "category": "code_functions",
    "keyword": "updateImportProgress",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "updateImportProgress"
    ],
    "description": "Function updateImportProgress in inventory.js",
    "context_weight": 0.9,
    "line_number": 1501,
    "body_preview": "const updateImportProgress = (processed, imported, total) => { if (!elements.importProgress || !elements.importProgressText) return; elements.importProgress.value = processed;",
    "context_clues": [
      "update",
      "import",
      "progress",
      "updateimportprogress",
      "processed",
      "imported",
      "importprogress",
      "importprogresstext",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.637Z"
  },
  "function:endImportProgress": {
    "category": "code_functions",
    "keyword": "endImportProgress",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "endImportProgress"
    ],
    "description": "Function endImportProgress in inventory.js",
    "context_weight": 0.9,
    "line_number": 1507,
    "body_preview": "const endImportProgress = () => { if (!elements.importProgress || !elements.importProgressText) return; elements.importProgress.style.display = 'none';",
    "context_clues": [
      "end",
      "import",
      "progress",
      "importprogress",
      "importprogresstext",
      "imports",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.637Z"
  },
  "context:end": {
    "category": "context_clues",
    "keyword": "end",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "endImportProgress"
    ],
    "description": "Code related to end",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.637Z"
  },
  "context:selected": {
    "category": "context_clues",
    "keyword": "selected",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "importCsv"
    ],
    "description": "Code related to selected",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.638Z"
  },
  "function:importNumistaCsv": {
    "category": "code_functions",
    "keyword": "importNumistaCsv",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "importNumistaCsv"
    ],
    "description": " Imports inventory data from a Numista CSV export  @param {File} file - CSV file from Numista @param {boolean} [override=false] - Replace existing inventory instead of merging ",
    "context_weight": 0.9,
    "line_number": 1683,
    "body_preview": "const importNumistaCsv = (file, override = false) => { try { const reader = new FileReader();",
    "context_clues": [
      "import",
      "numista",
      "csv",
      "imports",
      "inventory",
      "data",
      "from",
      "export",
      "param",
      "file",
      "boolean",
      "overridefalse",
      "replace",
      "existing",
      "instead"
    ],
    "last_updated": "2025-08-20T17:24:09.638Z"
  },
  "context:overridefalse": {
    "category": "context_clues",
    "keyword": "overridefalse",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "importNumistaCsv",
      "importJson"
    ],
    "description": "Code related to overridefalse",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "function:getValue": {
    "category": "code_functions",
    "keyword": "getValue",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getValue"
    ],
    "description": "Function getValue in inventory.js",
    "context_weight": 0.9,
    "line_number": 1701,
    "body_preview": "const getValue = (row, keys) => { for (const key of keys) { const foundKey = Object.keys(row).find(k => k.toLowerCase() === key.toLowerCase());",
    "context_clues": [
      "get",
      "value",
      "getvalue",
      "find",
      "processed",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.638Z"
  },
  "context:getvalue": {
    "category": "context_clues",
    "keyword": "getvalue",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "getValue"
    ],
    "description": "Code related to getvalue",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.638Z"
  },
  "function:parsePriceField": {
    "category": "code_functions",
    "keyword": "parsePriceField",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "parsePriceField"
    ],
    "description": "Function parsePriceField in inventory.js",
    "context_weight": 0.9,
    "line_number": 1748,
    "body_preview": "const parsePriceField = (key) => { const rawVal = String(row[key] ?? '').trim(); const valueCurrency = detectCurrency(rawVal);",
    "context_clues": [
      "parse",
      "price",
      "field",
      "parsepricefield",
      "parsefloat",
      "converttousd",
      "inventory"
    ],
    "last_updated": "2025-08-20T17:24:09.639Z"
  },
  "context:parsepricefield": {
    "category": "context_clues",
    "keyword": "parsepricefield",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "parsePriceField"
    ],
    "description": "Code related to parsepricefield",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.639Z"
  },
  "context:converttousd": {
    "category": "context_clues",
    "keyword": "converttousd",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "parsePriceField"
    ],
    "description": "Code related to converttousd",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.639Z"
  },
  "function:exportNumistaCsv": {
    "category": "code_functions",
    "keyword": "exportNumistaCsv",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportNumistaCsv"
    ],
    "description": " Exports inventory using Numista-compatible column layout ",
    "context_weight": 0.9,
    "line_number": 1922,
    "body_preview": "const exportNumistaCsv = () => { const timestamp = new Date().toISOString().slice(0,10).replace(/-/g,''); const headers = [",
    "context_clues": [
      "export",
      "numista",
      "csv",
      "exports",
      "inventory",
      "using",
      "numistacompatible",
      "column",
      "layout",
      "exportnumistacsv"
    ],
    "last_updated": "2025-08-20T17:24:09.639Z"
  },
  "context:numistacompatible": {
    "category": "context_clues",
    "keyword": "numistacompatible",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportNumistaCsv"
    ],
    "description": "Code related to numistacompatible",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.639Z"
  },
  "context:layout": {
    "category": "context_clues",
    "keyword": "layout",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportNumistaCsv"
    ],
    "description": "Code related to layout",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.639Z"
  },
  "context:exportnumistacsv": {
    "category": "context_clues",
    "keyword": "exportnumistacsv",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportNumistaCsv"
    ],
    "description": "Code related to exportnumistacsv",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.639Z"
  },
  "function:exportCsv": {
    "category": "code_functions",
    "keyword": "exportCsv",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportCsv"
    ],
    "description": " Exports current inventory to CSV format ",
    "context_weight": 0.9,
    "line_number": 2012,
    "body_preview": "const exportCsv = () => { debugLog('exportCsv start', inventory.length, 'items'); const timestamp = new Date().toISOString().slice(0,10).replace(/-/g,'');",
    "context_clues": [
      "export",
      "csv",
      "exports",
      "current",
      "inventory",
      "format",
      "exportcsv",
      "start"
    ],
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "context:exportcsv": {
    "category": "context_clues",
    "keyword": "exportcsv",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportCsv"
    ],
    "description": "Code related to exportcsv",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "function:importJson": {
    "category": "code_functions",
    "keyword": "importJson",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "importJson"
    ],
    "description": " Imports inventory data from JSON file  @param {File} file - JSON file to import @param {boolean} [override=false] - Replace existing inventory instead of merging ",
    "context_weight": 0.9,
    "line_number": 2076,
    "body_preview": "const importJson = (file, override = false) => { const reader = new FileReader(); debugLog('importJson start', file.name);",
    "context_clues": [
      "import",
      "json",
      "imports",
      "inventory",
      "data",
      "from",
      "file",
      "param",
      "boolean",
      "overridefalse",
      "replace",
      "existing",
      "instead",
      "merging",
      "importjson"
    ],
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "context:json": {
    "category": "context_clues",
    "keyword": "json",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rScripts/mcp_json_sync.py",
      "rEngine/call-llm.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "importJson",
      "exportJson",
      "__init__",
      "setup_logging",
      "save_sync_metadata",
      "ensure_backup_dir",
      "backup_json_files",
      "restore_from_backup",
      "load_json_memory_fallback",
      "get_available_tasks_from_json",
      "search_json_memory",
      "create_emergency_recovery_package",
      "export_mcp_memory_to_json",
      "calculate_hash",
      "backup_file",
      "validate_snapshot",
      "main",
      "handleMCPMode"
    ],
    "description": "Code related to json",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "context:merging": {
    "category": "context_clues",
    "keyword": "merging",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "importJson"
    ],
    "description": "Code related to merging",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "context:importjson": {
    "category": "context_clues",
    "keyword": "importjson",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "importJson"
    ],
    "description": "Code related to importjson",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "function:exportJson": {
    "category": "code_functions",
    "keyword": "exportJson",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportJson"
    ],
    "description": " Exports current inventory to JSON format ",
    "context_weight": 0.9,
    "line_number": 2256,
    "body_preview": "const exportJson = () => { debugLog('exportJson start', inventory.length, 'items'); const timestamp = new Date().toISOString().slice(0,10).replace(/-/g,'');",
    "context_clues": [
      "export",
      "json",
      "exports",
      "current",
      "inventory",
      "format",
      "exportjson",
      "start",
      "sort",
      "sortedinventory",
      "sortinventorybydatenewestfirst",
      "exportdata"
    ],
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "context:exportjson": {
    "category": "context_clues",
    "keyword": "exportjson",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportJson"
    ],
    "description": "Code related to exportjson",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "context:sort": {
    "category": "context_clues",
    "keyword": "sort",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "exportJson",
      "exportPdf",
      "sortInventory",
      "generateStorageReport",
      "refreshCompositionOptions",
      "sortInventoryByDateNewestFirst",
      "generateHTMLReport",
      "updateHistoryCharts",
      "saveResultsToHistory"
    ],
    "description": "Code related to sort",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.896Z"
  },
  "context:sortinventorybydatenewestfirst": {
    "category": "context_clues",
    "keyword": "sortinventorybydatenewestfirst",
    "files": [
      "rProjects/StackTrackr/js/inventory.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "exportJson",
      "exportPdf",
      "sortInventoryByDateNewestFirst"
    ],
    "description": "Code related to sortinventorybydatenewestfirst",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:exportdata": {
    "category": "context_clues",
    "keyword": "exportdata",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportJson"
    ],
    "description": "Code related to exportdata",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.640Z"
  },
  "function:exportPdf": {
    "category": "code_functions",
    "keyword": "exportPdf",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportPdf"
    ],
    "description": " Exports current inventory to PDF format ",
    "context_weight": 0.9,
    "line_number": 2301,
    "body_preview": "const exportPdf = () => { const { jsPDF } = window.jspdf; const doc = new jsPDF();",
    "context_clues": [
      "export",
      "pdf",
      "exports",
      "current",
      "inventory",
      "format",
      "exportpdf",
      "sort",
      "sortedinventory",
      "sortinventorybydatenewestfirst",
      "add",
      "setfontsize"
    ],
    "last_updated": "2025-08-20T17:24:09.641Z"
  },
  "context:pdf": {
    "category": "context_clues",
    "keyword": "pdf",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportPdf"
    ],
    "description": "Code related to pdf",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.641Z"
  },
  "context:exportpdf": {
    "category": "context_clues",
    "keyword": "exportpdf",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportPdf"
    ],
    "description": "Code related to exportpdf",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.641Z"
  },
  "context:setfontsize": {
    "category": "context_clues",
    "keyword": "setfontsize",
    "files": [
      "rProjects/StackTrackr/js/inventory.js"
    ],
    "functions": [
      "exportPdf"
    ],
    "description": "Code related to setfontsize",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.641Z"
  },
  "function:openNumistaModal": {
    "category": "code_functions",
    "keyword": "openNumistaModal",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "openNumistaModal"
    ],
    "description": " Opens the Numista modal with the specified coin ID and coin name. Handles file:// protocol by opening a popup, otherwise uses iframe modal. Updates navigation history and traps focus for accessibility.  @param {string} numistaId - The Numista catalog ID @param {string} coinName - The name of the coin for the title ",
    "context_weight": 0.9,
    "line_number": 19,
    "body_preview": "function openNumistaModal(numistaId, coinName) { const url = `https://en.numista.com/catalogue/pieces${numistaId}.html`; // Check if we're running on file:// protocol",
    "context_clues": [
      "open",
      "numista",
      "modal",
      "opens",
      "with",
      "specified",
      "coin",
      "name",
      "handles",
      "file",
      "protocol",
      "opening",
      "popup",
      "otherwise",
      "uses"
    ],
    "last_updated": "2025-08-20T17:24:09.651Z"
  },
  "context:opening": {
    "category": "context_clues",
    "keyword": "opening",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "openNumistaModal"
    ],
    "description": "Code related to opening",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.651Z"
  },
  "context:popup": {
    "category": "context_clues",
    "keyword": "popup",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openNumistaModal",
      "openStorageReportPopup"
    ],
    "description": "Code related to popup",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "context:otherwise": {
    "category": "context_clues",
    "keyword": "otherwise",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "openNumistaModal"
    ],
    "description": "Code related to otherwise",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.651Z"
  },
  "context:uses": {
    "category": "context_clues",
    "keyword": "uses",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openNumistaModal",
      "parseDate"
    ],
    "description": "Code related to uses",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.766Z"
  },
  "file:numista-modal.js": {
    "category": "file_relationships",
    "keyword": "numista-modal.js",
    "primary_file": "rProjects/StackTrackr/js/numista-modal.js",
    "functions": [
      "openNumistaModal",
      "closeNumistaModal",
      "numistaGoBack",
      "numistaGoForward",
      "updateNavButtons",
      "trapFocus"
    ],
    "description": "File containing openNumistaModal and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.093Z"
  },
  "function:closeNumistaModal": {
    "category": "code_functions",
    "keyword": "closeNumistaModal",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "closeNumistaModal"
    ],
    "description": " Closes the Numista modal and resets the iframe source/content. ",
    "context_weight": 0.9,
    "line_number": 97,
    "body_preview": "function closeNumistaModal() { const modal = document.getElementById('numistaModal'); const iframe = document.getElementById('numistaIframe');",
    "context_clues": [
      "close",
      "numista",
      "modal",
      "closes",
      "resets",
      "iframe",
      "sourcecontent",
      "closenumistamodal",
      "getelementbyid",
      "clear"
    ],
    "last_updated": "2025-08-20T17:24:09.652Z"
  },
  "context:iframe": {
    "category": "context_clues",
    "keyword": "iframe",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeNumistaModal",
      "numistaGoBack",
      "numistaGoForward",
      "openStorageReportPopup"
    ],
    "description": "Code related to iframe",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "context:sourcecontent": {
    "category": "context_clues",
    "keyword": "sourcecontent",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "closeNumistaModal"
    ],
    "description": "Code related to sourcecontent",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.652Z"
  },
  "context:closenumistamodal": {
    "category": "context_clues",
    "keyword": "closenumistamodal",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "closeNumistaModal"
    ],
    "description": "Code related to closenumistamodal",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.652Z"
  },
  "function:numistaGoBack": {
    "category": "code_functions",
    "keyword": "numistaGoBack",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "numistaGoBack"
    ],
    "description": " Navigates back in Numista modal history (iframe mode only). ",
    "context_weight": 0.9,
    "line_number": 117,
    "body_preview": "function numistaGoBack() { // Only works for iframe mode (HTTP/HTTPS) if (window.location.protocol === 'file:') {",
    "context_clues": [
      "numista",
      "back",
      "navigates",
      "modal",
      "history",
      "iframe",
      "mode",
      "only",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.652Z"
  },
  "context:back": {
    "category": "context_clues",
    "keyword": "back",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "numistaGoBack"
    ],
    "description": "Code related to back",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.652Z"
  },
  "function:numistaGoForward": {
    "category": "code_functions",
    "keyword": "numistaGoForward",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "numistaGoForward"
    ],
    "description": " Navigates forward in Numista modal history (iframe mode only). ",
    "context_weight": 0.9,
    "line_number": 137,
    "body_preview": "function numistaGoForward() { // Only works for iframe mode (HTTP/HTTPS) if (window.location.protocol === 'file:') {",
    "context_clues": [
      "numista",
      "forward",
      "navigates",
      "modal",
      "history",
      "iframe",
      "mode",
      "only",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.652Z"
  },
  "context:forward": {
    "category": "context_clues",
    "keyword": "forward",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "numistaGoForward"
    ],
    "description": "Code related to forward",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.652Z"
  },
  "function:updateNavButtons": {
    "category": "code_functions",
    "keyword": "updateNavButtons",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "updateNavButtons"
    ],
    "description": " Updates the state and visibility of navigation buttons in the Numista modal. ",
    "context_weight": 0.9,
    "line_number": 157,
    "body_preview": "function updateNavButtons() { const backBtn = document.getElementById('numistaBackBtn'); const forwardBtn = document.getElementById('numistaForwardBtn');",
    "context_clues": [
      "update",
      "nav",
      "buttons",
      "updates",
      "state",
      "visibility",
      "navigation",
      "numista",
      "modal",
      "updatenavbuttons",
      "getelementbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "context:nav": {
    "category": "context_clues",
    "keyword": "nav",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "updateNavButtons"
    ],
    "description": "Code related to nav",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "context:state": {
    "category": "context_clues",
    "keyword": "state",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateNavButtons",
      "cleanupStorage"
    ],
    "description": "Code related to state",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:navigation": {
    "category": "context_clues",
    "keyword": "navigation",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "updateNavButtons"
    ],
    "description": "Code related to navigation",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "context:updatenavbuttons": {
    "category": "context_clues",
    "keyword": "updatenavbuttons",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "updateNavButtons"
    ],
    "description": "Code related to updatenavbuttons",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "function:trapFocus": {
    "category": "code_functions",
    "keyword": "trapFocus",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "trapFocus"
    ],
    "description": " Traps focus within the given modal element for accessibility.  @param {HTMLElement} element - The modal element to trap focus in ",
    "context_weight": 0.9,
    "line_number": 185,
    "body_preview": "function trapFocus(element) { const focusableElements = element.querySelectorAll( 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'",
    "context_clues": [
      "trap",
      "focus",
      "traps",
      "within",
      "given",
      "modal",
      "element",
      "accessibility",
      "param",
      "htmlelement",
      "numista"
    ],
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "context:trap": {
    "category": "context_clues",
    "keyword": "trap",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "trapFocus"
    ],
    "description": "Code related to trap",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "context:focus": {
    "category": "context_clues",
    "keyword": "focus",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "trapFocus"
    ],
    "description": "Code related to focus",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "context:traps": {
    "category": "context_clues",
    "keyword": "traps",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "trapFocus"
    ],
    "description": "Code related to traps",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "context:within": {
    "category": "context_clues",
    "keyword": "within",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "trapFocus",
      "checkFileSize"
    ],
    "description": "Code related to within",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:accessibility": {
    "category": "context_clues",
    "keyword": "accessibility",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "trapFocus"
    ],
    "description": "Code related to accessibility",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "context:htmlelement": {
    "category": "context_clues",
    "keyword": "htmlelement",
    "files": [
      "rProjects/StackTrackr/js/numista-modal.js"
    ],
    "functions": [
      "trapFocus"
    ],
    "description": "Code related to htmlelement",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.653Z"
  },
  "function:calculateTotalPages": {
    "category": "code_functions",
    "keyword": "calculateTotalPages",
    "files": [
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "calculateTotalPages"
    ],
    "description": "PAGINATION FUNCTIONS =============================================================================  Calculates total number of pages based on current data  @param {Array} [data=inventory] - Data to paginate @returns {number} Total number of pages ",
    "context_weight": 0.9,
    "line_number": 10,
    "body_preview": "const calculateTotalPages = (data = inventory) => { return Math.max(1, Math.ceil(data.length / itemsPerPage)); };",
    "context_clues": [
      "calculate",
      "total",
      "pages",
      "pagination",
      "functions",
      "calculates",
      "number",
      "based",
      "current",
      "data",
      "param",
      "array",
      "datainventory",
      "paginate",
      "calculatetotalpages"
    ],
    "last_updated": "2025-08-20T17:24:09.663Z"
  },
  "context:total": {
    "category": "context_clues",
    "keyword": "total",
    "files": [
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "calculateTotalPages"
    ],
    "description": "Code related to total",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.663Z"
  },
  "context:pages": {
    "category": "context_clues",
    "keyword": "pages",
    "files": [
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "calculateTotalPages"
    ],
    "description": "Code related to pages",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.663Z"
  },
  "context:datainventory": {
    "category": "context_clues",
    "keyword": "datainventory",
    "files": [
      "rProjects/StackTrackr/js/pagination.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "calculateTotalPages",
      "sortInventoryByDateNewestFirst"
    ],
    "description": "Code related to datainventory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:paginate": {
    "category": "context_clues",
    "keyword": "paginate",
    "files": [
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "calculateTotalPages"
    ],
    "description": "Code related to paginate",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.663Z"
  },
  "file:pagination.js": {
    "category": "file_relationships",
    "keyword": "pagination.js",
    "primary_file": "rProjects/StackTrackr/js/pagination.js",
    "functions": [
      "calculateTotalPages",
      "goToPage"
    ],
    "description": "File containing calculateTotalPages and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.099Z"
  },
  "function:goToPage": {
    "category": "code_functions",
    "keyword": "goToPage",
    "files": [
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "goToPage"
    ],
    "description": " Navigates to specified page number  @param {number} page - Page number to navigate to ",
    "context_weight": 0.9,
    "line_number": 62,
    "body_preview": "const goToPage = (page) => { const filteredData = filterInventory(); const totalPages = calculateTotalPages(filteredData);",
    "context_clues": [
      "page",
      "navigates",
      "specified",
      "number",
      "param",
      "navigate",
      "filtereddata",
      "filterinventory",
      "calculatetotalpages",
      "pagination"
    ],
    "last_updated": "2025-08-20T17:24:09.664Z"
  },
  "context:page": {
    "category": "context_clues",
    "keyword": "page",
    "files": [
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "goToPage"
    ],
    "description": "Code related to page",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.664Z"
  },
  "context:navigate": {
    "category": "context_clues",
    "keyword": "navigate",
    "files": [
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "goToPage"
    ],
    "description": "Code related to navigate",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.664Z"
  },
  "context:filtereddata": {
    "category": "context_clues",
    "keyword": "filtereddata",
    "files": [
      "rProjects/StackTrackr/js/pagination.js"
    ],
    "functions": [
      "goToPage"
    ],
    "description": "Code related to filtereddata",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.664Z"
  },
  "function:initializerSynk": {
    "category": "code_functions",
    "keyword": "initializerSynk",
    "files": [
      "rProjects/StackTrackr/js/rsynk-integration.js"
    ],
    "functions": [
      "initializerSynk"
    ],
    "description": " Initialize rSynk integration ",
    "context_weight": 0.9,
    "line_number": 568,
    "body_preview": "function initializerSynk() { // Load saved preferences const savedEnabled = localStorage.getItem('rsynk_enabled');",
    "context_clues": [
      "initializer",
      "synk",
      "initialize",
      "rsynk",
      "integration",
      "initializersynk",
      "load",
      "saved",
      "savedenabled",
      "getitem",
      "create"
    ],
    "last_updated": "2025-08-20T17:24:09.690Z"
  },
  "context:initializer": {
    "category": "context_clues",
    "keyword": "initializer",
    "files": [
      "rProjects/StackTrackr/js/rsynk-integration.js"
    ],
    "functions": [
      "initializerSynk"
    ],
    "description": "Code related to initializer",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.690Z"
  },
  "context:synk": {
    "category": "context_clues",
    "keyword": "synk",
    "files": [
      "rProjects/StackTrackr/js/rsynk-integration.js"
    ],
    "functions": [
      "initializerSynk"
    ],
    "description": "Code related to synk",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.690Z"
  },
  "context:rsynk": {
    "category": "context_clues",
    "keyword": "rsynk",
    "files": [
      "rProjects/StackTrackr/js/rsynk-integration.js"
    ],
    "functions": [
      "initializerSynk"
    ],
    "description": "Code related to rsynk",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.690Z"
  },
  "context:initializersynk": {
    "category": "context_clues",
    "keyword": "initializersynk",
    "files": [
      "rProjects/StackTrackr/js/rsynk-integration.js"
    ],
    "functions": [
      "initializerSynk"
    ],
    "description": "Code related to initializersynk",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.690Z"
  },
  "context:saved": {
    "category": "context_clues",
    "keyword": "saved",
    "files": [
      "rProjects/StackTrackr/js/rsynk-integration.js"
    ],
    "functions": [
      "initializerSynk"
    ],
    "description": "Code related to saved",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.690Z"
  },
  "context:savedenabled": {
    "category": "context_clues",
    "keyword": "savedenabled",
    "files": [
      "rProjects/StackTrackr/js/rsynk-integration.js"
    ],
    "functions": [
      "initializerSynk"
    ],
    "description": "Code related to savedenabled",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.690Z"
  },
  "file:rsynk-integration.js": {
    "category": "file_relationships",
    "keyword": "rsynk-integration.js",
    "primary_file": "rProjects/StackTrackr/js/rsynk-integration.js",
    "functions": [
      "initializerSynk"
    ],
    "description": "File containing initializerSynk and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.117Z"
  },
  "function:filterInventory": {
    "category": "code_functions",
    "keyword": "filterInventory",
    "files": [
      "rProjects/StackTrackr/js/search.js"
    ],
    "functions": [
      "filterInventory"
    ],
    "description": "SEARCH FUNCTIONALITY =============================================================================  Filters inventory based on the current search query and active column filters. Handles advanced multi-term, phrase, and series-specific logic for coins and metals.  @returns {Array<Object>} Filtered inventory items matching the search query and filters  @example filterInventory(); ",
    "context_weight": 0.9,
    "line_number": 13,
    "body_preview": "const filterInventory = () => { // Use the advanced filtering system if available, otherwise fall back to legacy if (typeof filterInventoryAdvanced === 'function') {",
    "context_clues": [
      "filter",
      "inventory",
      "search",
      "functionality",
      "filters",
      "based",
      "current",
      "query",
      "active",
      "column",
      "handles",
      "advanced",
      "multiterm",
      "phrase",
      "seriesspecific"
    ],
    "last_updated": "2025-08-20T17:24:09.703Z"
  },
  "context:functionality": {
    "category": "context_clues",
    "keyword": "functionality",
    "files": [
      "rProjects/StackTrackr/js/search.js",
      "rProjects/StackTrackr/js/sorting.js"
    ],
    "functions": [
      "filterInventory",
      "sortInventory"
    ],
    "description": "Code related to functionality",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.715Z"
  },
  "context:multiterm": {
    "category": "context_clues",
    "keyword": "multiterm",
    "files": [
      "rProjects/StackTrackr/js/search.js"
    ],
    "functions": [
      "filterInventory"
    ],
    "description": "Code related to multiterm",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.703Z"
  },
  "context:phrase": {
    "category": "context_clues",
    "keyword": "phrase",
    "files": [
      "rProjects/StackTrackr/js/search.js"
    ],
    "functions": [
      "filterInventory"
    ],
    "description": "Code related to phrase",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.703Z"
  },
  "context:seriesspecific": {
    "category": "context_clues",
    "keyword": "seriesspecific",
    "files": [
      "rProjects/StackTrackr/js/search.js"
    ],
    "functions": [
      "filterInventory"
    ],
    "description": "Code related to seriesspecific",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.703Z"
  },
  "file:search.js": {
    "category": "file_relationships",
    "keyword": "search.js",
    "primary_file": "rProjects/StackTrackr/js/search.js",
    "functions": [
      "filterInventory"
    ],
    "description": "File containing filterInventory and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.127Z"
  },
  "function:sortInventory": {
    "category": "code_functions",
    "keyword": "sortInventory",
    "files": [
      "rProjects/StackTrackr/js/sorting.js"
    ],
    "functions": [
      "sortInventory"
    ],
    "description": "SORTING FUNCTIONALITY =============================================================================  Sorts inventory based on the current sort column and direction. Handles special cases for date, numeric, boolean, and string columns.  @param {Array<Object>} [data=inventory] - Array of inventory items to sort (defaults to main inventory) @returns {Array<Object>} Sorted inventory data  @example sortInventory([{name: 'A'}, {name: 'B'}]); ",
    "context_weight": 0.9,
    "line_number": 14,
    "body_preview": "const sortInventory = (data = inventory) => { if (sortColumn === null) return data; return [...data].sort((a, b) => {",
    "context_clues": [
      "sort",
      "inventory",
      "sorting",
      "functionality",
      "sorts",
      "based",
      "current",
      "column",
      "direction",
      "handles",
      "special",
      "cases",
      "date",
      "numeric",
      "boolean"
    ],
    "last_updated": "2025-08-20T17:24:09.715Z"
  },
  "context:sorts": {
    "category": "context_clues",
    "keyword": "sorts",
    "files": [
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sortInventory",
      "sortInventoryByDateNewestFirst"
    ],
    "description": "Code related to sorts",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:direction": {
    "category": "context_clues",
    "keyword": "direction",
    "files": [
      "rProjects/StackTrackr/js/sorting.js"
    ],
    "functions": [
      "sortInventory"
    ],
    "description": "Code related to direction",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.715Z"
  },
  "context:cases": {
    "category": "context_clues",
    "keyword": "cases",
    "files": [
      "rProjects/StackTrackr/js/sorting.js"
    ],
    "functions": [
      "sortInventory"
    ],
    "description": "Code related to cases",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.715Z"
  },
  "context:date": {
    "category": "context_clues",
    "keyword": "date",
    "files": [
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sortInventory",
      "parseDate",
      "todayStr",
      "formatDisplayDate",
      "sortInventoryByDateNewestFirst"
    ],
    "description": "Code related to date",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:numeric": {
    "category": "context_clues",
    "keyword": "numeric",
    "files": [
      "rProjects/StackTrackr/js/sorting.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sortInventory",
      "getCompositionFirstWords",
      "sanitizeImportedItem"
    ],
    "description": "Code related to numeric",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "file:sorting.js": {
    "category": "file_relationships",
    "keyword": "sorting.js",
    "primary_file": "rProjects/StackTrackr/js/sorting.js",
    "functions": [
      "sortInventory"
    ],
    "description": "File containing sortInventory and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.134Z"
  },
  "function:saveSpotHistory": {
    "category": "code_functions",
    "keyword": "saveSpotHistory",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "saveSpotHistory"
    ],
    "description": "SPOT PRICE FUNCTIONS =============================================================================  Saves spot history to localStorage ",
    "context_weight": 0.9,
    "line_number": 7,
    "body_preview": "const saveSpotHistory = () => { try { saveDataSync(SPOT_HISTORY_KEY, spotHistory);",
    "context_clues": [
      "save",
      "spot",
      "history",
      "price",
      "functions",
      "saves",
      "localstorage",
      "savespothistory",
      "savedatasync",
      "loads"
    ],
    "last_updated": "2025-08-20T17:24:09.727Z"
  },
  "context:savespothistory": {
    "category": "context_clues",
    "keyword": "savespothistory",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "saveSpotHistory"
    ],
    "description": "Code related to savespothistory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.727Z"
  },
  "context:savedatasync": {
    "category": "context_clues",
    "keyword": "savedatasync",
    "files": [
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveSpotHistory",
      "saveDataSync"
    ],
    "description": "Code related to savedatasync",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "file:spot.js": {
    "category": "file_relationships",
    "keyword": "spot.js",
    "primary_file": "rProjects/StackTrackr/js/spot.js",
    "functions": [
      "saveSpotHistory",
      "loadSpotHistory",
      "purgeSpotHistory",
      "updateLastTimestamps",
      "recordSpot",
      "updateSpotCardColor",
      "fetchSpotPrice",
      "updateManualSpot",
      "resetSpot",
      "resetSpotByName"
    ],
    "description": "File containing saveSpotHistory and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.143Z"
  },
  "function:loadSpotHistory": {
    "category": "code_functions",
    "keyword": "loadSpotHistory",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "loadSpotHistory"
    ],
    "description": " Loads spot history from localStorage ",
    "context_weight": 0.9,
    "line_number": 18,
    "body_preview": "const loadSpotHistory = () => { try { const data = loadDataSync(SPOT_HISTORY_KEY, []);",
    "context_clues": [
      "load",
      "spot",
      "history",
      "loads",
      "from",
      "localstorage",
      "loadspothistory",
      "loaddatasync",
      "loading"
    ],
    "last_updated": "2025-08-20T17:24:09.727Z"
  },
  "function:purgeSpotHistory": {
    "category": "code_functions",
    "keyword": "purgeSpotHistory",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "purgeSpotHistory"
    ],
    "description": " Removes spot history entries older than the specified number of days  @param {number} days - Number of days to retain ",
    "context_weight": 0.9,
    "line_number": 34,
    "body_preview": "const purgeSpotHistory = (days = 180) => { const cutoff = new Date(); cutoff.setDate(cutoff.getDate() - days);",
    "context_clues": [
      "purge",
      "spot",
      "history",
      "removes",
      "entries",
      "older",
      "than",
      "specified",
      "number",
      "days",
      "param",
      "retain",
      "setdate",
      "getdate",
      "filter"
    ],
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:purge": {
    "category": "context_clues",
    "keyword": "purge",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "purgeSpotHistory"
    ],
    "description": "Code related to purge",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:older": {
    "category": "context_clues",
    "keyword": "older",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "purgeSpotHistory"
    ],
    "description": "Code related to older",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:than": {
    "category": "context_clues",
    "keyword": "than",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "purgeSpotHistory"
    ],
    "description": "Code related to than",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:days": {
    "category": "context_clues",
    "keyword": "days",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "purgeSpotHistory"
    ],
    "description": "Code related to days",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:retain": {
    "category": "context_clues",
    "keyword": "retain",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "purgeSpotHistory"
    ],
    "description": "Code related to retain",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:setdate": {
    "category": "context_clues",
    "keyword": "setdate",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "purgeSpotHistory"
    ],
    "description": "Code related to setdate",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:getdate": {
    "category": "context_clues",
    "keyword": "getdate",
    "files": [
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "purgeSpotHistory",
      "todayStr",
      "formatDisplayDate"
    ],
    "description": "Code related to getdate",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "function:updateLastTimestamps": {
    "category": "code_functions",
    "keyword": "updateLastTimestamps",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "updateLastTimestamps"
    ],
    "description": " Stores last cache refresh and API sync timestamps  @param {string} source - Source of spot price ('api' or 'cached') @param {string|null} provider - Provider name if available @param {string} timestamp - ISO timestamp of the event ",
    "context_weight": 0.9,
    "line_number": 49,
    "body_preview": "const updateLastTimestamps = (source, provider, timestamp) => { const apiEntry = { provider: provider || \"API\",",
    "context_clues": [
      "update",
      "last",
      "timestamps",
      "stores",
      "cache",
      "refresh",
      "sync",
      "param",
      "string",
      "source",
      "spot",
      "price",
      "cached",
      "stringnull",
      "provider"
    ],
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:last": {
    "category": "context_clues",
    "keyword": "last",
    "files": [
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "updateLastTimestamps",
      "updateSpotCardColor",
      "debounce",
      "getLastUpdateTime",
      "get_last_sync_time",
      "update_last_sync_time"
    ],
    "description": "Code related to last",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "context:timestamps": {
    "category": "context_clues",
    "keyword": "timestamps",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "updateLastTimestamps"
    ],
    "description": "Code related to timestamps",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:stores": {
    "category": "context_clues",
    "keyword": "stores",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "updateLastTimestamps"
    ],
    "description": "Code related to stores",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.728Z"
  },
  "context:source": {
    "category": "context_clues",
    "keyword": "source",
    "files": [
      "rProjects/StackTrackr/js/spot.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateLastTimestamps",
      "recordSpot",
      "getLastUpdateTime"
    ],
    "description": "Code related to source",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "function:recordSpot": {
    "category": "code_functions",
    "keyword": "recordSpot",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "recordSpot"
    ],
    "description": " Records a new spot price entry in history  @param {number} newSpot - New spot price value @param {string} source - Source of spot price ('manual', 'api', etc.) @param {string} metal - Metal type ('Silver', 'Gold', 'Platinum', or 'Palladium') @param {string|null} provider - Provider name if source is API-based @param {string|null} timestamp - Optional ISO timestamp for historical entries ",
    "context_weight": 0.9,
    "line_number": 76,
    "body_preview": "const recordSpot = ( newSpot, source,",
    "context_clues": [
      "record",
      "spot",
      "records",
      "price",
      "entry",
      "history",
      "param",
      "number",
      "newspot",
      "value",
      "string",
      "source",
      "manual",
      "metal",
      "type"
    ],
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:record": {
    "category": "context_clues",
    "keyword": "record",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "recordSpot"
    ],
    "description": "Code related to record",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:newspot": {
    "category": "context_clues",
    "keyword": "newspot",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "recordSpot"
    ],
    "description": "Code related to newspot",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "function:updateSpotCardColor": {
    "category": "code_functions",
    "keyword": "updateSpotCardColor",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "updateSpotCardColor"
    ],
    "description": " Updates spot card color based on price movement compared to last history entry  @param {string} metalKey - Metal key ('silver', 'gold', etc.) @param {number} newPrice - Newly set spot price ",
    "context_weight": 0.9,
    "line_number": 112,
    "body_preview": "const updateSpotCardColor = (metalKey, newPrice) => { const metalConfig = Object.values(METALS).find((m) => m.key === metalKey); if (!metalConfig) return;",
    "context_clues": [
      "update",
      "spot",
      "card",
      "color",
      "updates",
      "based",
      "price",
      "movement",
      "compared",
      "last",
      "history",
      "entry",
      "param",
      "string",
      "metalkey"
    ],
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:card": {
    "category": "context_clues",
    "keyword": "card",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "updateSpotCardColor"
    ],
    "description": "Code related to card",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:movement": {
    "category": "context_clues",
    "keyword": "movement",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "updateSpotCardColor"
    ],
    "description": "Code related to movement",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:compared": {
    "category": "context_clues",
    "keyword": "compared",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "updateSpotCardColor"
    ],
    "description": "Code related to compared",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:metalkey": {
    "category": "context_clues",
    "keyword": "metalkey",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "updateSpotCardColor",
      "updateManualSpot",
      "resetSpot"
    ],
    "description": "Code related to metalkey",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "function:fetchSpotPrice": {
    "category": "code_functions",
    "keyword": "fetchSpotPrice",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "fetchSpotPrice"
    ],
    "description": " Fetches and displays current spot prices from localStorage or defaults ",
    "context_weight": 0.9,
    "line_number": 154,
    "body_preview": "const fetchSpotPrice = () => { // Load spot prices for all metals Object.values(METALS).forEach((metalConfig) => {",
    "context_clues": [
      "fetch",
      "spot",
      "price",
      "fetches",
      "displays",
      "current",
      "prices",
      "from",
      "localstorage",
      "defaults",
      "fetchspotprice",
      "load",
      "getitem",
      "parsefloat"
    ],
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:fetches": {
    "category": "context_clues",
    "keyword": "fetches",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "fetchSpotPrice"
    ],
    "description": "Code related to fetches",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "context:fetchspotprice": {
    "category": "context_clues",
    "keyword": "fetchspotprice",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "fetchSpotPrice"
    ],
    "description": "Code related to fetchspotprice",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "function:updateManualSpot": {
    "category": "code_functions",
    "keyword": "updateManualSpot",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "updateManualSpot"
    ],
    "description": " Updates spot price for specified metal from user input  @param {string} metalKey - Key of metal to update ('silver', 'gold', 'platinum', 'palladium') ",
    "context_weight": 0.9,
    "line_number": 203,
    "body_preview": "const updateManualSpot = (metalKey) => { const metalConfig = Object.values(METALS).find((m) => m.key === metalKey); if (!metalConfig) return;",
    "context_clues": [
      "update",
      "manual",
      "spot",
      "updates",
      "price",
      "specified",
      "metal",
      "from",
      "user",
      "input",
      "param",
      "string",
      "metalkey",
      "silver",
      "gold"
    ],
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "function:resetSpot": {
    "category": "code_functions",
    "keyword": "resetSpot",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "resetSpot"
    ],
    "description": " Resets spot price for specified metal to default or API cached value  @param {string} metalKey - Key of metal to reset ('silver', 'gold', 'platinum', 'palladium') ",
    "context_weight": 0.9,
    "line_number": 253,
    "body_preview": "const resetSpot = (metalKey) => { const metalConfig = Object.values(METALS).find((m) => m.key === metalKey); if (!metalConfig) return;",
    "context_clues": [
      "reset",
      "spot",
      "resets",
      "price",
      "specified",
      "metal",
      "default",
      "cached",
      "value",
      "param",
      "string",
      "metalkey",
      "silver",
      "gold",
      "platinum"
    ],
    "last_updated": "2025-08-20T17:24:09.729Z"
  },
  "function:resetSpotByName": {
    "category": "code_functions",
    "keyword": "resetSpotByName",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "resetSpotByName"
    ],
    "description": " Alternative reset function that works with metal name instead of key This provides compatibility with the API.js resetSpotPrice function  @param {string} metalName - Name of metal to reset ('Silver', 'Gold', etc.) ",
    "context_weight": 0.9,
    "line_number": 315,
    "body_preview": "const resetSpotByName = (metalName) => { const metalConfig = Object.values(METALS).find((m) => m.name === metalName); if (metalConfig) {",
    "context_clues": [
      "reset",
      "spot",
      "name",
      "alternative",
      "that",
      "works",
      "with",
      "metal",
      "instead",
      "this",
      "provides",
      "compatibility",
      "apijs",
      "resetspotprice",
      "param"
    ],
    "last_updated": "2025-08-20T17:24:09.730Z"
  },
  "context:alternative": {
    "category": "context_clues",
    "keyword": "alternative",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "resetSpotByName"
    ],
    "description": "Code related to alternative",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.730Z"
  },
  "context:works": {
    "category": "context_clues",
    "keyword": "works",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "resetSpotByName"
    ],
    "description": "Code related to works",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.730Z"
  },
  "context:apijs": {
    "category": "context_clues",
    "keyword": "apijs",
    "files": [
      "rProjects/StackTrackr/js/spot.js"
    ],
    "functions": [
      "resetSpotByName"
    ],
    "description": "Code related to apijs",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.730Z"
  },
  "function:setTheme": {
    "category": "code_functions",
    "keyword": "setTheme",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "setTheme"
    ],
    "description": "THEME MANAGEMENT =============================================================================  Sets application theme and updates localStorage  @param {string} theme - 'dark', 'light', or 'sepia' ",
    "context_weight": 0.9,
    "line_number": 9,
    "body_preview": "const setTheme = (theme) => { if (theme === \"dark\") { document.documentElement.setAttribute(\"data-theme\", \"dark\");",
    "context_clues": [
      "set",
      "theme",
      "management",
      "sets",
      "application",
      "updates",
      "localstorage",
      "param",
      "string",
      "dark",
      "light",
      "sepia",
      "settheme",
      "setattribute",
      "setitem"
    ],
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:management": {
    "category": "context_clues",
    "keyword": "management",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "setTheme"
    ],
    "description": "Code related to management",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:dark": {
    "category": "context_clues",
    "keyword": "dark",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "setTheme",
      "toggleTheme"
    ],
    "description": "Code related to dark",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:light": {
    "category": "context_clues",
    "keyword": "light",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "setTheme",
      "toggleTheme"
    ],
    "description": "Code related to light",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:sepia": {
    "category": "context_clues",
    "keyword": "sepia",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "setTheme",
      "toggleTheme"
    ],
    "description": "Code related to sepia",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:setattribute": {
    "category": "context_clues",
    "keyword": "setattribute",
    "files": [
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "setTheme",
      "toggleTheme"
    ],
    "description": "Code related to setattribute",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.767Z"
  },
  "file:theme.js": {
    "category": "file_relationships",
    "keyword": "theme.js",
    "primary_file": "rProjects/StackTrackr/js/theme.js",
    "functions": [
      "setTheme",
      "initTheme",
      "toggleTheme",
      "setupSystemThemeListener"
    ],
    "description": "File containing setTheme and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.156Z"
  },
  "function:initTheme": {
    "category": "code_functions",
    "keyword": "initTheme",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "initTheme"
    ],
    "description": " Initializes theme based on user preference and system settings ",
    "context_weight": 0.9,
    "line_number": 32,
    "body_preview": "const initTheme = () => { const savedTheme = localStorage.getItem(THEME_KEY); const systemPrefersDark =",
    "context_clues": [
      "init",
      "theme",
      "initializes",
      "based",
      "user",
      "preference",
      "system",
      "settings",
      "inittheme",
      "savedtheme",
      "getitem",
      "settheme",
      "load"
    ],
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:initializes": {
    "category": "context_clues",
    "keyword": "initializes",
    "files": [
      "rProjects/StackTrackr/js/theme.js",
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "initTheme",
      "openModalById"
    ],
    "description": "Code related to initializes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:preference": {
    "category": "context_clues",
    "keyword": "preference",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "initTheme"
    ],
    "description": "Code related to preference",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "function:toggleTheme": {
    "category": "code_functions",
    "keyword": "toggleTheme",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "toggleTheme"
    ],
    "description": "Function toggleTheme in utils.js",
    "context_weight": 0.9,
    "line_number": 2260,
    "body_preview": "function toggleTheme() { const html = document.documentElement; const currentTheme = html.getAttribute('data-theme');",
    "context_clues": [
      "toggle",
      "theme",
      "getattribute",
      "setattribute",
      "initializestoragechart",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.767Z"
  },
  "context:cycles": {
    "category": "context_clues",
    "keyword": "cycles",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "toggleTheme"
    ],
    "description": "Code related to cycles",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:themes": {
    "category": "context_clues",
    "keyword": "themes",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "toggleTheme"
    ],
    "description": "Code related to themes",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "function:setupSystemThemeListener": {
    "category": "code_functions",
    "keyword": "setupSystemThemeListener",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "setupSystemThemeListener"
    ],
    "description": " Sets up system theme change listener ",
    "context_weight": 0.9,
    "line_number": 66,
    "body_preview": "const setupSystemThemeListener = () => { if (window.matchMedia) { window",
    "context_clues": [
      "setup",
      "system",
      "theme",
      "listener",
      "sets",
      "change",
      "setupsystemthemelistener",
      "addeventlistener",
      "set",
      "getitem",
      "settheme"
    ],
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "context:setupsystemthemelistener": {
    "category": "context_clues",
    "keyword": "setupsystemthemelistener",
    "files": [
      "rProjects/StackTrackr/js/theme.js"
    ],
    "functions": [
      "setupSystemThemeListener"
    ],
    "description": "Code related to setupsystemthemelistener",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.753Z"
  },
  "function:parseDate": {
    "category": "code_functions",
    "keyword": "parseDate",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseDate"
    ],
    "description": " Parses various date formats into standard YYYY-MM-DD format  Handles: - ISO format (YYYY-MM-DD) - US format (MM/DD/YYYY) - European format (DD/MM/YYYY) - Year-first format (YYYY/MM/DD)  Uses intelligent parsing to distinguish between US and European formats based on date values and context clues.  @param {string} dateStr - Date string in any supported format @returns {string} Date in YYYY-MM-DD format, or 'Unknown' if parsing fails ",
    "context_weight": 0.9,
    "line_number": 336,
    "body_preview": "function parseDate(dateStr) { if (!dateStr) return '—'; // Clean the input string",
    "context_clues": [
      "parse",
      "date",
      "parses",
      "various",
      "formats",
      "into",
      "standard",
      "yyyymmdd",
      "format",
      "handles",
      "mmddyyyy",
      "european",
      "ddmmyyyy",
      "yearfirst",
      "uses"
    ],
    "last_updated": "2025-08-20T17:24:09.766Z"
  },
  "context:parses": {
    "category": "context_clues",
    "keyword": "parses",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseDate",
      "currentMonthKey"
    ],
    "description": "Code related to parses",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:various": {
    "category": "context_clues",
    "keyword": "various",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseDate"
    ],
    "description": "Code related to various",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.766Z"
  },
  "context:standard": {
    "category": "context_clues",
    "keyword": "standard",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseDate"
    ],
    "description": "Code related to standard",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.766Z"
  },
  "context:yyyymmdd": {
    "category": "context_clues",
    "keyword": "yyyymmdd",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseDate",
      "todayStr"
    ],
    "description": "Code related to yyyymmdd",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:mmddyyyy": {
    "category": "context_clues",
    "keyword": "mmddyyyy",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseDate"
    ],
    "description": "Code related to mmddyyyy",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.766Z"
  },
  "context:european": {
    "category": "context_clues",
    "keyword": "european",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseDate"
    ],
    "description": "Code related to european",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.766Z"
  },
  "context:ddmmyyyy": {
    "category": "context_clues",
    "keyword": "ddmmyyyy",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseDate"
    ],
    "description": "Code related to ddmmyyyy",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.766Z"
  },
  "context:yearfirst": {
    "category": "context_clues",
    "keyword": "yearfirst",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseDate"
    ],
    "description": "Code related to yearfirst",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.766Z"
  },
  "file:utils.js": {
    "category": "file_relationships",
    "keyword": "utils.js",
    "primary_file": "rProjects/StackTrackr/js/utils.js",
    "functions": [
      "parseDate",
      "getChartColor",
      "toggleTheme",
      "initializeStorageChart",
      "showItemDetail",
      "closeItemDetail",
      "generateDetailContent",
      "generateInventoryTable",
      "getStorageItemDisplayName",
      "__compressIfNeeded",
      "__decompressIfNeeded",
      "getContrastColor",
      "generateStorageReport",
      "openEbaySearch",
      "debugLog",
      "getBrandingName",
      "getAppTitle",
      "getFooterDomain",
      "monitorPerformance",
      "debounce",
      "later",
      "checkFileSize",
      "refreshCompositionOptions",
      "addCompositionOption",
      "getCompositionFirstWords",
      "getDisplayComposition",
      "getLastUpdateTime",
      "updateSpotTimestamp",
      "pad2",
      "todayStr",
      "currentMonthKey",
      "formatDisplayDate",
      "formatCurrency",
      "formatLossProfit",
      "sanitizeHtml",
      "gramsToOzt",
      "oztToGrams",
      "formatWeight",
      "convertToUsd",
      "detectCurrency",
      "stripNonAlphanumeric",
      "cleanString",
      "sanitizeObjectFields",
      "normalizeType",
      "mapNumistaType",
      "parseNumistaMetal",
      "saveData",
      "loadData",
      "saveDataSync",
      "loadDataSync",
      "cleanupStorage",
      "sortInventoryByDateNewestFirst",
      "validateInventoryItem",
      "sanitizeImportedItem",
      "cleanMultilineString",
      "handleError",
      "getUserFriendlyMessage",
      "downloadFile",
      "updateStorageStats",
      "downloadStorageReport",
      "closeModal",
      "openStorageReportPopup",
      "closeModalById",
      "openModalById",
      "generateStorageReportHTML",
      "analyzeStorageData",
      "analyzeStorageItem",
      "getStorageItemDescription",
      "createStorageItemModal",
      "generateItemDataTable",
      "getStorageReportCSS",
      "getStorageReportJS",
      "generateStorageReportTar"
    ],
    "description": "File containing parseDate and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.195Z"
  },
  "function:getChartColor": {
    "category": "code_functions",
    "keyword": "getChartColor",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getChartColor"
    ],
    "description": " Gets chart color for given index ",
    "context_weight": 0.9,
    "line_number": 1257,
    "body_preview": "const getChartColor = (index) => { const colors = [ '#007bff', '#28a745', '#ffc107', '#dc3545', '#6f42c1',",
    "context_clues": [
      "get",
      "chart",
      "color",
      "gets",
      "given",
      "index",
      "getchartcolor",
      "calculates",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.789Z"
  },
  "context:getchartcolor": {
    "category": "context_clues",
    "keyword": "getchartcolor",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getChartColor",
      "getStorageReportJS"
    ],
    "description": "Code related to getchartcolor",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:utils": {
    "category": "context_clues",
    "keyword": "utils",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getChartColor",
      "toggleTheme",
      "initializeStorageChart",
      "showItemDetail",
      "closeItemDetail",
      "generateDetailContent",
      "generateInventoryTable",
      "getStorageItemDisplayName",
      "__compressIfNeeded",
      "__decompressIfNeeded",
      "generateStorageReport",
      "openEbaySearch",
      "getBrandingName",
      "getFooterDomain",
      "monitorPerformance",
      "later",
      "refreshCompositionOptions",
      "addCompositionOption",
      "todayStr",
      "currentMonthKey",
      "gramsToOzt",
      "oztToGrams",
      "sanitizeObjectFields",
      "normalizeType",
      "mapNumistaType",
      "saveData",
      "loadDataSync",
      "sortInventoryByDateNewestFirst",
      "cleanMultilineString",
      "updateStorageStats",
      "downloadStorageReport",
      "closeModal",
      "openStorageReportPopup",
      "closeModalById",
      "generateStorageReportHTML",
      "analyzeStorageData",
      "analyzeStorageItem",
      "getStorageItemDescription",
      "createStorageItemModal",
      "generateItemDataTable",
      "getStorageReportCSS",
      "getStorageReportJS",
      "generateStorageReportTar"
    ],
    "description": "Code related to utils",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.792Z"
  },
  "function:initializeStorageChart": {
    "category": "code_functions",
    "keyword": "initializeStorageChart",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "initializeStorageChart"
    ],
    "description": "Function initializeStorageChart in utils.js",
    "context_weight": 0.9,
    "line_number": 2273,
    "body_preview": "function initializeStorageChart(reportData) { currentReportData = reportData; const currentChartItems = reportData.items.slice(0, 5);",
    "context_clues": [
      "initialize",
      "storage",
      "chart",
      "initializestoragechart",
      "getelementbyid",
      "getcontext",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.767Z"
  },
  "context:getcontext": {
    "category": "context_clues",
    "keyword": "getcontext",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "initializeStorageChart",
      "createHistoryChart",
      "renderChart",
      "renderHistories"
    ],
    "description": "Code related to getcontext",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "function:showItemDetail": {
    "category": "code_functions",
    "keyword": "showItemDetail",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "showItemDetail"
    ],
    "description": "Function showItemDetail in utils.js",
    "context_weight": 0.9,
    "line_number": 2345,
    "body_preview": "function showItemDetail(key) { const item = currentReportData.items.find(i => i.key === key); if (!item) return;",
    "context_clues": [
      "show",
      "item",
      "detail",
      "find",
      "getelementbyid",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.768Z"
  },
  "context:detail": {
    "category": "context_clues",
    "keyword": "detail",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "showItemDetail",
      "closeItemDetail",
      "generateDetailContent"
    ],
    "description": "Code related to detail",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.769Z"
  },
  "function:closeItemDetail": {
    "category": "code_functions",
    "keyword": "closeItemDetail",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeItemDetail"
    ],
    "description": "Function closeItemDetail in utils.js",
    "context_weight": 0.9,
    "line_number": 2362,
    "body_preview": "function closeItemDetail() { const modal = document.getElementById('itemDetailModal'); if (modal) {",
    "context_clues": [
      "close",
      "item",
      "detail",
      "closeitemdetail",
      "getelementbyid",
      "generatedetailcontent",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.768Z"
  },
  "context:closeitemdetail": {
    "category": "context_clues",
    "keyword": "closeitemdetail",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeItemDetail"
    ],
    "description": "Code related to closeitemdetail",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.768Z"
  },
  "context:generatedetailcontent": {
    "category": "context_clues",
    "keyword": "generatedetailcontent",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeItemDetail",
      "generateDetailContent"
    ],
    "description": "Code related to generatedetailcontent",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.769Z"
  },
  "function:generateDetailContent": {
    "category": "code_functions",
    "keyword": "generateDetailContent",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateDetailContent"
    ],
    "description": "Function generateDetailContent in utils.js",
    "context_weight": 0.9,
    "line_number": 2370,
    "body_preview": "function generateDetailContent(item) { let content = \\` <div class=\"detail-stats\">",
    "context_clues": [
      "generate",
      "detail",
      "content",
      "generatedetailcontent",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.769Z"
  },
  "function:generateInventoryTable": {
    "category": "code_functions",
    "keyword": "generateInventoryTable",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateInventoryTable"
    ],
    "description": "Function generateInventoryTable in utils.js",
    "context_weight": 0.9,
    "line_number": 2407,
    "body_preview": "function generateInventoryTable(data) { if (!data || data.length === 0) return '<p>No inventory data found</p>'; const headers = Object.keys(data[0]);",
    "context_clues": [
      "generate",
      "inventory",
      "table",
      "generateinventorytable",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.769Z"
  },
  "context:generateinventorytable": {
    "category": "context_clues",
    "keyword": "generateinventorytable",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateInventoryTable"
    ],
    "description": "Code related to generateinventorytable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.769Z"
  },
  "function:getStorageItemDisplayName": {
    "category": "code_functions",
    "keyword": "getStorageItemDisplayName",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageItemDisplayName"
    ],
    "description": " Gets display name for storage keys ",
    "context_weight": 0.9,
    "line_number": 1351,
    "body_preview": "const getStorageItemDisplayName = (key) => { const names = { 'precious-metals-inventory': 'Inventory Data',",
    "context_clues": [
      "get",
      "storage",
      "item",
      "display",
      "name",
      "gets",
      "keys",
      "getstorageitemdisplayname",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "context:getstorageitemdisplayname": {
    "category": "context_clues",
    "keyword": "getstorageitemdisplayname",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageItemDisplayName",
      "createStorageItemModal"
    ],
    "description": "Code related to getstorageitemdisplayname",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "function:__compressIfNeeded": {
    "category": "code_functions",
    "keyword": "__compressIfNeeded",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "__compressIfNeeded"
    ],
    "description": "Function __compressIfNeeded in utils.js",
    "context_weight": 0.9,
    "line_number": 2550,
    "body_preview": "function __compressIfNeeded(str){ try{ if(!str || str.length < 4096) return str;",
    "context_clues": [
      "compress",
      "needed",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.770Z"
  },
  "context:compress": {
    "category": "context_clues",
    "keyword": "compress",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "__compressIfNeeded"
    ],
    "description": "Code related to compress",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.770Z"
  },
  "function:__decompressIfNeeded": {
    "category": "code_functions",
    "keyword": "__decompressIfNeeded",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "__decompressIfNeeded"
    ],
    "description": "Function __decompressIfNeeded in utils.js",
    "context_weight": 0.9,
    "line_number": 2557,
    "body_preview": "function __decompressIfNeeded(stored){ try{ if(typeof stored !== 'string') return stored;",
    "context_clues": [
      "decompress",
      "needed",
      "startswith",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.770Z"
  },
  "context:decompress": {
    "category": "context_clues",
    "keyword": "decompress",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "__decompressIfNeeded"
    ],
    "description": "Code related to decompress",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.770Z"
  },
  "function:getContrastColor": {
    "category": "code_functions",
    "keyword": "getContrastColor",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getContrastColor"
    ],
    "description": " Returns black or white contrast color for a given background. Supports hex strings and CSS variables. @param {string} bg - Background color in hex or CSS var format @returns {string} '#000000' or '#ffffff' ",
    "context_weight": 0.9,
    "line_number": 2573,
    "body_preview": "function getContrastColor(bg) { if (!bg) return '#000000'; let hex = bg.trim();",
    "context_clues": [
      "get",
      "contrast",
      "color",
      "black",
      "white",
      "given",
      "background",
      "supports",
      "strings",
      "variables",
      "param",
      "string",
      "format",
      "000000",
      "ffffff"
    ],
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:contrast": {
    "category": "context_clues",
    "keyword": "contrast",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getContrastColor"
    ],
    "description": "Code related to contrast",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:black": {
    "category": "context_clues",
    "keyword": "black",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getContrastColor"
    ],
    "description": "Code related to black",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:white": {
    "category": "context_clues",
    "keyword": "white",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getContrastColor"
    ],
    "description": "Code related to white",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:000000": {
    "category": "context_clues",
    "keyword": "000000",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getContrastColor"
    ],
    "description": "Code related to 000000",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:ffffff": {
    "category": "context_clues",
    "keyword": "ffffff",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getContrastColor"
    ],
    "description": "Code related to ffffff",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "function:generateStorageReport": {
    "category": "code_functions",
    "keyword": "generateStorageReport",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateStorageReport"
    ],
    "description": "Generates a storage utilization report */",
    "context_weight": 0.9,
    "line_number": 2597,
    "body_preview": "function generateStorageReport(){ try{ const items = [];",
    "context_clues": [
      "generate",
      "storage",
      "report",
      "generates",
      "utilization",
      "generatestoragereport",
      "getitem",
      "sort",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "context:report": {
    "category": "context_clues",
    "keyword": "report",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "generateStorageReport",
      "downloadStorageReport",
      "openStorageReportPopup",
      "generateStorageReportHTML",
      "getStorageReportCSS",
      "getStorageReportJS",
      "generateStorageReportTar",
      "generateHTMLReport",
      "generateLatestResultsHTML",
      "generateHistoryTableHTML",
      "generateLatestResults",
      "generateHistoryTable",
      "downloadHTMLReport"
    ],
    "description": "Code related to report",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:utilization": {
    "category": "context_clues",
    "keyword": "utilization",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateStorageReport"
    ],
    "description": "Code related to utilization",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.771Z"
  },
  "function:openEbaySearch": {
    "category": "code_functions",
    "keyword": "openEbaySearch",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openEbaySearch"
    ],
    "description": " Opens eBay sold listings search for the given item name and metal @param {string} searchTerm - The item name and metal to search for ",
    "context_weight": 0.9,
    "line_number": 2616,
    "body_preview": "function openEbaySearch(searchTerm) { if (!searchTerm) return; // Clean and format the search term",
    "context_clues": [
      "open",
      "ebay",
      "search",
      "opens",
      "sold",
      "listings",
      "given",
      "item",
      "name",
      "metal",
      "param",
      "string",
      "searchterm",
      "openebaysearch",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "context:ebay": {
    "category": "context_clues",
    "keyword": "ebay",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openEbaySearch"
    ],
    "description": "Code related to ebay",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "context:sold": {
    "category": "context_clues",
    "keyword": "sold",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openEbaySearch"
    ],
    "description": "Code related to sold",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "context:listings": {
    "category": "context_clues",
    "keyword": "listings",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openEbaySearch"
    ],
    "description": "Code related to listings",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "context:searchterm": {
    "category": "context_clues",
    "keyword": "searchterm",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openEbaySearch"
    ],
    "description": "Code related to searchterm",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "context:openebaysearch": {
    "category": "context_clues",
    "keyword": "openebaysearch",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openEbaySearch"
    ],
    "description": "Code related to openebaysearch",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "function:debugLog": {
    "category": "code_functions",
    "keyword": "debugLog",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debugLog"
    ],
    "description": "UTILITY FUNCTIONS  Logs messages to console when DEBUG flag is enabled  @param {...any} args - Values to log when debugging ",
    "context_weight": 0.9,
    "line_number": 16,
    "body_preview": "const debugLog = (...args) => { if (DEBUG) { console.log(...args);",
    "context_clues": [
      "debug",
      "log",
      "utility",
      "functions",
      "logs",
      "messages",
      "console",
      "when",
      "flag",
      "enabled",
      "param",
      "args",
      "values",
      "debugging",
      "gets"
    ],
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "context:utility": {
    "category": "context_clues",
    "keyword": "utility",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debugLog",
      "monitorPerformance"
    ],
    "description": "Code related to utility",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:messages": {
    "category": "context_clues",
    "keyword": "messages",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debugLog",
      "getUserFriendlyMessage"
    ],
    "description": "Code related to messages",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:args": {
    "category": "context_clues",
    "keyword": "args",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "debugLog",
      "monitorPerformance",
      "parseArgs"
    ],
    "description": "Code related to args",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:debugging": {
    "category": "context_clues",
    "keyword": "debugging",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debugLog"
    ],
    "description": "Code related to debugging",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.772Z"
  },
  "function:getBrandingName": {
    "category": "code_functions",
    "keyword": "getBrandingName",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getBrandingName"
    ],
    "description": "Function getBrandingName in utils.js",
    "context_weight": 0.9,
    "line_number": 27,
    "body_preview": "const getBrandingName = () => { if ( !BRANDING_DOMAIN_OVERRIDE &&",
    "context_clues": [
      "get",
      "branding",
      "name",
      "getbrandingname",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "function:getAppTitle": {
    "category": "code_functions",
    "keyword": "getAppTitle",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getAppTitle"
    ],
    "description": " Returns full application title with version when no branding is configured  @param {string} [baseTitle='StackrTrackr'] - Base application title @returns {string} Full title with version or branding name ",
    "context_weight": 0.9,
    "line_number": 49,
    "body_preview": "const getAppTitle = (baseTitle = \"StackrTrackr\") => { const brand = getBrandingName(); return brand && brand.trim() ? brand : `${baseTitle} ${getVersionString()}`;",
    "context_clues": [
      "get",
      "app",
      "title",
      "full",
      "application",
      "with",
      "version",
      "when",
      "branding",
      "configured",
      "param",
      "string",
      "basetitlestackrtrackr",
      "base",
      "name"
    ],
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "context:app": {
    "category": "context_clues",
    "keyword": "app",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "getAppTitle",
      "displayLatestResults",
      "generateHTMLReport",
      "generateLatestResultsHTML",
      "generateHistoryTableHTML",
      "updateHistoryCharts",
      "createHistoryChart",
      "createHistoryTable",
      "colLetterToIndex",
      "translateFormula",
      "toNumber",
      "applyFormulaToData",
      "renderTable",
      "colIndexToLetter",
      "renderChart",
      "storeCurrentResults",
      "generateSampleData",
      "getTrendIndicator",
      "updateProgressBar",
      "autoCalculatePanels",
      "setTrackedPanel",
      "filenamePatternFrom",
      "renderHistories",
      "syncApplicationDocs",
      "generateIndexHTML",
      "main"
    ],
    "description": "Code related to app",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.417Z"
  },
  "context:title": {
    "category": "context_clues",
    "keyword": "title",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getAppTitle"
    ],
    "description": "Code related to title",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "context:basetitlestackrtrackr": {
    "category": "context_clues",
    "keyword": "basetitlestackrtrackr",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getAppTitle"
    ],
    "description": "Code related to basetitlestackrtrackr",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "function:getFooterDomain": {
    "category": "code_functions",
    "keyword": "getFooterDomain",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getFooterDomain"
    ],
    "description": " Determines active domain for footer copyright  @returns {string} Domain name to display ",
    "context_weight": 0.9,
    "line_number": 59,
    "body_preview": "const getFooterDomain = () => { const host = window.location.hostname.toLowerCase(); if (host.includes(\"stackrtrackr.com\")) return \"stackrtrackr.com\";",
    "context_clues": [
      "get",
      "footer",
      "domain",
      "determines",
      "active",
      "copyright",
      "string",
      "name",
      "display",
      "getfooterdomain",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "context:domain": {
    "category": "context_clues",
    "keyword": "domain",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getFooterDomain"
    ],
    "description": "Code related to domain",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "context:determines": {
    "category": "context_clues",
    "keyword": "determines",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getFooterDomain",
      "getDisplayComposition",
      "parseNumistaMetal"
    ],
    "description": "Code related to determines",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:copyright": {
    "category": "context_clues",
    "keyword": "copyright",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getFooterDomain"
    ],
    "description": "Code related to copyright",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "context:getfooterdomain": {
    "category": "context_clues",
    "keyword": "getfooterdomain",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getFooterDomain"
    ],
    "description": "Code related to getfooterdomain",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.773Z"
  },
  "function:monitorPerformance": {
    "category": "code_functions",
    "keyword": "monitorPerformance",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "monitorPerformance"
    ],
    "description": " Performance monitoring utility  @param {Function} fn - Function to monitor @param {string} name - Name for logging @param {...any} args - Arguments to pass to function @returns {any} Result of function execution ",
    "context_weight": 0.9,
    "line_number": 74,
    "body_preview": "const monitorPerformance = (fn, name, ...args) => { const startTime = performance.now(); const result = fn(...args);",
    "context_clues": [
      "monitor",
      "performance",
      "monitoring",
      "utility",
      "param",
      "string",
      "name",
      "logging",
      "args",
      "arguments",
      "pass",
      "result",
      "execution",
      "starttime",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:monitor": {
    "category": "context_clues",
    "keyword": "monitor",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "monitorPerformance"
    ],
    "description": "Code related to monitor",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:performance": {
    "category": "context_clues",
    "keyword": "performance",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rScripts/performance_analysis.py"
    ],
    "functions": [
      "monitorPerformance",
      "__init__",
      "main"
    ],
    "description": "Code related to performance",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.287Z"
  },
  "context:monitoring": {
    "category": "context_clues",
    "keyword": "monitoring",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "monitorPerformance"
    ],
    "description": "Code related to monitoring",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:logging": {
    "category": "context_clues",
    "keyword": "logging",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rScripts/mcp_json_sync.py"
    ],
    "functions": [
      "monitorPerformance",
      "setup_logging"
    ],
    "description": "Code related to logging",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "context:arguments": {
    "category": "context_clues",
    "keyword": "arguments",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "monitorPerformance",
      "parseArgs"
    ],
    "description": "Code related to arguments",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:pass": {
    "category": "context_clues",
    "keyword": "pass",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "monitorPerformance"
    ],
    "description": "Code related to pass",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:starttime": {
    "category": "context_clues",
    "keyword": "starttime",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rEngine/call-llm.js"
    ],
    "functions": [
      "monitorPerformance",
      "performSearch",
      "callLLM"
    ],
    "description": "Code related to starttime",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "function:debounce": {
    "category": "code_functions",
    "keyword": "debounce",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": " Creates a debounced function that delays invoking `func` until after `wait` milliseconds have elapsed since the last time the debounced function was invoked. The debounced function comes with a `cancel` method to cancel delayed `func` invocations and a `flush` method to immediately invoke them.  @param {Function} func The function to debounce. @param {number} wait The number of milliseconds to delay. @returns {Function} Returns the new debounced function. ",
    "context_weight": 0.9,
    "line_number": 99,
    "body_preview": "const debounce = (func, wait) => { let timeout; let result;",
    "context_clues": [
      "debounce",
      "creates",
      "debounced",
      "that",
      "delays",
      "invoking",
      "func",
      "until",
      "after",
      "wait",
      "milliseconds",
      "have",
      "elapsed",
      "since",
      "last"
    ],
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:debounce": {
    "category": "context_clues",
    "keyword": "debounce",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to debounce",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:debounced": {
    "category": "context_clues",
    "keyword": "debounced",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to debounced",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:delays": {
    "category": "context_clues",
    "keyword": "delays",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to delays",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:invoking": {
    "category": "context_clues",
    "keyword": "invoking",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to invoking",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:func": {
    "category": "context_clues",
    "keyword": "func",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to func",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:until": {
    "category": "context_clues",
    "keyword": "until",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to until",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:wait": {
    "category": "context_clues",
    "keyword": "wait",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to wait",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:have": {
    "category": "context_clues",
    "keyword": "have",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to have",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:elapsed": {
    "category": "context_clues",
    "keyword": "elapsed",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to elapsed",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:since": {
    "category": "context_clues",
    "keyword": "since",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "debounce"
    ],
    "description": "Code related to since",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "function:later": {
    "category": "code_functions",
    "keyword": "later",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "later"
    ],
    "description": "Function later in utils.js",
    "context_weight": 0.9,
    "line_number": 103,
    "body_preview": "const later = (context, args) => { timeout = null; if (args) {",
    "context_clues": [
      "later",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "context:later": {
    "category": "context_clues",
    "keyword": "later",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "later"
    ],
    "description": "Code related to later",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.774Z"
  },
  "function:checkFileSize": {
    "category": "code_functions",
    "keyword": "checkFileSize",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "checkFileSize"
    ],
    "description": " Checks if a file exceeds the local upload size limit  @param {File} file - File to validate @returns {boolean} True if file is within allowed size ",
    "context_weight": 0.9,
    "line_number": 140,
    "body_preview": "const checkFileSize = (file) => { const limit = cloudBackupEnabled ? Infinity : MAX_LOCAL_FILE_SIZE; return file.size <= limit;",
    "context_clues": [
      "check",
      "file",
      "size",
      "checks",
      "exceeds",
      "local",
      "upload",
      "limit",
      "param",
      "validate",
      "boolean",
      "true",
      "within",
      "allowed",
      "checkfilesize"
    ],
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:size": {
    "category": "context_clues",
    "keyword": "size",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "checkFileSize"
    ],
    "description": "Code related to size",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:exceeds": {
    "category": "context_clues",
    "keyword": "exceeds",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "checkFileSize"
    ],
    "description": "Code related to exceeds",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:local": {
    "category": "context_clues",
    "keyword": "local",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "checkFileSize",
      "initLocalStorage"
    ],
    "description": "Code related to local",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:upload": {
    "category": "context_clues",
    "keyword": "upload",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "checkFileSize",
      "generateSampleData",
      "handleBulkUpload",
      "parseCSVFile",
      "processVPRData",
      "saveResultsToHistory"
    ],
    "description": "Code related to upload",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.874Z"
  },
  "context:limit": {
    "category": "context_clues",
    "keyword": "limit",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "checkFileSize"
    ],
    "description": "Code related to limit",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:allowed": {
    "category": "context_clues",
    "keyword": "allowed",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "checkFileSize"
    ],
    "description": "Code related to allowed",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:checkfilesize": {
    "category": "context_clues",
    "keyword": "checkfilesize",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "checkFileSize"
    ],
    "description": "Code related to checkfilesize",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "function:refreshCompositionOptions": {
    "category": "code_functions",
    "keyword": "refreshCompositionOptions",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "refreshCompositionOptions"
    ],
    "description": " Refreshes composition dropdown options in add/edit modals ",
    "context_weight": 0.9,
    "line_number": 148,
    "body_preview": "const refreshCompositionOptions = () => { const priority = [\"Gold\", \"Silver\", \"Platinum\", \"Palladium\", \"Alloy\"]; const sorted = [...compositionOptions].sort((a, b) => {",
    "context_clues": [
      "refresh",
      "composition",
      "options",
      "refreshes",
      "dropdown",
      "addedit",
      "modals",
      "sorted",
      "sort",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:composition": {
    "category": "context_clues",
    "keyword": "composition",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "refreshCompositionOptions",
      "addCompositionOption",
      "getCompositionFirstWords",
      "getDisplayComposition",
      "parseNumistaMetal"
    ],
    "description": "Code related to composition",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:dropdown": {
    "category": "context_clues",
    "keyword": "dropdown",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "refreshCompositionOptions"
    ],
    "description": "Code related to dropdown",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:addedit": {
    "category": "context_clues",
    "keyword": "addedit",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "refreshCompositionOptions"
    ],
    "description": "Code related to addedit",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:modals": {
    "category": "context_clues",
    "keyword": "modals",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "refreshCompositionOptions"
    ],
    "description": "Code related to modals",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "function:addCompositionOption": {
    "category": "code_functions",
    "keyword": "addCompositionOption",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "addCompositionOption"
    ],
    "description": " Adds a composition option and updates dropdowns  @param {string} value - Composition to add ",
    "context_weight": 0.9,
    "line_number": 173,
    "body_preview": "const addCompositionOption = (value) => { if (!value) return; compositionOptions.add(value);",
    "context_clues": [
      "add",
      "composition",
      "option",
      "adds",
      "updates",
      "dropdowns",
      "param",
      "string",
      "value",
      "addcompositionoption",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:option": {
    "category": "context_clues",
    "keyword": "option",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "addCompositionOption"
    ],
    "description": "Code related to option",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:dropdowns": {
    "category": "context_clues",
    "keyword": "dropdowns",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "addCompositionOption"
    ],
    "description": "Code related to dropdowns",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "context:addcompositionoption": {
    "category": "context_clues",
    "keyword": "addcompositionoption",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "addCompositionOption"
    ],
    "description": "Code related to addcompositionoption",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.775Z"
  },
  "function:getCompositionFirstWords": {
    "category": "code_functions",
    "keyword": "getCompositionFirstWords",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getCompositionFirstWords"
    ],
    "description": " Extracts up to the first two words from a composition string while removing parenthetical content and numeric values.  @param {string} composition - Raw composition description @returns {string} First two cleaned words joined by a space ",
    "context_weight": 0.9,
    "line_number": 186,
    "body_preview": "const getCompositionFirstWords = (composition = \"\") => { return composition .replace(/\\([^)]*\\)/g, \"\") // remove parentheses and their contents",
    "context_clues": [
      "get",
      "composition",
      "first",
      "words",
      "extracts",
      "from",
      "string",
      "while",
      "removing",
      "parenthetical",
      "content",
      "numeric",
      "values",
      "param",
      "description"
    ],
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:extracts": {
    "category": "context_clues",
    "keyword": "extracts",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getCompositionFirstWords",
      "getChangelogForVersion"
    ],
    "description": "Code related to extracts",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:removing": {
    "category": "context_clues",
    "keyword": "removing",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getCompositionFirstWords"
    ],
    "description": "Code related to removing",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:parenthetical": {
    "category": "context_clues",
    "keyword": "parenthetical",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getCompositionFirstWords"
    ],
    "description": "Code related to parenthetical",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:description": {
    "category": "context_clues",
    "keyword": "description",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getCompositionFirstWords",
      "parseNumistaMetal",
      "getStorageItemDescription"
    ],
    "description": "Code related to description",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "function:getDisplayComposition": {
    "category": "code_functions",
    "keyword": "getDisplayComposition",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getDisplayComposition"
    ],
    "description": " Determines display-friendly composition text.  Returns \"Alloy\" when the first word isn't one of the primary metals (Gold, Silver, Platinum, Palladium).  @param {string} composition - Raw composition description @returns {string} Display text for the composition ",
    "context_weight": 0.9,
    "line_number": 205,
    "body_preview": "const getDisplayComposition = (composition = \"\") => { const firstWords = getCompositionFirstWords(composition); const first = firstWords.split(/\\s+/)[0] || \"\";",
    "context_clues": [
      "get",
      "display",
      "composition",
      "determines",
      "displayfriendly",
      "text",
      "alloy",
      "when",
      "first",
      "word",
      "isnt",
      "primary",
      "metals",
      "gold",
      "silver"
    ],
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:displayfriendly": {
    "category": "context_clues",
    "keyword": "displayfriendly",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getDisplayComposition"
    ],
    "description": "Code related to displayfriendly",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:alloy": {
    "category": "context_clues",
    "keyword": "alloy",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getDisplayComposition",
      "parseNumistaMetal"
    ],
    "description": "Code related to alloy",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:word": {
    "category": "context_clues",
    "keyword": "word",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getDisplayComposition"
    ],
    "description": "Code related to word",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:isnt": {
    "category": "context_clues",
    "keyword": "isnt",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getDisplayComposition",
      "saveDataSync"
    ],
    "description": "Code related to isnt",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "function:getLastUpdateTime": {
    "category": "code_functions",
    "keyword": "getLastUpdateTime",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getLastUpdateTime"
    ],
    "description": " Builds two-line HTML showing source and last cache refresh or API sync info for a metal  @param {string} metalName - Metal name ('Silver', 'Gold', 'Platinum', 'Palladium') @param {string} [mode=\"cache\"] - \"cache\" or \"api\" to select timestamp @returns {string} HTML string with source line and time line ",
    "context_weight": 0.9,
    "line_number": 219,
    "body_preview": "const getLastUpdateTime = (metalName, mode = \"cache\") => { if (!spotHistory || spotHistory.length === 0) return \"\"; const metalEntries = spotHistory.filter((entry) => entry.metal === metalName);",
    "context_clues": [
      "get",
      "last",
      "update",
      "time",
      "builds",
      "twoline",
      "html",
      "showing",
      "source",
      "cache",
      "refresh",
      "sync",
      "info",
      "metal",
      "param"
    ],
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:time": {
    "category": "context_clues",
    "keyword": "time",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "getLastUpdateTime",
      "get_last_sync_time",
      "update_last_sync_time"
    ],
    "description": "Code related to time",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "context:builds": {
    "category": "context_clues",
    "keyword": "builds",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getLastUpdateTime"
    ],
    "description": "Code related to builds",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:twoline": {
    "category": "context_clues",
    "keyword": "twoline",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getLastUpdateTime"
    ],
    "description": "Code related to twoline",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:showing": {
    "category": "context_clues",
    "keyword": "showing",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getLastUpdateTime"
    ],
    "description": "Code related to showing",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "function:updateSpotTimestamp": {
    "category": "code_functions",
    "keyword": "updateSpotTimestamp",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateSpotTimestamp"
    ],
    "description": " Updates spot timestamp element with toggle between cache refresh and API sync times  @param {string} metalName - Metal name ('Silver', 'Gold', 'Platinum', 'Palladium') ",
    "context_weight": 0.9,
    "line_number": 267,
    "body_preview": "const updateSpotTimestamp = (metalName) => { const el = document.getElementById(`spotTimestamp${metalName}`); if (!el) return;",
    "context_clues": [
      "update",
      "spot",
      "timestamp",
      "updates",
      "element",
      "with",
      "toggle",
      "between",
      "cache",
      "refresh",
      "sync",
      "times",
      "param",
      "string",
      "metalname"
    ],
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:times": {
    "category": "context_clues",
    "keyword": "times",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateSpotTimestamp"
    ],
    "description": "Code related to times",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "context:metalname": {
    "category": "context_clues",
    "keyword": "metalname",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateSpotTimestamp"
    ],
    "description": "Code related to metalname",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.776Z"
  },
  "function:pad2": {
    "category": "code_functions",
    "keyword": "pad2",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "=============================================================================  Pads a number with leading zeros to ensure two-digit format  @param {number} n - Number to pad @returns {string} Two-digit string representation @example pad2(5) returns \"05\", pad2(12) returns \"12\" ",
    "context_weight": 0.9,
    "line_number": 299,
    "body_preview": "const pad2 = (n) => n.toString().padStart(2, \"0\"); /** * Returns current date as ISO string (YYYY-MM-DD)",
    "context_clues": [
      "pad2",
      "pads",
      "number",
      "with",
      "leading",
      "zeros",
      "ensure",
      "twodigit",
      "format",
      "param",
      "string",
      "representation",
      "example",
      "pad25",
      "pad212"
    ],
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:pad2": {
    "category": "context_clues",
    "keyword": "pad2",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "Code related to pad2",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:pads": {
    "category": "context_clues",
    "keyword": "pads",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "Code related to pads",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:leading": {
    "category": "context_clues",
    "keyword": "leading",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "Code related to leading",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:zeros": {
    "category": "context_clues",
    "keyword": "zeros",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "Code related to zeros",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:ensure": {
    "category": "context_clues",
    "keyword": "ensure",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "pad2",
      "ensure_vault_directory",
      "ensure_backup_dir",
      "ensure_dirs"
    ],
    "description": "Code related to ensure",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:twodigit": {
    "category": "context_clues",
    "keyword": "twodigit",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "Code related to twodigit",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:representation": {
    "category": "context_clues",
    "keyword": "representation",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "Code related to representation",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:example": {
    "category": "context_clues",
    "keyword": "example",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "Code related to example",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:pad25": {
    "category": "context_clues",
    "keyword": "pad25",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "Code related to pad25",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:pad212": {
    "category": "context_clues",
    "keyword": "pad212",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "pad2"
    ],
    "description": "Code related to pad212",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "function:todayStr": {
    "category": "code_functions",
    "keyword": "todayStr",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "todayStr"
    ],
    "description": " Returns current date as ISO string (YYYY-MM-DD)  @returns {string} Current date in ISO format ",
    "context_weight": 0.9,
    "line_number": 306,
    "body_preview": "const todayStr = () => { const d = new Date(); return `${d.getFullYear()}-${pad2(d.getMonth() + 1)}-${pad2(d.getDate())}`;",
    "context_clues": [
      "today",
      "str",
      "current",
      "date",
      "string",
      "yyyymmdd",
      "format",
      "getfullyear",
      "getmonth",
      "getdate",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:today": {
    "category": "context_clues",
    "keyword": "today",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "todayStr"
    ],
    "description": "Code related to today",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:str": {
    "category": "context_clues",
    "keyword": "str",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "todayStr"
    ],
    "description": "Code related to str",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:getfullyear": {
    "category": "context_clues",
    "keyword": "getfullyear",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "todayStr",
      "currentMonthKey"
    ],
    "description": "Code related to getfullyear",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:getmonth": {
    "category": "context_clues",
    "keyword": "getmonth",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "todayStr",
      "currentMonthKey",
      "formatDisplayDate"
    ],
    "description": "Code related to getmonth",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "function:currentMonthKey": {
    "category": "code_functions",
    "keyword": "currentMonthKey",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "currentMonthKey"
    ],
    "description": " Returns current month key in YYYY-MM format  @returns {string} Current month identifier ",
    "context_weight": 0.9,
    "line_number": 316,
    "body_preview": "const currentMonthKey = () => { const d = new Date(); return `${d.getFullYear()}-${pad2(d.getMonth() + 1)}`;",
    "context_clues": [
      "current",
      "month",
      "key",
      "yyyymm",
      "format",
      "string",
      "identifier",
      "getfullyear",
      "getmonth",
      "parses",
      "handles",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:month": {
    "category": "context_clues",
    "keyword": "month",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "currentMonthKey",
      "formatDisplayDate"
    ],
    "description": "Code related to month",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "context:yyyymm": {
    "category": "context_clues",
    "keyword": "yyyymm",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "currentMonthKey"
    ],
    "description": "Code related to yyyymm",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "context:identifier": {
    "category": "context_clues",
    "keyword": "identifier",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "currentMonthKey"
    ],
    "description": "Code related to identifier",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.777Z"
  },
  "function:formatDisplayDate": {
    "category": "code_functions",
    "keyword": "formatDisplayDate",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatDisplayDate"
    ],
    "description": " Formats a date string into Month Day, Year format  @param {string} dateStr - Date in any parseable format @returns {string} Formatted date (e.g., \"Jan 1, 1969\") ",
    "context_weight": 0.9,
    "line_number": 427,
    "body_preview": "const formatDisplayDate = (dateStr) => { if (!dateStr || dateStr === '—' || dateStr === 'Unknown') return '—'; const d = new Date(dateStr);",
    "context_clues": [
      "format",
      "display",
      "date",
      "formats",
      "string",
      "into",
      "month",
      "year",
      "param",
      "datestr",
      "parseable",
      "formatted",
      "1969",
      "getmonth",
      "getdate"
    ],
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "context:datestr": {
    "category": "context_clues",
    "keyword": "datestr",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatDisplayDate"
    ],
    "description": "Code related to datestr",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "context:parseable": {
    "category": "context_clues",
    "keyword": "parseable",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatDisplayDate"
    ],
    "description": "Code related to parseable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "context:1969": {
    "category": "context_clues",
    "keyword": "1969",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatDisplayDate"
    ],
    "description": "Code related to 1969",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "function:formatCurrency": {
    "category": "code_functions",
    "keyword": "formatCurrency",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatCurrency"
    ],
    "description": " Formats a number as a currency string using the default currency  @param {number|string} value - Number to format @param {string} [currency=DEFAULT_CURRENCY] - ISO currency code @returns {string} Formatted currency string (e.g., \"$1,234.56\") ",
    "context_weight": 0.9,
    "line_number": 446,
    "body_preview": "const formatCurrency = (value, currency = DEFAULT_CURRENCY) => { const num = parseFloat(value); if (isNaN(num)) return \"\";",
    "context_clues": [
      "format",
      "currency",
      "formats",
      "number",
      "string",
      "using",
      "default",
      "param",
      "numberstring",
      "value",
      "currencydefault_currency",
      "code",
      "formatted",
      "123456",
      "parsefloat"
    ],
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "context:currency": {
    "category": "context_clues",
    "keyword": "currency",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatCurrency",
      "convertToUsd",
      "detectCurrency"
    ],
    "description": "Code related to currency",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:numberstring": {
    "category": "context_clues",
    "keyword": "numberstring",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatCurrency"
    ],
    "description": "Code related to numberstring",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "context:currencydefault_currency": {
    "category": "context_clues",
    "keyword": "currencydefault_currency",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatCurrency"
    ],
    "description": "Code related to currencydefault_currency",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "context:123456": {
    "category": "context_clues",
    "keyword": "123456",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatCurrency"
    ],
    "description": "Code related to 123456",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.778Z"
  },
  "function:formatLossProfit": {
    "category": "code_functions",
    "keyword": "formatLossProfit",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatLossProfit"
    ],
    "description": " Formats a profit/loss value with color coding  @param {number} value - Profit/loss value @returns {string} HTML string with appropriate color styling ",
    "context_weight": 0.9,
    "line_number": 466,
    "body_preview": "const formatLossProfit = (value) => { const formatted = formatCurrency(value); if (value > 0) {",
    "context_clues": [
      "format",
      "loss",
      "profit",
      "formats",
      "profitloss",
      "value",
      "with",
      "color",
      "coding",
      "param",
      "number",
      "string",
      "html",
      "appropriate",
      "styling"
    ],
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:loss": {
    "category": "context_clues",
    "keyword": "loss",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatLossProfit"
    ],
    "description": "Code related to loss",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:profit": {
    "category": "context_clues",
    "keyword": "profit",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatLossProfit"
    ],
    "description": "Code related to profit",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:profitloss": {
    "category": "context_clues",
    "keyword": "profitloss",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatLossProfit"
    ],
    "description": "Code related to profitloss",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:coding": {
    "category": "context_clues",
    "keyword": "coding",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatLossProfit"
    ],
    "description": "Code related to coding",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:styling": {
    "category": "context_clues",
    "keyword": "styling",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatLossProfit"
    ],
    "description": "Code related to styling",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "function:sanitizeHtml": {
    "category": "code_functions",
    "keyword": "sanitizeHtml",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeHtml"
    ],
    "description": " Sanitizes text input for safe HTML display Prevents XSS attacks by encoding HTML special characters  @param {string} text - Text to sanitize @returns {string} Sanitized text safe for HTML insertion ",
    "context_weight": 0.9,
    "line_number": 483,
    "body_preview": "const sanitizeHtml = (text) => { if (!text) return \"\"; const div = document.createElement(\"div\");",
    "context_clues": [
      "sanitize",
      "html",
      "sanitizes",
      "text",
      "input",
      "safe",
      "display",
      "prevents",
      "attacks",
      "encoding",
      "special",
      "characters",
      "param",
      "string",
      "sanitized"
    ],
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:sanitizes": {
    "category": "context_clues",
    "keyword": "sanitizes",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeHtml",
      "sanitizeObjectFields",
      "sanitizeImportedItem"
    ],
    "description": "Code related to sanitizes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:prevents": {
    "category": "context_clues",
    "keyword": "prevents",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeHtml"
    ],
    "description": "Code related to prevents",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:attacks": {
    "category": "context_clues",
    "keyword": "attacks",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeHtml"
    ],
    "description": "Code related to attacks",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:encoding": {
    "category": "context_clues",
    "keyword": "encoding",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeHtml"
    ],
    "description": "Code related to encoding",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.779Z"
  },
  "context:sanitized": {
    "category": "context_clues",
    "keyword": "sanitized",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeHtml",
      "sanitizeObjectFields"
    ],
    "description": "Code related to sanitized",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "function:gramsToOzt": {
    "category": "code_functions",
    "keyword": "gramsToOzt",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "gramsToOzt"
    ],
    "description": " Converts grams to troy ounces  @param {number} grams - Weight in grams @returns {number} Weight in troy ounces ",
    "context_weight": 0.9,
    "line_number": 496,
    "body_preview": "const gramsToOzt = (grams) => grams / 31.1034768; /** * Converts troy ounces to grams",
    "context_clues": [
      "grams",
      "ozt",
      "converts",
      "troy",
      "ounces",
      "param",
      "number",
      "weight",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:ozt": {
    "category": "context_clues",
    "keyword": "ozt",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "gramsToOzt",
      "oztToGrams"
    ],
    "description": "Code related to ozt",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:converts": {
    "category": "context_clues",
    "keyword": "converts",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "gramsToOzt",
      "oztToGrams",
      "formatWeight",
      "convertToUsd",
      "getUserFriendlyMessage"
    ],
    "description": "Code related to converts",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:troy": {
    "category": "context_clues",
    "keyword": "troy",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "gramsToOzt",
      "oztToGrams",
      "formatWeight"
    ],
    "description": "Code related to troy",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:ounces": {
    "category": "context_clues",
    "keyword": "ounces",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "gramsToOzt",
      "oztToGrams",
      "formatWeight"
    ],
    "description": "Code related to ounces",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:weight": {
    "category": "context_clues",
    "keyword": "weight",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "gramsToOzt",
      "oztToGrams",
      "formatWeight"
    ],
    "description": "Code related to weight",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "function:oztToGrams": {
    "category": "code_functions",
    "keyword": "oztToGrams",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "oztToGrams"
    ],
    "description": " Converts troy ounces to grams  @param {number} ozt - Weight in troy ounces @returns {number} Weight in grams ",
    "context_weight": 0.9,
    "line_number": 504,
    "body_preview": "const oztToGrams = (ozt) => ozt * 31.1034768; /** * Formats a weight in troy ounces to either grams or ounces",
    "context_clues": [
      "ozt",
      "grams",
      "converts",
      "troy",
      "ounces",
      "param",
      "number",
      "weight",
      "parsefloat",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "function:formatWeight": {
    "category": "code_functions",
    "keyword": "formatWeight",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatWeight"
    ],
    "description": " Formats a weight in troy ounces to either grams or ounces  @param {number} ozt - Weight in troy ounces @returns {string} Formatted weight string with unit ",
    "context_weight": 0.9,
    "line_number": 512,
    "body_preview": "const formatWeight = (ozt) => { const weight = parseFloat(ozt); if (weight < 1) {",
    "context_clues": [
      "format",
      "weight",
      "formats",
      "troy",
      "ounces",
      "either",
      "grams",
      "param",
      "number",
      "string",
      "formatted",
      "with",
      "unit",
      "parsefloat",
      "converts"
    ],
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:either": {
    "category": "context_clues",
    "keyword": "either",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatWeight"
    ],
    "description": "Code related to either",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:unit": {
    "category": "context_clues",
    "keyword": "unit",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "formatWeight"
    ],
    "description": "Code related to unit",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "function:convertToUsd": {
    "category": "code_functions",
    "keyword": "convertToUsd",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "convertToUsd"
    ],
    "description": " Converts amount from specified currency to USD using static rates  @param {number} amount - Monetary amount @param {string} [currency=\"USD\"] - Currency code of amount @returns {number} Amount converted to USD ",
    "context_weight": 0.9,
    "line_number": 527,
    "body_preview": "const convertToUsd = (amount, currency = \"USD\") => { const rates = { USD: 1, EUR: 1.08, GBP: 1.27, CAD: 0.74 }; const rate = rates[currency.toUpperCase()] || 1;",
    "context_clues": [
      "convert",
      "usd",
      "converts",
      "amount",
      "from",
      "specified",
      "currency",
      "using",
      "static",
      "rates",
      "param",
      "number",
      "monetary",
      "string",
      "currencyusd"
    ],
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:usd": {
    "category": "context_clues",
    "keyword": "usd",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "convertToUsd"
    ],
    "description": "Code related to usd",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:amount": {
    "category": "context_clues",
    "keyword": "amount",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "convertToUsd"
    ],
    "description": "Code related to amount",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:static": {
    "category": "context_clues",
    "keyword": "static",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "convertToUsd"
    ],
    "description": "Code related to static",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:rates": {
    "category": "context_clues",
    "keyword": "rates",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "convertToUsd"
    ],
    "description": "Code related to rates",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:monetary": {
    "category": "context_clues",
    "keyword": "monetary",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "convertToUsd"
    ],
    "description": "Code related to monetary",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "context:currencyusd": {
    "category": "context_clues",
    "keyword": "currencyusd",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "convertToUsd"
    ],
    "description": "Code related to currencyusd",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.780Z"
  },
  "function:detectCurrency": {
    "category": "code_functions",
    "keyword": "detectCurrency",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "detectCurrency"
    ],
    "description": " Detects currency code from a value string containing symbols or codes  @param {string} str - Value containing currency information @returns {string|null} Detected currency code or null if not found ",
    "context_weight": 0.9,
    "line_number": 539,
    "body_preview": "const detectCurrency = (str = \"\") => { const s = str.toUpperCase(); if (/[€]|EUR/.test(s)) return \"EUR\";",
    "context_clues": [
      "detect",
      "currency",
      "detects",
      "code",
      "from",
      "value",
      "string",
      "containing",
      "symbols",
      "codes",
      "param",
      "information",
      "stringnull",
      "detected",
      "null"
    ],
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:detect": {
    "category": "context_clues",
    "keyword": "detect",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "detectCurrency",
      "detectPainPoint"
    ],
    "description": "Code related to detect",
    "context_weight": 0.9999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:detects": {
    "category": "context_clues",
    "keyword": "detects",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "detectCurrency"
    ],
    "description": "Code related to detects",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:symbols": {
    "category": "context_clues",
    "keyword": "symbols",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "detectCurrency"
    ],
    "description": "Code related to symbols",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:codes": {
    "category": "context_clues",
    "keyword": "codes",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "detectCurrency"
    ],
    "description": "Code related to codes",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:detected": {
    "category": "context_clues",
    "keyword": "detected",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "detectCurrency"
    ],
    "description": "Code related to detected",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "function:stripNonAlphanumeric": {
    "category": "code_functions",
    "keyword": "stripNonAlphanumeric",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "stripNonAlphanumeric"
    ],
    "description": " Removes all non-alphanumeric characters from a string, preserving spaces.  @param {string} str - Input string @returns {string} Cleaned string containing only letters, numbers, and spaces ",
    "context_weight": 0.9,
    "line_number": 554,
    "body_preview": "const stripNonAlphanumeric = (str = \"\", { allowHyphen = false, allowSlash = false } = {}) => str .toString()",
    "context_clues": [
      "strip",
      "non",
      "alphanumeric",
      "removes",
      "nonalphanumeric",
      "characters",
      "from",
      "string",
      "preserving",
      "spaces",
      "param",
      "input",
      "cleaned",
      "containing",
      "only"
    ],
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:strip": {
    "category": "context_clues",
    "keyword": "strip",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "stripNonAlphanumeric"
    ],
    "description": "Code related to strip",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:non": {
    "category": "context_clues",
    "keyword": "non",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "stripNonAlphanumeric"
    ],
    "description": "Code related to non",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:alphanumeric": {
    "category": "context_clues",
    "keyword": "alphanumeric",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "stripNonAlphanumeric"
    ],
    "description": "Code related to alphanumeric",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:spaces": {
    "category": "context_clues",
    "keyword": "spaces",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "stripNonAlphanumeric"
    ],
    "description": "Code related to spaces",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:cleaned": {
    "category": "context_clues",
    "keyword": "cleaned",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "stripNonAlphanumeric"
    ],
    "description": "Code related to cleaned",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "function:cleanString": {
    "category": "code_functions",
    "keyword": "cleanString",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanString"
    ],
    "description": " Cleans a string by stripping HTML tags and control characters while preserving punctuation. Normalizes whitespace and removes diacritics.  @param {string} str - Input string @returns {string} Cleaned string ",
    "context_weight": 0.9,
    "line_number": 575,
    "body_preview": "const cleanString = (str = \"\") => str .toString()",
    "context_clues": [
      "clean",
      "string",
      "cleans",
      "stripping",
      "html",
      "tags",
      "control",
      "characters",
      "while",
      "preserving",
      "punctuation",
      "normalizes",
      "whitespace",
      "removes",
      "diacritics"
    ],
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:clean": {
    "category": "context_clues",
    "keyword": "clean",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "cleanString",
      "cleanupStorage",
      "cleanMultilineString",
      "cleanCombinedDocumentation",
      "findCombinedFiles",
      "scanDir",
      "cleanCombinedFile",
      "regenerateFormats"
    ],
    "description": "Code related to clean",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.378Z"
  },
  "context:tags": {
    "category": "context_clues",
    "keyword": "tags",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanString"
    ],
    "description": "Code related to tags",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:punctuation": {
    "category": "context_clues",
    "keyword": "punctuation",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanString"
    ],
    "description": "Code related to punctuation",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:normalizes": {
    "category": "context_clues",
    "keyword": "normalizes",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanString",
      "normalizeType"
    ],
    "description": "Code related to normalizes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:whitespace": {
    "category": "context_clues",
    "keyword": "whitespace",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanString"
    ],
    "description": "Code related to whitespace",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "context:diacritics": {
    "category": "context_clues",
    "keyword": "diacritics",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanString"
    ],
    "description": "Code related to diacritics",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.781Z"
  },
  "function:sanitizeObjectFields": {
    "category": "code_functions",
    "keyword": "sanitizeObjectFields",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeObjectFields"
    ],
    "description": " Sanitizes all string properties of an object by stripping non-alphanumeric characters.  @param {Object} obj - Object whose string fields will be sanitized @returns {Object} New object with sanitized string fields ",
    "context_weight": 0.9,
    "line_number": 591,
    "body_preview": "const sanitizeObjectFields = (obj) => { const cleaned = { ...obj }; for (const key of Object.keys(cleaned)) {",
    "context_clues": [
      "sanitize",
      "object",
      "fields",
      "sanitizes",
      "string",
      "properties",
      "stripping",
      "nonalphanumeric",
      "characters",
      "param",
      "whose",
      "will",
      "sanitized",
      "with",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:properties": {
    "category": "context_clues",
    "keyword": "properties",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeObjectFields"
    ],
    "description": "Code related to properties",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:will": {
    "category": "context_clues",
    "keyword": "will",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeObjectFields"
    ],
    "description": "Code related to will",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "function:normalizeType": {
    "category": "code_functions",
    "keyword": "normalizeType",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeType"
    ],
    "description": " Normalizes item type to one of the predefined options  @param {string} [type=\"\"] - Raw type string @returns {string} Normalized type value ",
    "context_weight": 0.9,
    "line_number": 618,
    "body_preview": "const normalizeType = (type = \"\") => { const t = type.toString().trim().toLowerCase(); const match = VALID_TYPES.find(v => v.toLowerCase() === t);",
    "context_clues": [
      "normalize",
      "type",
      "normalizes",
      "item",
      "predefined",
      "options",
      "param",
      "string",
      "normalized",
      "value",
      "find",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:predefined": {
    "category": "context_clues",
    "keyword": "predefined",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeType"
    ],
    "description": "Code related to predefined",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:normalized": {
    "category": "context_clues",
    "keyword": "normalized",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "normalizeType"
    ],
    "description": "Code related to normalized",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "function:mapNumistaType": {
    "category": "code_functions",
    "keyword": "mapNumistaType",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "mapNumistaType"
    ],
    "description": " Maps Numista type strings to internal StackrTrackr categories  @param {string} type - Numista type string @returns {string} Mapped internal type ",
    "context_weight": 0.9,
    "line_number": 630,
    "body_preview": "const mapNumistaType = (type = \"\") => { const t = type.toLowerCase(); if (t.includes(\"aurum\")) return \"Aurum\";",
    "context_clues": [
      "map",
      "numista",
      "type",
      "maps",
      "strings",
      "internal",
      "stackrtrackr",
      "categories",
      "param",
      "string",
      "mapped",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:maps": {
    "category": "context_clues",
    "keyword": "maps",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "mapNumistaType"
    ],
    "description": "Code related to maps",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:internal": {
    "category": "context_clues",
    "keyword": "internal",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "mapNumistaType"
    ],
    "description": "Code related to internal",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:stackrtrackr": {
    "category": "context_clues",
    "keyword": "stackrtrackr",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "mapNumistaType"
    ],
    "description": "Code related to stackrtrackr",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:categories": {
    "category": "context_clues",
    "keyword": "categories",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "mapNumistaType"
    ],
    "description": "Code related to categories",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "function:parseNumistaMetal": {
    "category": "code_functions",
    "keyword": "parseNumistaMetal",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseNumistaMetal"
    ],
    "description": " Determines metal type from Numista composition string  @param {string} composition - Composition description @returns {string} Recognized metal or 'Alloy' if not silver/gold/platinum/palladium ",
    "context_weight": 0.9,
    "line_number": 646,
    "body_preview": "const parseNumistaMetal = (composition = \"\") => { const c = composition.trim().toLowerCase(); if (c.startsWith(\"silver\")) return \"Silver\";",
    "context_clues": [
      "parse",
      "numista",
      "metal",
      "determines",
      "type",
      "from",
      "composition",
      "string",
      "param",
      "description",
      "recognized",
      "alloy",
      "silvergoldplatinumpalladium",
      "parsenumistametal",
      "startswith"
    ],
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:recognized": {
    "category": "context_clues",
    "keyword": "recognized",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseNumistaMetal"
    ],
    "description": "Code related to recognized",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:silvergoldplatinumpalladium": {
    "category": "context_clues",
    "keyword": "silvergoldplatinumpalladium",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseNumistaMetal"
    ],
    "description": "Code related to silvergoldplatinumpalladium",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "context:parsenumistametal": {
    "category": "context_clues",
    "keyword": "parsenumistametal",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "parseNumistaMetal"
    ],
    "description": "Code related to parsenumistametal",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.782Z"
  },
  "function:saveData": {
    "category": "code_functions",
    "keyword": "saveData",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveData"
    ],
    "description": " BACKWARD COMPATIBLE: Save data with optional encryption @param {string} key - Storage key @param {any} data - Data to store ",
    "context_weight": 0.9,
    "line_number": 661,
    "body_preview": "const saveData = async (key, data) => { try { // Check if encryption is available and unlocked",
    "context_clues": [
      "save",
      "data",
      "backward",
      "compatible",
      "with",
      "optional",
      "encryption",
      "param",
      "string",
      "storage",
      "store",
      "savedata",
      "check",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:compatible": {
    "category": "context_clues",
    "keyword": "compatible",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveData",
      "loadData"
    ],
    "description": "Code related to compatible",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:optional": {
    "category": "context_clues",
    "keyword": "optional",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveData",
      "loadData"
    ],
    "description": "Code related to optional",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:store": {
    "category": "context_clues",
    "keyword": "store",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "saveData",
      "storeCurrentResults"
    ],
    "description": "Code related to store",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "function:loadData": {
    "category": "code_functions",
    "keyword": "loadData",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "loadData"
    ],
    "description": " BACKWARD COMPATIBLE: Load data with optional decryption @param {string} key - Storage key @param {any} [defaultValue=[]] - Default value if no data found @returns {any} Parsed data or default value ",
    "context_weight": 0.9,
    "line_number": 688,
    "body_preview": "const loadData = async (key, defaultValue = []) => { try { // Check if encryption is available and unlocked",
    "context_clues": [
      "load",
      "data",
      "backward",
      "compatible",
      "with",
      "optional",
      "decryption",
      "param",
      "string",
      "storage",
      "defaultvalue",
      "default",
      "value",
      "found",
      "parsed"
    ],
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:decryption": {
    "category": "context_clues",
    "keyword": "decryption",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "loadData"
    ],
    "description": "Code related to decryption",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:defaultvalue": {
    "category": "context_clues",
    "keyword": "defaultvalue",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "loadData"
    ],
    "description": "Code related to defaultvalue",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:parsed": {
    "category": "context_clues",
    "keyword": "parsed",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "loadData",
      "processVPRData"
    ],
    "description": "Code related to parsed",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.874Z"
  },
  "function:saveDataSync": {
    "category": "code_functions",
    "keyword": "saveDataSync",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveDataSync"
    ],
    "description": "Synchronous versions for backward compatibility where async isn't supported",
    "context_weight": 0.9,
    "line_number": 714,
    "body_preview": "const saveDataSync = (key, data) => { try { const raw = JSON.stringify(data); const out = __compressIfNeeded(raw); localStorage.setItem(key, out); } catch(e) { console.error('saveDataSync failed', e); } }; const loadDataSync = (key, defaultValue = []) => { try { const raw = localStorage.getItem(key); if(raw == null) return defaultValue; const str = __decompressIfNeeded(raw); return JSON.parse(str); } catch(e) { return defaultValue; } }; /**",
    "context_clues": [
      "save",
      "data",
      "sync",
      "synchronous",
      "versions",
      "backward",
      "compatibility",
      "where",
      "async",
      "isnt",
      "supported",
      "savedatasync",
      "setitem",
      "loaddatasync",
      "getitem"
    ],
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:synchronous": {
    "category": "context_clues",
    "keyword": "synchronous",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveDataSync"
    ],
    "description": "Code related to synchronous",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:versions": {
    "category": "context_clues",
    "keyword": "versions",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveDataSync"
    ],
    "description": "Code related to versions",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:where": {
    "category": "context_clues",
    "keyword": "where",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveDataSync",
      "handleError"
    ],
    "description": "Code related to where",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:async": {
    "category": "context_clues",
    "keyword": "async",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveDataSync"
    ],
    "description": "Code related to async",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "context:supported": {
    "category": "context_clues",
    "keyword": "supported",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "saveDataSync"
    ],
    "description": "Code related to supported",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.783Z"
  },
  "function:loadDataSync": {
    "category": "code_functions",
    "keyword": "loadDataSync",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "loadDataSync"
    ],
    "description": "Function loadDataSync in utils.js",
    "context_weight": 0.9,
    "line_number": 715,
    "body_preview": "const loadDataSync = (key, defaultValue = []) => { try { const raw = localStorage.getItem(key); if(raw == null) return defaultValue; const str = __decompressIfNeeded(raw); return JSON.parse(str); } catch(e) { return defaultValue; } }; /** * Removes unknown localStorage keys to maintain a clean storage state",
    "context_clues": [
      "load",
      "data",
      "sync",
      "loaddatasync",
      "getitem",
      "parse",
      "removes",
      "deletes",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "function:cleanupStorage": {
    "category": "code_functions",
    "keyword": "cleanupStorage",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanupStorage"
    ],
    "description": " Removes unknown localStorage keys to maintain a clean storage state  Iterates over all localStorage entries and deletes any keys not present in ALLOWED_STORAGE_KEYS. ",
    "context_weight": 0.9,
    "line_number": 723,
    "body_preview": "const cleanupStorage = () => { if (typeof localStorage === 'undefined') return; const allowed = new Set(ALLOWED_STORAGE_KEYS);",
    "context_clues": [
      "cleanup",
      "storage",
      "removes",
      "unknown",
      "localstorage",
      "keys",
      "maintain",
      "clean",
      "state",
      "iterates",
      "over",
      "entries",
      "deletes",
      "present",
      "allowed_storage_keys"
    ],
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:unknown": {
    "category": "context_clues",
    "keyword": "unknown",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanupStorage"
    ],
    "description": "Code related to unknown",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:maintain": {
    "category": "context_clues",
    "keyword": "maintain",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanupStorage"
    ],
    "description": "Code related to maintain",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:iterates": {
    "category": "context_clues",
    "keyword": "iterates",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanupStorage"
    ],
    "description": "Code related to iterates",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:over": {
    "category": "context_clues",
    "keyword": "over",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanupStorage"
    ],
    "description": "Code related to over",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:present": {
    "category": "context_clues",
    "keyword": "present",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanupStorage"
    ],
    "description": "Code related to present",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:allowed_storage_keys": {
    "category": "context_clues",
    "keyword": "allowed_storage_keys",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanupStorage"
    ],
    "description": "Code related to allowed_storage_keys",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "function:sortInventoryByDateNewestFirst": {
    "category": "code_functions",
    "keyword": "sortInventoryByDateNewestFirst",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sortInventoryByDateNewestFirst"
    ],
    "description": " Sorts inventory by date (newest first)  @param {Array} [data=inventory] - Data to sort @returns {Array} Sorted inventory data ",
    "context_weight": 0.9,
    "line_number": 740,
    "body_preview": "const sortInventoryByDateNewestFirst = (data = inventory) => { return [...data].sort((a, b) => { // Handle unknown dates (—, empty, or Unknown) - they should sort to the bottom (oldest)",
    "context_clues": [
      "sort",
      "inventory",
      "date",
      "newest",
      "first",
      "sorts",
      "param",
      "array",
      "datainventory",
      "data",
      "sorted",
      "sortinventorybydatenewestfirst",
      "handle",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:newest": {
    "category": "context_clues",
    "keyword": "newest",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sortInventoryByDateNewestFirst"
    ],
    "description": "Code related to newest",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "function:validateInventoryItem": {
    "category": "code_functions",
    "keyword": "validateInventoryItem",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "validateInventoryItem"
    ],
    "description": " Validates inventory item data  @param {Object} item - Inventory item to validate @returns {Object} Validation result with isValid flag and errors array ",
    "context_weight": 0.9,
    "line_number": 765,
    "body_preview": "const validateInventoryItem = (item) => { const errors = []; // Required fields",
    "context_clues": [
      "validate",
      "inventory",
      "item",
      "validates",
      "data",
      "param",
      "object",
      "validation",
      "result",
      "with",
      "isvalid",
      "flag",
      "errors",
      "array",
      "validateinventoryitem"
    ],
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:validates": {
    "category": "context_clues",
    "keyword": "validates",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "validateInventoryItem"
    ],
    "description": "Code related to validates",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:isvalid": {
    "category": "context_clues",
    "keyword": "isvalid",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "validateInventoryItem"
    ],
    "description": "Code related to isvalid",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "context:validateinventoryitem": {
    "category": "context_clues",
    "keyword": "validateinventoryitem",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "validateInventoryItem"
    ],
    "description": "Code related to validateinventoryitem",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.784Z"
  },
  "function:sanitizeImportedItem": {
    "category": "code_functions",
    "keyword": "sanitizeImportedItem",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeImportedItem"
    ],
    "description": " Sanitizes imported inventory data, coercing invalid fields to safe defaults.  String fields default to an empty string and numeric fields become null when parsing fails. This allows imports to proceed even when some fields are malformed.  @param {Object} item - Raw item data from an import process @returns {Object} Sanitized item ",
    "context_weight": 0.9,
    "line_number": 830,
    "body_preview": "const sanitizeImportedItem = (item) => { const sanitized = { ...item }; // Ensure metal and composition are strings",
    "context_clues": [
      "sanitize",
      "imported",
      "item",
      "sanitizes",
      "inventory",
      "data",
      "coercing",
      "invalid",
      "fields",
      "safe",
      "defaults",
      "string",
      "default",
      "empty",
      "numeric"
    ],
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:coercing": {
    "category": "context_clues",
    "keyword": "coercing",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeImportedItem"
    ],
    "description": "Code related to coercing",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:invalid": {
    "category": "context_clues",
    "keyword": "invalid",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "sanitizeImportedItem"
    ],
    "description": "Code related to invalid",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "function:cleanMultilineString": {
    "category": "code_functions",
    "keyword": "cleanMultilineString",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanMultilineString"
    ],
    "description": "Function cleanMultilineString in utils.js",
    "context_weight": 0.9,
    "line_number": 856,
    "body_preview": "const cleanMultilineString = (str = '') => str .toString()",
    "context_clues": [
      "clean",
      "multiline",
      "string",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:multiline": {
    "category": "context_clues",
    "keyword": "multiline",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "cleanMultilineString"
    ],
    "description": "Code related to multiline",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "function:handleError": {
    "category": "code_functions",
    "keyword": "handleError",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "handleError"
    ],
    "description": " Handles errors with user-friendly messaging  @param {Error|string} error - Error to handle @param {string} context - Context where error occurred ",
    "context_weight": 0.9,
    "line_number": 888,
    "body_preview": "const handleError = (error, context = \"\") => { const errorMessage = error instanceof Error ? error.message : error.toString();",
    "context_clues": [
      "handle",
      "error",
      "handles",
      "errors",
      "with",
      "userfriendly",
      "messaging",
      "param",
      "errorstring",
      "string",
      "context",
      "where",
      "occurred",
      "handleerror",
      "getuserfriendlymessage"
    ],
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:userfriendly": {
    "category": "context_clues",
    "keyword": "userfriendly",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "handleError",
      "getUserFriendlyMessage"
    ],
    "description": "Code related to userfriendly",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:messaging": {
    "category": "context_clues",
    "keyword": "messaging",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "handleError"
    ],
    "description": "Code related to messaging",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:errorstring": {
    "category": "context_clues",
    "keyword": "errorstring",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "handleError"
    ],
    "description": "Code related to errorstring",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:occurred": {
    "category": "context_clues",
    "keyword": "occurred",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "handleError"
    ],
    "description": "Code related to occurred",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:handleerror": {
    "category": "context_clues",
    "keyword": "handleerror",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "handleError"
    ],
    "description": "Code related to handleerror",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.785Z"
  },
  "context:getuserfriendlymessage": {
    "category": "context_clues",
    "keyword": "getuserfriendlymessage",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "handleError",
      "getUserFriendlyMessage"
    ],
    "description": "Code related to getuserfriendlymessage",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "function:getUserFriendlyMessage": {
    "category": "code_functions",
    "keyword": "getUserFriendlyMessage",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getUserFriendlyMessage"
    ],
    "description": " Converts technical error messages to user-friendly ones  @param {string} errorMessage - Technical error message @returns {string} User-friendly error message ",
    "context_weight": 0.9,
    "line_number": 905,
    "body_preview": "const getUserFriendlyMessage = (errorMessage) => { if (errorMessage.includes(\"localStorage\")) { return \"Unable to save data. Please check your browser settings.\";",
    "context_clues": [
      "get",
      "user",
      "friendly",
      "message",
      "converts",
      "technical",
      "error",
      "messages",
      "userfriendly",
      "ones",
      "param",
      "string",
      "errormessage",
      "getuserfriendlymessage",
      "save"
    ],
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:friendly": {
    "category": "context_clues",
    "keyword": "friendly",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getUserFriendlyMessage"
    ],
    "description": "Code related to friendly",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:message": {
    "category": "context_clues",
    "keyword": "message",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "getUserFriendlyMessage",
      "showHelp"
    ],
    "description": "Code related to message",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:technical": {
    "category": "context_clues",
    "keyword": "technical",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getUserFriendlyMessage"
    ],
    "description": "Code related to technical",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:ones": {
    "category": "context_clues",
    "keyword": "ones",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getUserFriendlyMessage"
    ],
    "description": "Code related to ones",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:errormessage": {
    "category": "context_clues",
    "keyword": "errormessage",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getUserFriendlyMessage"
    ],
    "description": "Code related to errormessage",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "function:downloadFile": {
    "category": "code_functions",
    "keyword": "downloadFile",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "downloadFile"
    ],
    "description": " Downloads a file with the specified content and filename  @param {string} filename - Name of the file to download @param {string} content - Content of the file @param {string} mimeType - MIME type of the file (default: text/plain) ",
    "context_weight": 0.9,
    "line_number": 927,
    "body_preview": "const downloadFile = (filename, content, mimeType = \"text/plain\") => { try { const blob = new Blob([content], { type: mimeType });",
    "context_clues": [
      "download",
      "file",
      "downloads",
      "with",
      "specified",
      "content",
      "filename",
      "param",
      "string",
      "name",
      "mimetype",
      "mime",
      "type",
      "default",
      "textplain"
    ],
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:filename": {
    "category": "context_clues",
    "keyword": "filename",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "downloadFile",
      "filenamePatternFrom"
    ],
    "description": "Code related to filename",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:mimetype": {
    "category": "context_clues",
    "keyword": "mimetype",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "downloadFile"
    ],
    "description": "Code related to mimetype",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:mime": {
    "category": "context_clues",
    "keyword": "mime",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "downloadFile"
    ],
    "description": "Code related to mime",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:textplain": {
    "category": "context_clues",
    "keyword": "textplain",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "downloadFile"
    ],
    "description": "Code related to textplain",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "function:updateStorageStats": {
    "category": "code_functions",
    "keyword": "updateStorageStats",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateStorageStats"
    ],
    "description": "=============================================================================  Updates footer with localStorage usage statistics and visual usage indicator ",
    "context_weight": 0.9,
    "line_number": 955,
    "body_preview": "const updateStorageStats = () => { try { // 5MB typical localStorage limit expressed in bytes",
    "context_clues": [
      "update",
      "storage",
      "stats",
      "updates",
      "footer",
      "with",
      "localstorage",
      "usage",
      "statistics",
      "visual",
      "indicator",
      "updatestoragestats",
      "getitem",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:visual": {
    "category": "context_clues",
    "keyword": "visual",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateStorageStats"
    ],
    "description": "Code related to visual",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "context:indicator": {
    "category": "context_clues",
    "keyword": "indicator",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "updateStorageStats",
      "getTrendIndicator"
    ],
    "description": "Code related to indicator",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:updatestoragestats": {
    "category": "context_clues",
    "keyword": "updatestoragestats",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "updateStorageStats"
    ],
    "description": "Code related to updatestoragestats",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.786Z"
  },
  "function:downloadStorageReport": {
    "category": "code_functions",
    "keyword": "downloadStorageReport",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "downloadStorageReport"
    ],
    "description": " Shows storage report options with view and download actions ",
    "context_weight": 0.9,
    "line_number": 990,
    "body_preview": "const downloadStorageReport = () => { let modal = document.getElementById('storageOptionsModal'); if (!modal) {",
    "context_clues": [
      "download",
      "storage",
      "report",
      "shows",
      "options",
      "with",
      "view",
      "actions",
      "getelementbyid",
      "createelement",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "context:actions": {
    "category": "context_clues",
    "keyword": "actions",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "downloadStorageReport"
    ],
    "description": "Code related to actions",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "function:closeModal": {
    "category": "code_functions",
    "keyword": "closeModal",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeModal"
    ],
    "description": "Function closeModal in utils.js",
    "context_weight": 0.9,
    "line_number": 1011,
    "body_preview": "const closeModal = () => { modal.style.display = 'none'; document.body.style.overflow = '';",
    "context_clues": [
      "close",
      "modal",
      "closemodal",
      "addeventlistener",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "context:closemodal": {
    "category": "context_clues",
    "keyword": "closemodal",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeModal"
    ],
    "description": "Code related to closemodal",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "function:openStorageReportPopup": {
    "category": "code_functions",
    "keyword": "openStorageReportPopup",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openStorageReportPopup"
    ],
    "description": " Displays the storage report HTML inside a modal iframe ",
    "context_weight": 0.9,
    "line_number": 1046,
    "body_preview": "const openStorageReportPopup = () => { const htmlContent = generateStorageReportHTML(); const modal = document.getElementById('storageReportModal');",
    "context_clues": [
      "open",
      "storage",
      "report",
      "popup",
      "displays",
      "html",
      "inside",
      "modal",
      "iframe",
      "openstoragereportpopup",
      "generatestoragereporthtml",
      "getelementbyid",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "context:inside": {
    "category": "context_clues",
    "keyword": "inside",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openStorageReportPopup"
    ],
    "description": "Code related to inside",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "context:openstoragereportpopup": {
    "category": "context_clues",
    "keyword": "openstoragereportpopup",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openStorageReportPopup"
    ],
    "description": "Code related to openstoragereportpopup",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.787Z"
  },
  "context:generatestoragereporthtml": {
    "category": "context_clues",
    "keyword": "generatestoragereporthtml",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openStorageReportPopup",
      "generateStorageReportHTML",
      "generateStorageReportTar"
    ],
    "description": "Code related to generatestoragereporthtml",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.792Z"
  },
  "function:closeModalById": {
    "category": "code_functions",
    "keyword": "closeModalById",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeModalById"
    ],
    "description": " Globally close a modal by id and clear body overflow safely. @param {string} id ",
    "context_weight": 0.9,
    "line_number": 1082,
    "body_preview": "const closeModalById = (id) => { try { const modal = document.getElementById(id);",
    "context_clues": [
      "close",
      "modal",
      "globally",
      "clear",
      "body",
      "overflow",
      "safely",
      "param",
      "string",
      "closemodalbyid",
      "getelementbyid",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:globally": {
    "category": "context_clues",
    "keyword": "globally",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeModalById"
    ],
    "description": "Code related to globally",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:body": {
    "category": "context_clues",
    "keyword": "body",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeModalById",
      "openModalById"
    ],
    "description": "Code related to body",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:overflow": {
    "category": "context_clues",
    "keyword": "overflow",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "closeModalById",
      "openModalById"
    ],
    "description": "Code related to overflow",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "function:openModalById": {
    "category": "code_functions",
    "keyword": "openModalById",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openModalById"
    ],
    "description": " Opens a modal by id and sets body overflow to hidden. Also initializes a click-outside-to-close handler once. @param {string} id ",
    "context_weight": 0.9,
    "line_number": 1096,
    "body_preview": "const openModalById = (id) => { try { const modal = document.getElementById(id);",
    "context_clues": [
      "open",
      "modal",
      "opens",
      "sets",
      "body",
      "overflow",
      "hidden",
      "also",
      "initializes",
      "clickoutsidetoclose",
      "handler",
      "once",
      "param",
      "string",
      "openmodalbyid"
    ],
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:hidden": {
    "category": "context_clues",
    "keyword": "hidden",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "openModalById",
      "promptHidden",
      "prompt"
    ],
    "description": "Code related to hidden",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:also": {
    "category": "context_clues",
    "keyword": "also",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openModalById"
    ],
    "description": "Code related to also",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:clickoutsidetoclose": {
    "category": "context_clues",
    "keyword": "clickoutsidetoclose",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openModalById"
    ],
    "description": "Code related to clickoutsidetoclose",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:once": {
    "category": "context_clues",
    "keyword": "once",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "openModalById"
    ],
    "description": "Code related to once",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "function:generateStorageReportHTML": {
    "category": "code_functions",
    "keyword": "generateStorageReportHTML",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateStorageReportHTML"
    ],
    "description": " Generates comprehensive HTML storage report with theme support ",
    "context_weight": 0.9,
    "line_number": 1123,
    "body_preview": "const generateStorageReportHTML = () => { const reportData = analyzeStorageData(); const timestamp = new Date().toLocaleString();",
    "context_clues": [
      "generate",
      "storage",
      "report",
      "generates",
      "comprehensive",
      "html",
      "with",
      "theme",
      "support",
      "generatestoragereporthtml",
      "getattribute",
      "initial",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.788Z"
  },
  "context:initial": {
    "category": "context_clues",
    "keyword": "initial",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "generateStorageReportHTML",
      "generateIndexHTML"
    ],
    "description": "Code related to initial",
    "context_weight": 0.9999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.416Z"
  },
  "function:analyzeStorageData": {
    "category": "code_functions",
    "keyword": "analyzeStorageData",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "analyzeStorageData"
    ],
    "description": " Analyzes localStorage data and calculates memory usage ",
    "context_weight": 0.9,
    "line_number": 1268,
    "body_preview": "const analyzeStorageData = () => { const items = []; let totalSize = 0;",
    "context_clues": [
      "analyze",
      "storage",
      "data",
      "analyzes",
      "localstorage",
      "calculates",
      "memory",
      "usage",
      "getitem",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.789Z"
  },
  "context:analyzes": {
    "category": "context_clues",
    "keyword": "analyzes",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "analyzeStorageData",
      "analyzeStorageItem"
    ],
    "description": "Code related to analyzes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.789Z"
  },
  "function:analyzeStorageItem": {
    "category": "code_functions",
    "keyword": "analyzeStorageItem",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "analyzeStorageItem"
    ],
    "description": " Analyzes a storage item to determine its type and content ",
    "context_weight": 0.9,
    "line_number": 1322,
    "body_preview": "const analyzeStorageItem = (key, value) => { let type = 'String'; let recordCount = 1;",
    "context_clues": [
      "analyze",
      "storage",
      "item",
      "analyzes",
      "determine",
      "type",
      "content",
      "parseddata",
      "parse",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.789Z"
  },
  "context:determine": {
    "category": "context_clues",
    "keyword": "determine",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "analyzeStorageItem"
    ],
    "description": "Code related to determine",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.789Z"
  },
  "context:parseddata": {
    "category": "context_clues",
    "keyword": "parseddata",
    "files": [
      "rProjects/StackTrackr/js/utils.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "analyzeStorageItem",
      "generateItemDataTable",
      "toNumber",
      "applyFormulaToData",
      "renderChart"
    ],
    "description": "Code related to parseddata",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.842Z"
  },
  "function:getStorageItemDescription": {
    "category": "code_functions",
    "keyword": "getStorageItemDescription",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageItemDescription"
    ],
    "description": " Gets description for storage items ",
    "context_weight": 0.9,
    "line_number": 1371,
    "body_preview": "const getStorageItemDescription = (key) => { const descriptions = { 'precious-metals-inventory': 'Your complete inventory of precious metals items with all details',",
    "context_clues": [
      "get",
      "storage",
      "item",
      "description",
      "gets",
      "items",
      "getstorageitemdescription",
      "setting",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "context:getstorageitemdescription": {
    "category": "context_clues",
    "keyword": "getstorageitemdescription",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageItemDescription"
    ],
    "description": "Code related to getstorageitemdescription",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "function:createStorageItemModal": {
    "category": "code_functions",
    "keyword": "createStorageItemModal",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "createStorageItemModal"
    ],
    "description": " Creates modal HTML for detailed item view ",
    "context_weight": 0.9,
    "line_number": 1391,
    "body_preview": "const createStorageItemModal = (item) => { const modalId = `modal-${item.key}`; return `",
    "context_clues": [
      "create",
      "storage",
      "item",
      "modal",
      "creates",
      "html",
      "detailed",
      "view",
      "createstorageitemmodal",
      "getstorageitemdisplayname",
      "close",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "context:detailed": {
    "category": "context_clues",
    "keyword": "detailed",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "createStorageItemModal"
    ],
    "description": "Code related to detailed",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "context:createstorageitemmodal": {
    "category": "context_clues",
    "keyword": "createstorageitemmodal",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "createStorageItemModal"
    ],
    "description": "Code related to createstorageitemmodal",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.790Z"
  },
  "function:generateItemDataTable": {
    "category": "code_functions",
    "keyword": "generateItemDataTable",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateItemDataTable"
    ],
    "description": " Generates data table for storage item ",
    "context_weight": 0.9,
    "line_number": 1427,
    "body_preview": "const generateItemDataTable = (item) => { if (!item.parsedData) { return `<div class=\"data-preview\"><strong>Raw Data:</strong><pre>${item.value}</pre></div>`;",
    "context_clues": [
      "generate",
      "item",
      "data",
      "table",
      "generates",
      "storage",
      "generateitemdatatable",
      "parseddata",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:generateitemdatatable": {
    "category": "context_clues",
    "keyword": "generateitemdatatable",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateItemDataTable"
    ],
    "description": "Code related to generateitemdatatable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "function:getStorageReportCSS": {
    "category": "code_functions",
    "keyword": "getStorageReportCSS",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageReportCSS"
    ],
    "description": " Gets enhanced CSS styles for the storage report with theme support ",
    "context_weight": 0.9,
    "line_number": 1482,
    "body_preview": "const getStorageReportCSS = () => { return ` :root {",
    "context_clues": [
      "get",
      "storage",
      "report",
      "gets",
      "enhanced",
      "styles",
      "with",
      "theme",
      "support",
      "getstoragereportcss",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:styles": {
    "category": "context_clues",
    "keyword": "styles",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageReportCSS"
    ],
    "description": "Code related to styles",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:getstoragereportcss": {
    "category": "context_clues",
    "keyword": "getstoragereportcss",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageReportCSS"
    ],
    "description": "Code related to getstoragereportcss",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "function:getStorageReportJS": {
    "category": "code_functions",
    "keyword": "getStorageReportJS",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageReportJS"
    ],
    "description": " Gets enhanced JavaScript for the storage report with theme and chart support ",
    "context_weight": 0.9,
    "line_number": 2247,
    "body_preview": "const getStorageReportJS = () => { return ` let currentChart = null;",
    "context_clues": [
      "get",
      "storage",
      "report",
      "gets",
      "enhanced",
      "javascript",
      "with",
      "theme",
      "chart",
      "support",
      "getstoragereportjs",
      "getchartcolor",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:javascript": {
    "category": "context_clues",
    "keyword": "javascript",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageReportJS"
    ],
    "description": "Code related to javascript",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "context:getstoragereportjs": {
    "category": "context_clues",
    "keyword": "getstoragereportjs",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "getStorageReportJS"
    ],
    "description": "Code related to getstoragereportjs",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.791Z"
  },
  "function:generateStorageReportTar": {
    "category": "code_functions",
    "keyword": "generateStorageReportTar",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateStorageReportTar"
    ],
    "description": " Generates a comprehensive ZIP file with storage report and data ",
    "context_weight": 0.9,
    "line_number": 2476,
    "body_preview": "const generateStorageReportTar = async () => { if (typeof JSZip === 'undefined') { throw new Error('JSZip library not available for compressed reports');",
    "context_clues": [
      "generate",
      "storage",
      "report",
      "tar",
      "generates",
      "comprehensive",
      "file",
      "with",
      "data",
      "generatestoragereporttar",
      "add",
      "generatestoragereporthtml",
      "utils"
    ],
    "last_updated": "2025-08-20T17:24:09.792Z"
  },
  "context:tar": {
    "category": "context_clues",
    "keyword": "tar",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateStorageReportTar"
    ],
    "description": "Code related to tar",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.792Z"
  },
  "context:generatestoragereporttar": {
    "category": "context_clues",
    "keyword": "generatestoragereporttar",
    "files": [
      "rProjects/StackTrackr/js/utils.js"
    ],
    "functions": [
      "generateStorageReportTar"
    ],
    "description": "Code related to generatestoragereporttar",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.792Z"
  },
  "function:checkVersionChange": {
    "category": "code_functions",
    "keyword": "checkVersionChange",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "checkVersionChange"
    ],
    "description": " Version change detection and changelog display   Compares stored version with current and shows changelog modal if needed ",
    "context_weight": 0.9,
    "line_number": 8,
    "body_preview": "const checkVersionChange = () => { const hasData = !!localStorage.getItem(LS_KEY); if (!hasData) {",
    "context_clues": [
      "check",
      "version",
      "change",
      "detection",
      "changelog",
      "display",
      "compares",
      "stored",
      "with",
      "current",
      "shows",
      "modal",
      "needed",
      "checkversionchange",
      "getitem"
    ],
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:detection": {
    "category": "context_clues",
    "keyword": "detection",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "checkVersionChange"
    ],
    "description": "Code related to detection",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:checkversionchange": {
    "category": "context_clues",
    "keyword": "checkversionchange",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "checkVersionChange"
    ],
    "description": "Code related to checkversionchange",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "file:versionCheck.js": {
    "category": "file_relationships",
    "keyword": "versionCheck.js",
    "primary_file": "rProjects/StackTrackr/js/versionCheck.js",
    "functions": [
      "checkVersionChange",
      "getChangelogForVersion",
      "populateVersionModal",
      "getEmbeddedChangelog",
      "setupVersionModalEvents",
      "accept"
    ],
    "description": "File containing checkVersionChange and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.207Z"
  },
  "function:getChangelogForVersion": {
    "category": "code_functions",
    "keyword": "getChangelogForVersion",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getChangelogForVersion"
    ],
    "description": " Extracts changelog section for a specific version @param {string} text - Full changelog markdown @param {string} version - Version string to extract @returns {string} HTML string of changelog items ",
    "context_weight": 0.9,
    "line_number": 46,
    "body_preview": "const getChangelogForVersion = (text, version) => { const escaped = version.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); const regex = new RegExp(",
    "context_clues": [
      "get",
      "changelog",
      "for",
      "version",
      "extracts",
      "section",
      "specific",
      "param",
      "string",
      "text",
      "full",
      "markdown",
      "extract",
      "html",
      "items"
    ],
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:for": {
    "category": "context_clues",
    "keyword": "for",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getChangelogForVersion"
    ],
    "description": "Code related to for",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "context:markdown": {
    "category": "context_clues",
    "keyword": "markdown",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getChangelogForVersion"
    ],
    "description": "Code related to markdown",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.802Z"
  },
  "function:populateVersionModal": {
    "category": "code_functions",
    "keyword": "populateVersionModal",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "populateVersionModal"
    ],
    "description": " Populates and shows the version modal @param {string} version - Current application version @param {string} html - HTML content of changelog ",
    "context_weight": 0.9,
    "line_number": 68,
    "body_preview": "const populateVersionModal = (version, html) => { const modal = document.getElementById(\"versionModal\"); const body = document.getElementById(\"versionChanges\");",
    "context_clues": [
      "populate",
      "version",
      "modal",
      "populates",
      "shows",
      "param",
      "string",
      "current",
      "application",
      "html",
      "content",
      "changelog",
      "getelementbyid",
      "setupversionmodalevents",
      "versioncheck"
    ],
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:setupversionmodalevents": {
    "category": "context_clues",
    "keyword": "setupversionmodalevents",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "populateVersionModal",
      "setupVersionModalEvents"
    ],
    "description": "Code related to setupversionmodalevents",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:versioncheck": {
    "category": "context_clues",
    "keyword": "versioncheck",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "populateVersionModal",
      "accept"
    ],
    "description": "Code related to versioncheck",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "function:getEmbeddedChangelog": {
    "category": "code_functions",
    "keyword": "getEmbeddedChangelog",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "getEmbeddedChangelog"
    ],
    "description": " Provides embedded changelog data as fallback when file fetch fails @param {string} version - Version to get changelog for @returns {string} HTML string of changelog items ",
    "context_weight": 0.9,
    "line_number": 88,
    "body_preview": "const getEmbeddedChangelog = (version) => { const changelogs = { \"3.04.86\": `",
    "context_clues": [
      "get",
      "embedded",
      "changelog",
      "provides",
      "data",
      "fallback",
      "when",
      "file",
      "fetch",
      "fails",
      "param",
      "string",
      "version",
      "html",
      "items"
    ],
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "function:setupVersionModalEvents": {
    "category": "code_functions",
    "keyword": "setupVersionModalEvents",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "setupVersionModalEvents"
    ],
    "description": " Sets up modal event handlers for version acknowledgment @param {string} version - Current application version ",
    "context_weight": 0.9,
    "line_number": 150,
    "body_preview": "const setupVersionModalEvents = (version) => { const modal = document.getElementById(\"versionModal\"); const acceptBtn = document.getElementById(\"versionAcceptBtn\");",
    "context_clues": [
      "setup",
      "version",
      "modal",
      "events",
      "sets",
      "event",
      "handlers",
      "acknowledgment",
      "param",
      "string",
      "current",
      "application",
      "setupversionmodalevents",
      "getelementbyid",
      "closebtn"
    ],
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "context:closebtn": {
    "category": "context_clues",
    "keyword": "closebtn",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "setupVersionModalEvents"
    ],
    "description": "Code related to closebtn",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "function:accept": {
    "category": "code_functions",
    "keyword": "accept",
    "files": [
      "rProjects/StackTrackr/js/versionCheck.js"
    ],
    "functions": [
      "accept"
    ],
    "description": "Function accept in versionCheck.js",
    "context_weight": 0.9,
    "line_number": 155,
    "body_preview": "const accept = () => { localStorage.setItem(VERSION_ACK_KEY, version); if (modal) modal.style.display = \"none\";",
    "context_clues": [
      "accept",
      "setitem",
      "addeventlistener",
      "versioncheck"
    ],
    "last_updated": "2025-08-20T17:24:09.803Z"
  },
  "function:displayLatestResults": {
    "category": "code_functions",
    "keyword": "displayLatestResults",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "displayLatestResults"
    ],
    "description": "Add the missing functions to app.js Display the latest results in the panels",
    "context_weight": 0.9,
    "line_number": 4,
    "body_preview": "function displayLatestResults(result) { if (!result || !result.data) return; const data = result.data;",
    "context_clues": [
      "display",
      "latest",
      "results",
      "missing",
      "functions",
      "appjs",
      "panels",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.828Z"
  },
  "context:latest": {
    "category": "context_clues",
    "keyword": "latest",
    "files": [
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "displayLatestResults",
      "generateLatestResultsHTML",
      "generateLatestResults"
    ],
    "description": "Code related to latest",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:appjs": {
    "category": "context_clues",
    "keyword": "appjs",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "displayLatestResults"
    ],
    "description": "Code related to appjs",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.828Z"
  },
  "context:panels": {
    "category": "context_clues",
    "keyword": "panels",
    "files": [
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "displayLatestResults",
      "autoCalculatePanels"
    ],
    "description": "Code related to panels",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "file:app-functions.js": {
    "category": "file_relationships",
    "keyword": "app-functions.js",
    "primary_file": "rProjects/VulnTrackr/app-functions.js",
    "functions": [
      "displayLatestResults",
      "generateHTMLReport",
      "generateLatestResultsHTML",
      "generateHistoryTableHTML",
      "updateHistoryCharts",
      "createHistoryChart",
      "createHistoryTable"
    ],
    "description": "File containing displayLatestResults and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.235Z"
  },
  "function:generateHTMLReport": {
    "category": "code_functions",
    "keyword": "generateHTMLReport",
    "files": [
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "generateHTMLReport"
    ],
    "description": "HTML Report Generator Module for VPR Score tracking Generate a complete HTML report based on history data",
    "context_weight": 0.9,
    "line_number": 4,
    "body_preview": "function generateHTMLReport(history) { if (!history || !history.length) { return '<div class=\"error\">No history data available to generate report</div>';",
    "context_clues": [
      "generate",
      "report",
      "html",
      "generator",
      "module",
      "score",
      "tracking",
      "complete",
      "based",
      "history",
      "data",
      "generatehtmlreport",
      "sort",
      "sortedhistory"
    ],
    "last_updated": "2025-08-20T17:24:09.896Z"
  },
  "context:generatehtmlreport": {
    "category": "context_clues",
    "keyword": "generatehtmlreport",
    "files": [
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "generateHTMLReport",
      "downloadHTMLReport"
    ],
    "description": "Code related to generatehtmlreport",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:sortedhistory": {
    "category": "context_clues",
    "keyword": "sortedhistory",
    "files": [
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "generateHTMLReport"
    ],
    "description": "Code related to sortedhistory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.896Z"
  },
  "function:generateLatestResultsHTML": {
    "category": "code_functions",
    "keyword": "generateLatestResultsHTML",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "generateLatestResultsHTML"
    ],
    "description": "Generate HTML for the latest scan results in report",
    "context_weight": 0.9,
    "line_number": 181,
    "body_preview": "function generateLatestResultsHTML(latestScan) { if (!latestScan || !latestScan.data) return '<p>No scan data available</p>'; const data = latestScan.data;",
    "context_clues": [
      "generate",
      "latest",
      "results",
      "html",
      "scan",
      "report",
      "generatelatestresultshtml",
      "app",
      "functions"
    ],
    "last_updated": "2025-08-20T17:24:09.829Z"
  },
  "context:scan": {
    "category": "context_clues",
    "keyword": "scan",
    "files": [
      "rProjects/VulnTrackr/app-functions.js",
      "rProjects/VulnTrackr/modules/report-generator.js",
      "rEngine/document-scribe.js",
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "generateLatestResultsHTML",
      "generateHistoryTableHTML",
      "generateLatestResults",
      "generateHistoryTable",
      "scanDir"
    ],
    "description": "Code related to scan",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.377Z"
  },
  "context:generatelatestresultshtml": {
    "category": "context_clues",
    "keyword": "generatelatestresultshtml",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "generateLatestResultsHTML"
    ],
    "description": "Code related to generatelatestresultshtml",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.829Z"
  },
  "function:generateHistoryTableHTML": {
    "category": "code_functions",
    "keyword": "generateHistoryTableHTML",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "generateHistoryTableHTML"
    ],
    "description": "Generate HTML table for scan history in report",
    "context_weight": 0.9,
    "line_number": 248,
    "body_preview": "function generateHistoryTableHTML(history) { if (!history || history.length === 0) return '<p>No history data available</p>'; let tableRows = '';",
    "context_clues": [
      "generate",
      "history",
      "table",
      "html",
      "scan",
      "report",
      "generatehistorytablehtml",
      "app",
      "functions"
    ],
    "last_updated": "2025-08-20T17:24:09.830Z"
  },
  "context:generatehistorytablehtml": {
    "category": "context_clues",
    "keyword": "generatehistorytablehtml",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "generateHistoryTableHTML"
    ],
    "description": "Code related to generatehistorytablehtml",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.830Z"
  },
  "function:updateHistoryCharts": {
    "category": "code_functions",
    "keyword": "updateHistoryCharts",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "updateHistoryCharts"
    ],
    "description": "Update history charts from localStorage data",
    "context_weight": 0.9,
    "line_number": 293,
    "body_preview": "function updateHistoryCharts() { const history = JSON.parse(localStorage.getItem('vprHistory') || '[]'); if (!history || history.length === 0) return;",
    "context_clues": [
      "update",
      "history",
      "charts",
      "from",
      "localstorage",
      "data",
      "updatehistorycharts",
      "parse",
      "getitem",
      "sort",
      "app",
      "functions"
    ],
    "last_updated": "2025-08-20T17:24:09.830Z"
  },
  "context:updatehistorycharts": {
    "category": "context_clues",
    "keyword": "updatehistorycharts",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "updateHistoryCharts"
    ],
    "description": "Code related to updatehistorycharts",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.830Z"
  },
  "function:createHistoryChart": {
    "category": "code_functions",
    "keyword": "createHistoryChart",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "createHistoryChart"
    ],
    "description": "Create a line chart for history data",
    "context_weight": 0.9,
    "line_number": 329,
    "body_preview": "function createHistoryChart(canvasId, labels, data, color, label) { const ctx = document.getElementById(canvasId).getContext('2d'); // Destroy existing chart if any",
    "context_clues": [
      "create",
      "history",
      "chart",
      "line",
      "data",
      "createhistorychart",
      "getelementbyid",
      "getcontext",
      "app",
      "functions"
    ],
    "last_updated": "2025-08-20T17:24:09.830Z"
  },
  "context:line": {
    "category": "context_clues",
    "keyword": "line",
    "files": [
      "rProjects/VulnTrackr/app-functions.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "createHistoryChart",
      "parseArgs"
    ],
    "description": "Code related to line",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.830Z"
  },
  "context:createhistorychart": {
    "category": "context_clues",
    "keyword": "createhistorychart",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "createHistoryChart"
    ],
    "description": "Code related to createhistorychart",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.830Z"
  },
  "function:createHistoryTable": {
    "category": "code_functions",
    "keyword": "createHistoryTable",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "createHistoryTable"
    ],
    "description": "Create a history table for a specific severity",
    "context_weight": 0.9,
    "line_number": 364,
    "body_preview": "function createHistoryTable(tableId, history, severity) { const tableEl = document.getElementById(tableId); if (!tableEl) return;",
    "context_clues": [
      "create",
      "history",
      "table",
      "specific",
      "severity",
      "createhistorytable",
      "getelementbyid",
      "app",
      "functions"
    ],
    "last_updated": "2025-08-20T17:24:09.831Z"
  },
  "context:severity": {
    "category": "context_clues",
    "keyword": "severity",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "createHistoryTable"
    ],
    "description": "Code related to severity",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.831Z"
  },
  "context:createhistorytable": {
    "category": "context_clues",
    "keyword": "createhistorytable",
    "files": [
      "rProjects/VulnTrackr/app-functions.js"
    ],
    "functions": [
      "createHistoryTable"
    ],
    "description": "Code related to createhistorytable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.831Z"
  },
  "function:colLetterToIndex": {
    "category": "code_functions",
    "keyword": "colLetterToIndex",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "colLetterToIndex"
    ],
    "description": "Function colLetterToIndex in app.js",
    "context_weight": 0.9,
    "line_number": 11,
    "body_preview": "function colLetterToIndex(letter) { return letter.toUpperCase().charCodeAt(0) - 65; }",
    "context_clues": [
      "col",
      "letter",
      "index",
      "startswith",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.841Z"
  },
  "context:col": {
    "category": "context_clues",
    "keyword": "col",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "colLetterToIndex",
      "colIndexToLetter"
    ],
    "description": "Code related to col",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:letter": {
    "category": "context_clues",
    "keyword": "letter",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "colLetterToIndex",
      "colIndexToLetter"
    ],
    "description": "Code related to letter",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "file:app.js": {
    "category": "file_relationships",
    "keyword": "app.js",
    "primary_file": "rProjects/VulnTrackr/app.js",
    "functions": [
      "colLetterToIndex",
      "translateFormula",
      "toNumber",
      "applyFormulaToData",
      "renderTable",
      "colIndexToLetter",
      "renderChart",
      "storeCurrentResults",
      "generateSampleData",
      "getTrendIndicator",
      "updateProgressBar",
      "autoCalculatePanels",
      "setTrackedPanel",
      "filenamePatternFrom",
      "renderHistories"
    ],
    "description": "File containing colLetterToIndex and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.264Z"
  },
  "function:translateFormula": {
    "category": "code_functions",
    "keyword": "translateFormula",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "translateFormula"
    ],
    "description": "Function translateFormula in app.js",
    "context_weight": 0.9,
    "line_number": 15,
    "body_preview": "function translateFormula(formula) { // Expect formula like =A*B+C or =[col1]*[col2]+10 let f = formula.trim();",
    "context_clues": [
      "translate",
      "formula",
      "startswith",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.841Z"
  },
  "context:translate": {
    "category": "context_clues",
    "keyword": "translate",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "translateFormula"
    ],
    "description": "Code related to translate",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.841Z"
  },
  "context:formula": {
    "category": "context_clues",
    "keyword": "formula",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "translateFormula",
      "applyFormulaToData"
    ],
    "description": "Code related to formula",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.842Z"
  },
  "function:toNumber": {
    "category": "code_functions",
    "keyword": "toNumber",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "toNumber"
    ],
    "description": "Function toNumber in app.js",
    "context_weight": 0.9,
    "line_number": 35,
    "body_preview": "function toNumber(v) { if (v === null || v === undefined) return 0; if (typeof v === 'number') return v;",
    "context_clues": [
      "number",
      "parsefloat",
      "parseddata",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.842Z"
  },
  "function:applyFormulaToData": {
    "category": "code_functions",
    "keyword": "applyFormulaToData",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "applyFormulaToData"
    ],
    "description": "Function applyFormulaToData in app.js",
    "context_weight": 0.9,
    "line_number": 42,
    "body_preview": "function applyFormulaToData(jsExpr) { const results = []; for (const r of parsedData) {",
    "context_clues": [
      "apply",
      "formula",
      "data",
      "parseddata",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.842Z"
  },
  "function:colIndexToLetter": {
    "category": "code_functions",
    "keyword": "colIndexToLetter",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "colIndexToLetter"
    ],
    "description": "helper: 0 -> A, 25 -> Z, 26 -> AA",
    "context_weight": 0.9,
    "line_number": 66,
    "body_preview": "function colIndexToLetter(index) { let s = ''; let n = index + 1;",
    "context_clues": [
      "col",
      "index",
      "letter",
      "helper",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "function:renderChart": {
    "category": "code_functions",
    "keyword": "renderChart",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "renderChart"
    ],
    "description": "Function renderChart in app.js",
    "context_weight": 0.9,
    "line_number": 140,
    "body_preview": "function renderChart(results) { const ctx = document.getElementById('chart').getContext('2d'); if (window._chart) window._chart.destroy();",
    "context_clues": [
      "render",
      "chart",
      "getelementbyid",
      "getcontext",
      "parseddata",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.842Z"
  },
  "function:storeCurrentResults": {
    "category": "code_functions",
    "keyword": "storeCurrentResults",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "storeCurrentResults"
    ],
    "description": "Store current calculation results to history",
    "context_weight": 0.9,
    "line_number": 190,
    "body_preview": "function storeCurrentResults(filename) { const timestamp = new Date().toISOString(); const results = {};",
    "context_clues": [
      "store",
      "current",
      "results",
      "calculation",
      "history",
      "get",
      "getelementbyid",
      "parse",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "function:generateSampleData": {
    "category": "code_functions",
    "keyword": "generateSampleData",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "generateSampleData"
    ],
    "description": "Sample data generator for testing before any upload",
    "context_weight": 0.9,
    "line_number": 260,
    "body_preview": "function generateSampleData(cols = 8, rows = 50) { // headers as single letters A..Z, AA.. etc. function colIndexToLetter(index) {",
    "context_clues": [
      "generate",
      "sample",
      "data",
      "generator",
      "testing",
      "before",
      "upload",
      "generatesampledata",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:sample": {
    "category": "context_clues",
    "keyword": "sample",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "generateSampleData"
    ],
    "description": "Code related to sample",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:generatesampledata": {
    "category": "context_clues",
    "keyword": "generatesampledata",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "generateSampleData"
    ],
    "description": "Code related to generatesampledata",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "function:getTrendIndicator": {
    "category": "code_functions",
    "keyword": "getTrendIndicator",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "getTrendIndicator"
    ],
    "description": "Calculate trend indicators",
    "context_weight": 0.9,
    "line_number": 456,
    "body_preview": "function getTrendIndicator(current, previous) { if (previous === undefined || previous === null) return ''; if (current > previous) {",
    "context_clues": [
      "get",
      "trend",
      "indicator",
      "calculate",
      "indicators",
      "gettrendindicator",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:trend": {
    "category": "context_clues",
    "keyword": "trend",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "getTrendIndicator"
    ],
    "description": "Code related to trend",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "context:gettrendindicator": {
    "category": "context_clues",
    "keyword": "gettrendindicator",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "getTrendIndicator"
    ],
    "description": "Code related to gettrendindicator",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.843Z"
  },
  "function:updateProgressBar": {
    "category": "code_functions",
    "keyword": "updateProgressBar",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "updateProgressBar"
    ],
    "description": "Function updateProgressBar in app.js",
    "context_weight": 0.9,
    "line_number": 468,
    "body_preview": "function updateProgressBar(id, value, max) { const percentage = max > 0 ? (value / max) * 100 : 0; const progressBar = document.getElementById(`progress-${id}`);",
    "context_clues": [
      "update",
      "progress",
      "bar",
      "updateprogressbar",
      "getelementbyid",
      "find",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:bar": {
    "category": "context_clues",
    "keyword": "bar",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "updateProgressBar"
    ],
    "description": "Code related to bar",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:updateprogressbar": {
    "category": "context_clues",
    "keyword": "updateprogressbar",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "updateProgressBar"
    ],
    "description": "Code related to updateprogressbar",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "function:autoCalculatePanels": {
    "category": "code_functions",
    "keyword": "autoCalculatePanels",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "autoCalculatePanels"
    ],
    "description": "Function autoCalculatePanels in app.js",
    "context_weight": 0.9,
    "line_number": 476,
    "body_preview": "function autoCalculatePanels() { // Find severity and score columns const colSeverity = headers.findIndex(h => h.trim().toLowerCase() === 'definition.vpr.severity');",
    "context_clues": [
      "auto",
      "calculate",
      "panels",
      "find",
      "findindex",
      "get",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:findindex": {
    "category": "context_clues",
    "keyword": "findindex",
    "files": [
      "rProjects/VulnTrackr/app.js",
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "autoCalculatePanels",
      "processVPRData"
    ],
    "description": "Code related to findindex",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.874Z"
  },
  "function:setTrackedPanel": {
    "category": "code_functions",
    "keyword": "setTrackedPanel",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "setTrackedPanel"
    ],
    "description": "Track changes",
    "context_weight": 0.9,
    "line_number": 626,
    "body_preview": "function setTrackedPanel(id) { localStorage.setItem('trackedPanel', String(id)); document.querySelectorAll('.panel-track').forEach(b=>b.textContent='Track Changes');",
    "context_clues": [
      "set",
      "tracked",
      "panel",
      "track",
      "changes",
      "settrackedpanel",
      "setitem",
      "getelementbyid",
      "addeventlistener",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:tracked": {
    "category": "context_clues",
    "keyword": "tracked",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "setTrackedPanel"
    ],
    "description": "Code related to tracked",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:track": {
    "category": "context_clues",
    "keyword": "track",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "setTrackedPanel"
    ],
    "description": "Code related to track",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "context:settrackedpanel": {
    "category": "context_clues",
    "keyword": "settrackedpanel",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "setTrackedPanel"
    ],
    "description": "Code related to settrackedpanel",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "function:filenamePatternFrom": {
    "category": "code_functions",
    "keyword": "filenamePatternFrom",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "filenamePatternFrom"
    ],
    "description": "Function filenamePatternFrom in app.js",
    "context_weight": 0.9,
    "line_number": 656,
    "body_preview": "function filenamePatternFrom(name) { if (!name) return null; // escape regex chars, then replace digit groups with \\d+",
    "context_clues": [
      "filename",
      "pattern",
      "from",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.844Z"
  },
  "function:renderHistories": {
    "category": "code_functions",
    "keyword": "renderHistories",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "renderHistories"
    ],
    "description": "Render histories (used for import/export to rebuild charts and tables)",
    "context_weight": 0.9,
    "line_number": 780,
    "body_preview": "function renderHistories() { const processedLabels = histories[0].map(h=>h? h.file : ''); for (let p=0;p<5;p++){",
    "context_clues": [
      "render",
      "histories",
      "used",
      "importexport",
      "rebuild",
      "charts",
      "tables",
      "processedlabels",
      "getelementbyid",
      "getcontext",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "context:histories": {
    "category": "context_clues",
    "keyword": "histories",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "renderHistories"
    ],
    "description": "Code related to histories",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "context:rebuild": {
    "category": "context_clues",
    "keyword": "rebuild",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "renderHistories"
    ],
    "description": "Code related to rebuild",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "context:processedlabels": {
    "category": "context_clues",
    "keyword": "processedlabels",
    "files": [
      "rProjects/VulnTrackr/app.js"
    ],
    "functions": [
      "renderHistories"
    ],
    "description": "Code related to processedlabels",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.845Z"
  },
  "function:handleBulkUpload": {
    "category": "code_functions",
    "keyword": "handleBulkUpload",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "handleBulkUpload"
    ],
    "description": "Bulk Upload Module for VPR Score tracking Function to handle multiple file uploads",
    "context_weight": 0.9,
    "line_number": 4,
    "body_preview": "async function handleBulkUpload(files) { const results = []; const warnings = [];",
    "context_clues": [
      "handle",
      "bulk",
      "upload",
      "module",
      "score",
      "tracking",
      "multiple",
      "file",
      "uploads",
      "handlebulkupload",
      "parsecsvfile"
    ],
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "context:score": {
    "category": "context_clues",
    "keyword": "score",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js",
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "handleBulkUpload",
      "generateHTMLReport"
    ],
    "description": "Code related to score",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.896Z"
  },
  "context:uploads": {
    "category": "context_clues",
    "keyword": "uploads",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "handleBulkUpload"
    ],
    "description": "Code related to uploads",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "context:handlebulkupload": {
    "category": "context_clues",
    "keyword": "handlebulkupload",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "handleBulkUpload"
    ],
    "description": "Code related to handlebulkupload",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "context:parsecsvfile": {
    "category": "context_clues",
    "keyword": "parsecsvfile",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "handleBulkUpload",
      "parseCSVFile"
    ],
    "description": "Code related to parsecsvfile",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "file:bulk-upload.js": {
    "category": "file_relationships",
    "keyword": "bulk-upload.js",
    "primary_file": "rProjects/VulnTrackr/modules/bulk-upload.js",
    "functions": [
      "handleBulkUpload",
      "parseCSVFile",
      "processVPRData",
      "saveResultsToHistory"
    ],
    "description": "File containing handleBulkUpload and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.291Z"
  },
  "function:parseCSVFile": {
    "category": "code_functions",
    "keyword": "parseCSVFile",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "parseCSVFile"
    ],
    "description": "Parse a CSV file using PapaParse",
    "context_weight": 0.9,
    "line_number": 26,
    "body_preview": "function parseCSVFile(file) { return new Promise((resolve, reject) => { Papa.parse(file, {",
    "context_clues": [
      "parse",
      "file",
      "using",
      "papaparse",
      "parsecsvfile",
      "filter",
      "bulk",
      "upload"
    ],
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "context:papaparse": {
    "category": "context_clues",
    "keyword": "papaparse",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "parseCSVFile"
    ],
    "description": "Code related to papaparse",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.873Z"
  },
  "function:processVPRData": {
    "category": "code_functions",
    "keyword": "processVPRData",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "processVPRData"
    ],
    "description": "Process VPR data from parsed CSV",
    "context_weight": 0.9,
    "line_number": 51,
    "body_preview": "function processVPRData(data) { const headers = data[0]; const rows = data.slice(1);",
    "context_clues": [
      "process",
      "data",
      "from",
      "parsed",
      "processvprdata",
      "find",
      "findindex",
      "bulk",
      "upload"
    ],
    "last_updated": "2025-08-20T17:24:09.874Z"
  },
  "context:processvprdata": {
    "category": "context_clues",
    "keyword": "processvprdata",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "processVPRData"
    ],
    "description": "Code related to processvprdata",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.874Z"
  },
  "function:saveResultsToHistory": {
    "category": "code_functions",
    "keyword": "saveResultsToHistory",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "saveResultsToHistory"
    ],
    "description": "Save processed results to history",
    "context_weight": 0.9,
    "line_number": 116,
    "body_preview": "function saveResultsToHistory(results) { // Get existing history or create new let history = JSON.parse(localStorage.getItem('vprHistory') || '[]');",
    "context_clues": [
      "save",
      "results",
      "history",
      "processed",
      "saveresultstohistory",
      "get",
      "create",
      "parse",
      "getitem",
      "add",
      "sort",
      "bulk",
      "upload"
    ],
    "last_updated": "2025-08-20T17:24:09.874Z"
  },
  "context:saveresultstohistory": {
    "category": "context_clues",
    "keyword": "saveresultstohistory",
    "files": [
      "rProjects/VulnTrackr/modules/bulk-upload.js"
    ],
    "functions": [
      "saveResultsToHistory"
    ],
    "description": "Code related to saveresultstohistory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.874Z"
  },
  "function:initDatabase": {
    "category": "code_functions",
    "keyword": "initDatabase",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initDatabase"
    ],
    "description": "Initialize database based on config",
    "context_weight": 0.9,
    "line_number": 6,
    "body_preview": "async function initDatabase(config) { if (config.type === 'sqlite') { return await initSQLite(config);",
    "context_clues": [
      "init",
      "database",
      "initialize",
      "based",
      "config",
      "initdatabase",
      "initsqlite",
      "initlocalstorage"
    ],
    "last_updated": "2025-08-20T17:24:09.885Z"
  },
  "context:database": {
    "category": "context_clues",
    "keyword": "database",
    "files": [
      "rProjects/VulnTrackr/modules/database.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "initDatabase",
      "initLocalStorage",
      "initSQLite",
      "getDockerPersistenceInstructions",
      "_initialize_database",
      "backup_database",
      "validate_database_schema"
    ],
    "description": "Code related to database",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:initdatabase": {
    "category": "context_clues",
    "keyword": "initdatabase",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initDatabase"
    ],
    "description": "Code related to initdatabase",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.885Z"
  },
  "context:initsqlite": {
    "category": "context_clues",
    "keyword": "initsqlite",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initDatabase",
      "initSQLite"
    ],
    "description": "Code related to initsqlite",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:initlocalstorage": {
    "category": "context_clues",
    "keyword": "initlocalstorage",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initDatabase",
      "initLocalStorage"
    ],
    "description": "Code related to initlocalstorage",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "file:database.js": {
    "category": "file_relationships",
    "keyword": "database.js",
    "primary_file": "rProjects/VulnTrackr/modules/database.js",
    "functions": [
      "initDatabase",
      "initLocalStorage",
      "initSQLite",
      "getDockerPersistenceInstructions"
    ],
    "description": "File containing initDatabase and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.306Z"
  },
  "function:initLocalStorage": {
    "category": "code_functions",
    "keyword": "initLocalStorage",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initLocalStorage"
    ],
    "description": "Initialize local storage \"database\"",
    "context_weight": 0.9,
    "line_number": 16,
    "body_preview": "function initLocalStorage() { return { type: 'local',",
    "context_clues": [
      "init",
      "local",
      "storage",
      "initialize",
      "database",
      "initlocalstorage",
      "savehistory",
      "setitem",
      "gethistory",
      "parse",
      "getitem"
    ],
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:savehistory": {
    "category": "context_clues",
    "keyword": "savehistory",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initLocalStorage",
      "initSQLite"
    ],
    "description": "Code related to savehistory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:gethistory": {
    "category": "context_clues",
    "keyword": "gethistory",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initLocalStorage"
    ],
    "description": "Code related to gethistory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "function:initSQLite": {
    "category": "code_functions",
    "keyword": "initSQLite",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initSQLite"
    ],
    "description": "Initialize SQLite database (would work in Electron or Node.js context)",
    "context_weight": 0.9,
    "line_number": 39,
    "body_preview": "async function initSQLite(config) { try { // This is a placeholder - in a real implementation, we'd use better-sqlite3 or similar",
    "context_clues": [
      "init",
      "lite",
      "initialize",
      "sqlite",
      "database",
      "would",
      "work",
      "electron",
      "nodejs",
      "context",
      "initsqlite",
      "savehistory"
    ],
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:lite": {
    "category": "context_clues",
    "keyword": "lite",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initSQLite"
    ],
    "description": "Code related to lite",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:sqlite": {
    "category": "context_clues",
    "keyword": "sqlite",
    "files": [
      "rProjects/VulnTrackr/modules/database.js",
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "initSQLite",
      "__init__",
      "_initialize_database",
      "_get_connection",
      "_update_memory_item",
      "_create_type_specific_entry",
      "_log_activity",
      "cleanup_expired_leases",
      "backup_database",
      "validate_database_schema",
      "execute_operation",
      "main"
    ],
    "description": "Code related to sqlite",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:would": {
    "category": "context_clues",
    "keyword": "would",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initSQLite"
    ],
    "description": "Code related to would",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:work": {
    "category": "context_clues",
    "keyword": "work",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initSQLite"
    ],
    "description": "Code related to work",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:electron": {
    "category": "context_clues",
    "keyword": "electron",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initSQLite"
    ],
    "description": "Code related to electron",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:nodejs": {
    "category": "context_clues",
    "keyword": "nodejs",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "initSQLite"
    ],
    "description": "Code related to nodejs",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "function:getDockerPersistenceInstructions": {
    "category": "code_functions",
    "keyword": "getDockerPersistenceInstructions",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "getDockerPersistenceInstructions"
    ],
    "description": "Docker persistence instructions - return a string with setup info",
    "context_weight": 0.9,
    "line_number": 73,
    "body_preview": "function getDockerPersistenceInstructions() { return ` # Dockerfile for VPR Tracker",
    "context_clues": [
      "get",
      "docker",
      "persistence",
      "instructions",
      "return",
      "string",
      "with",
      "setup",
      "info",
      "getdockerpersistenceinstructions",
      "copy",
      "create",
      "run",
      "database"
    ],
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:docker": {
    "category": "context_clues",
    "keyword": "docker",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "getDockerPersistenceInstructions"
    ],
    "description": "Code related to docker",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:persistence": {
    "category": "context_clues",
    "keyword": "persistence",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "getDockerPersistenceInstructions"
    ],
    "description": "Code related to persistence",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:instructions": {
    "category": "context_clues",
    "keyword": "instructions",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "getDockerPersistenceInstructions"
    ],
    "description": "Code related to instructions",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:getdockerpersistenceinstructions": {
    "category": "context_clues",
    "keyword": "getdockerpersistenceinstructions",
    "files": [
      "rProjects/VulnTrackr/modules/database.js"
    ],
    "functions": [
      "getDockerPersistenceInstructions"
    ],
    "description": "Code related to getdockerpersistenceinstructions",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "context:copy": {
    "category": "context_clues",
    "keyword": "copy",
    "files": [
      "rProjects/VulnTrackr/modules/database.js",
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "getDockerPersistenceInstructions",
      "checkHasApiKey"
    ],
    "description": "Code related to copy",
    "context_weight": 0.9999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.886Z"
  },
  "file:report-generator.js": {
    "category": "file_relationships",
    "keyword": "report-generator.js",
    "primary_file": "rProjects/VulnTrackr/modules/report-generator.js",
    "functions": [
      "generateHTMLReport",
      "generateLatestResults",
      "generateHistoryTable",
      "downloadHTMLReport"
    ],
    "description": "File containing generateHTMLReport and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.317Z"
  },
  "function:generateLatestResults": {
    "category": "code_functions",
    "keyword": "generateLatestResults",
    "files": [
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "generateLatestResults"
    ],
    "description": "Generate HTML for the latest scan results",
    "context_weight": 0.9,
    "line_number": 162,
    "body_preview": "function generateLatestResults(latestScan) { if (!latestScan) return '<p>No scan data available</p>'; const data = latestScan.data;",
    "context_clues": [
      "generate",
      "latest",
      "results",
      "html",
      "scan",
      "generatelatestresults",
      "report",
      "generator"
    ],
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:generatelatestresults": {
    "category": "context_clues",
    "keyword": "generatelatestresults",
    "files": [
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "generateLatestResults"
    ],
    "description": "Code related to generatelatestresults",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "function:generateHistoryTable": {
    "category": "code_functions",
    "keyword": "generateHistoryTable",
    "files": [
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "generateHistoryTable"
    ],
    "description": "Generate HTML table for scan history",
    "context_weight": 0.9,
    "line_number": 229,
    "body_preview": "function generateHistoryTable(history) { if (!history || !history.length) return '<p>No history data available</p>'; let tableRows = '';",
    "context_clues": [
      "generate",
      "history",
      "table",
      "html",
      "scan",
      "generatehistorytable",
      "report",
      "generator"
    ],
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:generatehistorytable": {
    "category": "context_clues",
    "keyword": "generatehistorytable",
    "files": [
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "generateHistoryTable"
    ],
    "description": "Code related to generatehistorytable",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "function:downloadHTMLReport": {
    "category": "code_functions",
    "keyword": "downloadHTMLReport",
    "files": [
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "downloadHTMLReport"
    ],
    "description": "Download the HTML report as a file",
    "context_weight": 0.9,
    "line_number": 274,
    "body_preview": "function downloadHTMLReport(history) { const html = generateHTMLReport(history); const blob = new Blob([html], { type: 'text/html' });",
    "context_clues": [
      "download",
      "report",
      "html",
      "file",
      "generatehtmlreport",
      "createobjecturl",
      "createelement",
      "appendchild",
      "generator"
    ],
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:createobjecturl": {
    "category": "context_clues",
    "keyword": "createobjecturl",
    "files": [
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "downloadHTMLReport"
    ],
    "description": "Code related to createobjecturl",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "context:appendchild": {
    "category": "context_clues",
    "keyword": "appendchild",
    "files": [
      "rProjects/VulnTrackr/modules/report-generator.js"
    ],
    "functions": [
      "downloadHTMLReport"
    ],
    "description": "Code related to appendchild",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.897Z"
  },
  "function:__init__": {
    "category": "code_functions",
    "keyword": "__init__",
    "files": [
      "rAgents/rTemplates/bootstrap_agent_system.py"
    ],
    "functions": [
      "__init__"
    ],
    "description": "Function __init__ in bootstrap_agent_system.py",
    "context_weight": 0.9,
    "line_number": 15,
    "body_preview": "def __init__(self, project_name: str, project_path: str): self.project_name = project_name self.project_path = Path(project_path)",
    "context_clues": [
      "init",
      "load_bootstrap_config",
      "load",
      "validate",
      "open",
      "bootstrap",
      "agent",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "context:validate_target": {
    "category": "context_clues",
    "keyword": "validate_target",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rScripts/deploy_agent_system.py"
    ],
    "functions": [
      "__init__"
    ],
    "description": "Code related to validate_target",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.254Z"
  },
  "context:deploy": {
    "category": "context_clues",
    "keyword": "deploy",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rScripts/deploy_agent_system.py"
    ],
    "functions": [
      "__init__",
      "main"
    ],
    "description": "Code related to deploy",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.254Z"
  },
  "file:deploy_agent_system.py": {
    "category": "file_relationships",
    "keyword": "deploy_agent_system.py",
    "primary_file": "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
    "functions": [
      "__init__",
      "main"
    ],
    "description": "File containing __init__ and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.350Z"
  },
  "context:parser": {
    "category": "context_clues",
    "keyword": "parser",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rScripts/deploy_agent_system.py"
    ],
    "functions": [
      "main",
      "validate_snapshot"
    ],
    "description": "Code related to parser",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.254Z"
  },
  "context:add_argument": {
    "category": "context_clues",
    "keyword": "add_argument",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rScripts/deploy_agent_system.py"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to add_argument",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.254Z"
  },
  "context:parse_args": {
    "category": "context_clues",
    "keyword": "parse_args",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/deploy_agent_system.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rScripts/deploy_agent_system.py"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to parse_args",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.254Z"
  },
  "context:create_memory_type": {
    "category": "context_clues",
    "keyword": "create_memory_type",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
      "rAgents/rScripts/dynamic_memory.py"
    ],
    "functions": [
      "__init__"
    ],
    "description": "Code related to create_memory_type",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.265Z"
  },
  "file:dynamic_memory.py": {
    "category": "file_relationships",
    "keyword": "dynamic_memory.py",
    "primary_file": "rAgents/rBackups/pre_zip_20250816_182517/scripts/dynamic_memory.py",
    "functions": [
      "__init__",
      "_add_to_sync_config",
      "_update_workflow_docs"
    ],
    "description": "File containing __init__ and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.359Z"
  },
  "function:_add_to_sync_config": {
    "category": "code_functions",
    "keyword": "_add_to_sync_config",
    "files": [
      "rAgents/rScripts/dynamic_memory.py"
    ],
    "functions": [
      "_add_to_sync_config"
    ],
    "description": "Function _add_to_sync_config in dynamic_memory.py",
    "context_weight": 0.9,
    "line_number": 101,
    "body_preview": "def _add_to_sync_config(self, memory_type: str, purpose: str, sync_priority: int): \"\"\"Adds the new memory type to sync configuration\"\"\" try:",
    "context_clues": [
      "add",
      "sync",
      "config",
      "adds",
      "load",
      "open",
      "dynamic",
      "memory"
    ],
    "last_updated": "2025-08-20T17:24:10.265Z"
  },
  "function:_update_workflow_docs": {
    "category": "code_functions",
    "keyword": "_update_workflow_docs",
    "files": [
      "rAgents/rScripts/dynamic_memory.py"
    ],
    "functions": [
      "_update_workflow_docs"
    ],
    "description": "Function _update_workflow_docs in dynamic_memory.py",
    "context_weight": 0.9,
    "line_number": 141,
    "body_preview": "def _update_workflow_docs(self, memory_type: str, purpose: str): \"\"\"Updates workflow documentation to include the new memory type\"\"\" try:",
    "context_clues": [
      "update",
      "workflow",
      "docs",
      "updates",
      "dynamic",
      "memory"
    ],
    "last_updated": "2025-08-20T17:24:10.265Z"
  },
  "context:setup_logging": {
    "category": "context_clues",
    "keyword": "setup_logging",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rScripts/mcp_json_sync.py"
    ],
    "functions": [
      "__init__",
      "setup_logging"
    ],
    "description": "Code related to setup_logging",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "file:mcp_json_sync.py": {
    "category": "file_relationships",
    "keyword": "mcp_json_sync.py",
    "primary_file": "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
    "functions": [
      "__init__",
      "setup_logging",
      "save_sync_metadata"
    ],
    "description": "File containing __init__ and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.367Z"
  },
  "function:setup_logging": {
    "category": "code_functions",
    "keyword": "setup_logging",
    "files": [
      "rAgents/rScripts/mcp_json_sync.py"
    ],
    "functions": [
      "setup_logging"
    ],
    "description": "Function setup_logging in mcp_json_sync.py",
    "context_weight": 0.9,
    "line_number": 65,
    "body_preview": "def setup_logging(self): \"\"\"Setup logging for sync operations\"\"\" logging.basicConfig(",
    "context_clues": [
      "setup",
      "logging",
      "setup_logging",
      "handlers",
      "mcp",
      "json",
      "sync"
    ],
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "function:save_sync_metadata": {
    "category": "code_functions",
    "keyword": "save_sync_metadata",
    "files": [
      "rAgents/rScripts/mcp_json_sync.py"
    ],
    "functions": [
      "save_sync_metadata"
    ],
    "description": "Function save_sync_metadata in mcp_json_sync.py",
    "context_weight": 0.9,
    "line_number": 98,
    "body_preview": "def save_sync_metadata(self, metadata: Dict): \"\"\"Save synchronization metadata\"\"\" with open(self.sync_metadata_file, 'w') as f:",
    "context_clues": [
      "save",
      "sync",
      "metadata",
      "save_sync_metadata",
      "open",
      "convert",
      "mcp",
      "json"
    ],
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "context:metadata": {
    "category": "context_clues",
    "keyword": "metadata",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rScripts/mcp_json_sync.py"
    ],
    "functions": [
      "save_sync_metadata"
    ],
    "description": "Code related to metadata",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "context:save_sync_metadata": {
    "category": "context_clues",
    "keyword": "save_sync_metadata",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/mcp_json_sync.py",
      "rAgents/rScripts/mcp_json_sync.py"
    ],
    "functions": [
      "save_sync_metadata"
    ],
    "description": "Code related to save_sync_metadata",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.276Z"
  },
  "context:vault": {
    "category": "context_clues",
    "keyword": "vault",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "__init__",
      "ensure_vault_directory",
      "get_last_sync_time",
      "update_last_sync_time",
      "has_changes",
      "sync_memory_files",
      "commit_and_push",
      "sync",
      "main"
    ],
    "description": "Code related to vault",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.965Z"
  },
  "file:sync_memory_vault.py": {
    "category": "file_relationships",
    "keyword": "sync_memory_vault.py",
    "primary_file": "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
    "functions": [
      "__init__",
      "ensure_vault_directory",
      "get_last_sync_time",
      "update_last_sync_time",
      "has_changes",
      "sync_memory_files",
      "commit_and_push",
      "sync",
      "main"
    ],
    "description": "File containing __init__ and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.377Z"
  },
  "function:ensure_vault_directory": {
    "category": "code_functions",
    "keyword": "ensure_vault_directory",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py"
    ],
    "functions": [
      "ensure_vault_directory"
    ],
    "description": "Function ensure_vault_directory in sync_memory_vault.py",
    "context_weight": 0.9,
    "line_number": 19,
    "body_preview": "def ensure_vault_directory(self): \"\"\"Ensure the vault directory exists\"\"\" self.vault_path.mkdir(parents=True, exist_ok=True)",
    "context_clues": [
      "ensure",
      "vault",
      "directory",
      "get_last_sync_time",
      "get",
      "read_text",
      "sync",
      "memory"
    ],
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "context:directory": {
    "category": "context_clues",
    "keyword": "directory",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "ensure_vault_directory"
    ],
    "description": "Code related to directory",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "context:get_last_sync_time": {
    "category": "context_clues",
    "keyword": "get_last_sync_time",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "ensure_vault_directory",
      "get_last_sync_time",
      "update_last_sync_time",
      "has_changes",
      "sync"
    ],
    "description": "Code related to get_last_sync_time",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.965Z"
  },
  "context:read_text": {
    "category": "context_clues",
    "keyword": "read_text",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "ensure_vault_directory",
      "get_last_sync_time"
    ],
    "description": "Code related to read_text",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "function:get_last_sync_time": {
    "category": "code_functions",
    "keyword": "get_last_sync_time",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py"
    ],
    "functions": [
      "get_last_sync_time"
    ],
    "description": "Function get_last_sync_time in sync_memory_vault.py",
    "context_weight": 0.9,
    "line_number": 23,
    "body_preview": "def get_last_sync_time(self): \"\"\"Get the last sync timestamp\"\"\" if self.last_sync_file.exists():",
    "context_clues": [
      "get",
      "last",
      "sync",
      "time",
      "get_last_sync_time",
      "read_text",
      "update_last_sync_time",
      "update",
      "write_text",
      "memory",
      "vault"
    ],
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "context:update_last_sync_time": {
    "category": "context_clues",
    "keyword": "update_last_sync_time",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "get_last_sync_time",
      "update_last_sync_time"
    ],
    "description": "Code related to update_last_sync_time",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "context:write_text": {
    "category": "context_clues",
    "keyword": "write_text",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "get_last_sync_time",
      "update_last_sync_time"
    ],
    "description": "Code related to write_text",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "function:update_last_sync_time": {
    "category": "code_functions",
    "keyword": "update_last_sync_time",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py"
    ],
    "functions": [
      "update_last_sync_time"
    ],
    "description": "Function update_last_sync_time in sync_memory_vault.py",
    "context_weight": 0.9,
    "line_number": 29,
    "body_preview": "def update_last_sync_time(self): \"\"\"Update the last sync timestamp\"\"\" self.last_sync_file.write_text(str(time.time()))",
    "context_clues": [
      "update",
      "last",
      "sync",
      "time",
      "update_last_sync_time",
      "write_text",
      "check",
      "get_last_sync_time",
      "getmtime",
      "memory",
      "vault"
    ],
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "context:getmtime": {
    "category": "context_clues",
    "keyword": "getmtime",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "update_last_sync_time",
      "has_changes",
      "sync"
    ],
    "description": "Code related to getmtime",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.965Z"
  },
  "function:has_changes": {
    "category": "code_functions",
    "keyword": "has_changes",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py"
    ],
    "functions": [
      "has_changes"
    ],
    "description": "Function has_changes in sync_memory_vault.py",
    "context_weight": 0.9,
    "line_number": 33,
    "body_preview": "def has_changes(self, file_path): \"\"\"Check if file has changed since last sync\"\"\" last_sync = self.get_last_sync_time()",
    "context_clues": [
      "has",
      "changes",
      "check",
      "get_last_sync_time",
      "getmtime",
      "sync",
      "memory",
      "vault"
    ],
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "function:sync_memory_files": {
    "category": "code_functions",
    "keyword": "sync_memory_files",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py"
    ],
    "functions": [
      "sync_memory_files"
    ],
    "description": "Function sync_memory_files in sync_memory_vault.py",
    "context_weight": 0.9,
    "line_number": 38,
    "body_preview": "def sync_memory_files(self): \"\"\"Sync memory files to vault\"\"\" changes = False",
    "context_clues": [
      "sync",
      "memory",
      "files",
      "vault"
    ],
    "last_updated": "2025-08-20T17:24:09.964Z"
  },
  "function:commit_and_push": {
    "category": "code_functions",
    "keyword": "commit_and_push",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py"
    ],
    "functions": [
      "commit_and_push"
    ],
    "description": "Function commit_and_push in sync_memory_vault.py",
    "context_weight": 0.9,
    "line_number": 70,
    "body_preview": "def commit_and_push(self): \"\"\"Commit and push changes to vault repo\"\"\" timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')",
    "context_clues": [
      "commit",
      "and",
      "push",
      "run",
      "add",
      "check",
      "sync",
      "memory",
      "vault"
    ],
    "last_updated": "2025-08-20T17:24:09.965Z"
  },
  "context:commit": {
    "category": "context_clues",
    "keyword": "commit",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "commit_and_push"
    ],
    "description": "Code related to commit",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.965Z"
  },
  "context:push": {
    "category": "context_clues",
    "keyword": "push",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py",
      "rAgents/rScripts/sync_memory_vault.py"
    ],
    "functions": [
      "commit_and_push"
    ],
    "description": "Code related to push",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.965Z"
  },
  "function:sync": {
    "category": "code_functions",
    "keyword": "sync",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_memory_vault.py"
    ],
    "functions": [
      "sync"
    ],
    "description": "Function sync in sync_memory_vault.py",
    "context_weight": 0.9,
    "line_number": 35,
    "body_preview": "last_sync = self.get_last_sync_time() return os.path.getmtime(file_path) > last_sync def sync_memory_files(self):",
    "context_clues": [
      "sync",
      "get_last_sync_time",
      "getmtime",
      "memory",
      "vault"
    ],
    "last_updated": "2025-08-20T17:24:09.965Z"
  },
  "function:fetch_tasks_from_memory": {
    "category": "code_functions",
    "keyword": "fetch_tasks_from_memory",
    "files": [
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "fetch_tasks_from_memory"
    ],
    "description": "Function to read tasks from MCP memory (mocked for now)",
    "context_weight": 0.9,
    "line_number": 10,
    "body_preview": "def fetch_tasks_from_memory(): # Replace this with actual MCP memory API calls try:",
    "context_clues": [
      "fetch",
      "tasks",
      "from",
      "memory",
      "read",
      "mocked",
      "fetch_tasks_from_memory",
      "open",
      "load",
      "update",
      "update_roadmap",
      "sync"
    ],
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:tasks": {
    "category": "context_clues",
    "keyword": "tasks",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rEngine/backup/json_backup_system.py",
      "rAgents/rEngine/backup/mcp_backup_system.py",
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "fetch_tasks_from_memory",
      "update_roadmap",
      "sync_tasks_to_memory",
      "get_available_tasks_from_json",
      "get_available_tasks_from_backup"
    ],
    "description": "Code related to tasks",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:mocked": {
    "category": "context_clues",
    "keyword": "mocked",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "fetch_tasks_from_memory",
      "sync_tasks_to_memory"
    ],
    "description": "Code related to mocked",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:fetch_tasks_from_memory": {
    "category": "context_clues",
    "keyword": "fetch_tasks_from_memory",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "fetch_tasks_from_memory"
    ],
    "description": "Code related to fetch_tasks_from_memory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:update_roadmap": {
    "category": "context_clues",
    "keyword": "update_roadmap",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "fetch_tasks_from_memory",
      "update_roadmap"
    ],
    "description": "Code related to update_roadmap",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "file:sync_tasks.py": {
    "category": "file_relationships",
    "keyword": "sync_tasks.py",
    "primary_file": "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
    "functions": [
      "fetch_tasks_from_memory",
      "update_roadmap",
      "sync_tasks_to_memory"
    ],
    "description": "File containing fetch_tasks_from_memory and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.386Z"
  },
  "function:update_roadmap": {
    "category": "code_functions",
    "keyword": "update_roadmap",
    "files": [
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "update_roadmap"
    ],
    "description": "Function to update roadmap.md",
    "context_weight": 0.9,
    "line_number": 19,
    "body_preview": "def update_roadmap(tasks): if not tasks: print(\"No tasks found in memory.\")",
    "context_clues": [
      "update",
      "roadmap",
      "roadmapmd",
      "update_roadmap",
      "open",
      "write",
      "updated",
      "sync",
      "tasks"
    ],
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "context:roadmapmd": {
    "category": "context_clues",
    "keyword": "roadmapmd",
    "files": [
      "rAgents/rBackups/pre_zip_20250816_182517/scripts/sync_tasks.py",
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "update_roadmap"
    ],
    "description": "Code related to roadmapmd",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "function:sync_tasks_to_memory": {
    "category": "code_functions",
    "keyword": "sync_tasks_to_memory",
    "files": [
      "rAgents/rScripts/sync_tasks.py"
    ],
    "functions": [
      "sync_tasks_to_memory"
    ],
    "description": "Function to sync tasks to memory (mocked for now)",
    "context_weight": 0.9,
    "line_number": 32,
    "body_preview": "def sync_tasks_to_memory(): # Replace this with actual MCP memory API calls try:",
    "context_clues": [
      "sync",
      "tasks",
      "memory",
      "mocked",
      "open",
      "startswith"
    ],
    "last_updated": "2025-08-20T17:24:10.298Z"
  },
  "function:ensure_backup_dir": {
    "category": "code_functions",
    "keyword": "ensure_backup_dir",
    "files": [
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "ensure_backup_dir"
    ],
    "description": "Function ensure_backup_dir in mcp_backup_system.py",
    "context_weight": 0.9,
    "line_number": 20,
    "body_preview": "def ensure_backup_dir(): \"\"\"Create backup directory if it doesn't exist\"\"\" Path(BACKUP_DIR).mkdir(parents=True, exist_ok=True)",
    "context_clues": [
      "ensure",
      "backup",
      "dir",
      "create",
      "export_mcp_memory_to_json",
      "export",
      "mcp",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:10.011Z"
  },
  "file:json_backup_system.py": {
    "category": "file_relationships",
    "keyword": "json_backup_system.py",
    "primary_file": "rAgents/rEngine/backup/json_backup_system.py",
    "functions": [
      "ensure_backup_dir",
      "backup_json_files",
      "restore_from_backup",
      "load_json_memory_fallback",
      "get_available_tasks_from_json",
      "search_json_memory",
      "create_emergency_recovery_package"
    ],
    "description": "File containing ensure_backup_dir and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.407Z"
  },
  "function:backup_json_files": {
    "category": "code_functions",
    "keyword": "backup_json_files",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "backup_json_files"
    ],
    "description": "Function backup_json_files in json_backup_system.py",
    "context_weight": 0.9,
    "line_number": 46,
    "body_preview": "def backup_json_files(): \"\"\"Backup all core JSON files with timestamp\"\"\" ensure_backup_dir()",
    "context_clues": [
      "backup",
      "json",
      "files",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:09.994Z"
  },
  "function:restore_from_backup": {
    "category": "code_functions",
    "keyword": "restore_from_backup",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "restore_from_backup"
    ],
    "description": "Function restore_from_backup in json_backup_system.py",
    "context_weight": 0.9,
    "line_number": 96,
    "body_preview": "def restore_from_backup(timestamp=None): \"\"\" Restore JSON files from backup",
    "context_clues": [
      "restore",
      "from",
      "backup",
      "json",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:09.994Z"
  },
  "function:load_json_memory_fallback": {
    "category": "code_functions",
    "keyword": "load_json_memory_fallback",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "load_json_memory_fallback"
    ],
    "description": "Function load_json_memory_fallback in json_backup_system.py",
    "context_weight": 0.9,
    "line_number": 128,
    "body_preview": "def load_json_memory_fallback(): \"\"\" Load complete project context from JSON files when MCP unavailable",
    "context_clues": [
      "load",
      "json",
      "memory",
      "fallback",
      "load_json_memory_fallback",
      "loaded",
      "backup",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:09.995Z"
  },
  "context:load_json_memory_fallback": {
    "category": "context_clues",
    "keyword": "load_json_memory_fallback",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "load_json_memory_fallback"
    ],
    "description": "Code related to load_json_memory_fallback",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.995Z"
  },
  "function:get_available_tasks_from_json": {
    "category": "code_functions",
    "keyword": "get_available_tasks_from_json",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "get_available_tasks_from_json"
    ],
    "description": "Function get_available_tasks_from_json in json_backup_system.py",
    "context_weight": 0.9,
    "line_number": 180,
    "body_preview": "def get_available_tasks_from_json(): \"\"\" Extract available tasks from tasks.json for agent queries",
    "context_clues": [
      "get",
      "available",
      "tasks",
      "from",
      "json",
      "get_available_tasks_from_json",
      "open",
      "load",
      "backup",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:09.995Z"
  },
  "context:get_available_tasks_from_json": {
    "category": "context_clues",
    "keyword": "get_available_tasks_from_json",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "get_available_tasks_from_json"
    ],
    "description": "Code related to get_available_tasks_from_json",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.995Z"
  },
  "function:search_json_memory": {
    "category": "code_functions",
    "keyword": "search_json_memory",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "search_json_memory"
    ],
    "description": "Function search_json_memory in json_backup_system.py",
    "context_weight": 0.9,
    "line_number": 220,
    "body_preview": "def search_json_memory(query): \"\"\" Search across all JSON files for relevant information",
    "context_clues": [
      "search",
      "json",
      "memory",
      "search_json_memory",
      "backup",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:09.996Z"
  },
  "context:search_json_memory": {
    "category": "context_clues",
    "keyword": "search_json_memory",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "search_json_memory"
    ],
    "description": "Code related to search_json_memory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.996Z"
  },
  "function:create_emergency_recovery_package": {
    "category": "code_functions",
    "keyword": "create_emergency_recovery_package",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "create_emergency_recovery_package"
    ],
    "description": "Function create_emergency_recovery_package in json_backup_system.py",
    "context_weight": 0.9,
    "line_number": 258,
    "body_preview": "def create_emergency_recovery_package(): \"\"\" Create a complete recovery package with all critical files",
    "context_clues": [
      "create",
      "emergency",
      "recovery",
      "package",
      "create_emergency_recovery_package",
      "json",
      "backup",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:09.996Z"
  },
  "context:emergency": {
    "category": "context_clues",
    "keyword": "emergency",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "create_emergency_recovery_package"
    ],
    "description": "Code related to emergency",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.996Z"
  },
  "context:recovery": {
    "category": "context_clues",
    "keyword": "recovery",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "create_emergency_recovery_package"
    ],
    "description": "Code related to recovery",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.996Z"
  },
  "context:package": {
    "category": "context_clues",
    "keyword": "package",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "create_emergency_recovery_package"
    ],
    "description": "Code related to package",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.996Z"
  },
  "context:create_emergency_recovery_package": {
    "category": "context_clues",
    "keyword": "create_emergency_recovery_package",
    "files": [
      "rAgents/rEngine/backup/json_backup_system.py"
    ],
    "functions": [
      "create_emergency_recovery_package"
    ],
    "description": "Code related to create_emergency_recovery_package",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.996Z"
  },
  "context:export_mcp_memory_to_json": {
    "category": "context_clues",
    "keyword": "export_mcp_memory_to_json",
    "files": [
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "ensure_backup_dir",
      "export_mcp_memory_to_json"
    ],
    "description": "Code related to export_mcp_memory_to_json",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.011Z"
  },
  "file:mcp_backup_system.py": {
    "category": "file_relationships",
    "keyword": "mcp_backup_system.py",
    "primary_file": "rAgents/rEngine/backup/mcp_backup_system.py",
    "functions": [
      "ensure_backup_dir",
      "export_mcp_memory_to_json",
      "load_backup_memory",
      "get_available_tasks_from_backup",
      "search_backup_memory"
    ],
    "description": "File containing ensure_backup_dir and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.417Z"
  },
  "function:export_mcp_memory_to_json": {
    "category": "code_functions",
    "keyword": "export_mcp_memory_to_json",
    "files": [
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "export_mcp_memory_to_json"
    ],
    "description": "Function export_mcp_memory_to_json in mcp_backup_system.py",
    "context_weight": 0.9,
    "line_number": 24,
    "body_preview": "def export_mcp_memory_to_json(mcp_graph_data): \"\"\" Export complete MCP memory graph to structured JSON files",
    "context_clues": [
      "export",
      "mcp",
      "memory",
      "json",
      "export_mcp_memory_to_json",
      "backup",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:10.011Z"
  },
  "function:load_backup_memory": {
    "category": "code_functions",
    "keyword": "load_backup_memory",
    "files": [
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "load_backup_memory"
    ],
    "description": "Function load_backup_memory in mcp_backup_system.py",
    "context_weight": 0.9,
    "line_number": 97,
    "body_preview": "def load_backup_memory(): \"\"\" Load memory from backup files when MCP is unavailable",
    "context_clues": [
      "load",
      "backup",
      "memory",
      "load_backup_memory",
      "mcp",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:10.011Z"
  },
  "context:load_backup_memory": {
    "category": "context_clues",
    "keyword": "load_backup_memory",
    "files": [
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "load_backup_memory",
      "get_available_tasks_from_backup"
    ],
    "description": "Code related to load_backup_memory",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.011Z"
  },
  "function:get_available_tasks_from_backup": {
    "category": "code_functions",
    "keyword": "get_available_tasks_from_backup",
    "files": [
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "get_available_tasks_from_backup"
    ],
    "description": "Function get_available_tasks_from_backup in mcp_backup_system.py",
    "context_weight": 0.9,
    "line_number": 141,
    "body_preview": "def get_available_tasks_from_backup(): \"\"\" Extract available tasks from backup files for agent queries",
    "context_clues": [
      "get",
      "available",
      "tasks",
      "from",
      "backup",
      "get_available_tasks_from_backup",
      "load_backup_memory",
      "mcp",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:10.011Z"
  },
  "context:get_available_tasks_from_backup": {
    "category": "context_clues",
    "keyword": "get_available_tasks_from_backup",
    "files": [
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "get_available_tasks_from_backup"
    ],
    "description": "Code related to get_available_tasks_from_backup",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.011Z"
  },
  "function:search_backup_memory": {
    "category": "code_functions",
    "keyword": "search_backup_memory",
    "files": [
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "search_backup_memory"
    ],
    "description": "Function search_backup_memory in mcp_backup_system.py",
    "context_weight": 0.9,
    "line_number": 188,
    "body_preview": "def search_backup_memory(query): \"\"\" Search backup memory for relevant information",
    "context_clues": [
      "search",
      "backup",
      "memory",
      "search_backup_memory",
      "mcp",
      "system"
    ],
    "last_updated": "2025-08-20T17:24:10.012Z"
  },
  "context:search_backup_memory": {
    "category": "context_clues",
    "keyword": "search_backup_memory",
    "files": [
      "rAgents/rEngine/backup/mcp_backup_system.py"
    ],
    "functions": [
      "search_backup_memory"
    ],
    "description": "Code related to search_backup_memory",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.012Z"
  },
  "context:cli": {
    "category": "context_clues",
    "keyword": "cli",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "main",
      "showHelp",
      "showStats",
      "showEntityTypes",
      "showSuggestions",
      "searchByType",
      "showRelated",
      "performSearch"
    ],
    "description": "Code related to cli",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "file:memory-search-cli.js": {
    "category": "file_relationships",
    "keyword": "memory-search-cli.js",
    "primary_file": "rAgents/rEngine/memory-search-cli.js",
    "functions": [
      "main",
      "showHelp",
      "showStats",
      "showEntityTypes",
      "showSuggestions",
      "searchByType",
      "showRelated",
      "performSearch"
    ],
    "description": "File containing main and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.428Z"
  },
  "function:showHelp": {
    "category": "code_functions",
    "keyword": "showHelp",
    "files": [
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showHelp"
    ],
    "description": "Function showHelp in memory-search-cli.js",
    "context_weight": 0.9,
    "line_number": 58,
    "body_preview": "function showHelp() { console.log(` 🔍 Memory Search CLI - StackTrackr Agent Memory Search",
    "context_clues": [
      "show",
      "help",
      "search",
      "get",
      "memory",
      "cli"
    ],
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "context:help": {
    "category": "context_clues",
    "keyword": "help",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js",
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "showHelp"
    ],
    "description": "Code related to help",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "function:showStats": {
    "category": "code_functions",
    "keyword": "showStats",
    "files": [
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showStats"
    ],
    "description": "Function showStats in memory-search-cli.js",
    "context_weight": 0.9,
    "line_number": 78,
    "body_preview": "function showStats() { const stats = searcher.getStats(); console.log('📊 Memory Search Index Statistics:');",
    "context_clues": [
      "show",
      "stats",
      "searcher",
      "getstats",
      "search",
      "build",
      "buildtime",
      "memory",
      "cli"
    ],
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "context:searcher": {
    "category": "context_clues",
    "keyword": "searcher",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showStats",
      "showEntityTypes",
      "showSuggestions",
      "searchByType",
      "showRelated",
      "performSearch"
    ],
    "description": "Code related to searcher",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:buildtime": {
    "category": "context_clues",
    "keyword": "buildtime",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showStats"
    ],
    "description": "Code related to buildtime",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "function:showEntityTypes": {
    "category": "code_functions",
    "keyword": "showEntityTypes",
    "files": [
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showEntityTypes"
    ],
    "description": "Function showEntityTypes in memory-search-cli.js",
    "context_weight": 0.9,
    "line_number": 92,
    "body_preview": "function showEntityTypes() { const stats = searcher.getStats(); console.log('📋 Available Entity Types:');",
    "context_clues": [
      "show",
      "entity",
      "types",
      "searcher",
      "getstats",
      "memory",
      "search",
      "cli"
    ],
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "context:entity": {
    "category": "context_clues",
    "keyword": "entity",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showEntityTypes"
    ],
    "description": "Code related to entity",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.121Z"
  },
  "function:showSuggestions": {
    "category": "code_functions",
    "keyword": "showSuggestions",
    "files": [
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showSuggestions"
    ],
    "description": "Function showSuggestions in memory-search-cli.js",
    "context_weight": 0.9,
    "line_number": 103,
    "body_preview": "function showSuggestions(partial) { const suggestions = searcher.suggestTerms(partial, 15); console.log(`💡 Search Term Suggestions for \"${partial}\":`);",
    "context_clues": [
      "show",
      "suggestions",
      "searcher",
      "search",
      "memory",
      "cli"
    ],
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:suggestions": {
    "category": "context_clues",
    "keyword": "suggestions",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showSuggestions"
    ],
    "description": "Code related to suggestions",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "function:searchByType": {
    "category": "code_functions",
    "keyword": "searchByType",
    "files": [
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "searchByType"
    ],
    "description": "Function searchByType in memory-search-cli.js",
    "context_weight": 0.9,
    "line_number": 118,
    "body_preview": "function searchByType(entityType) { const entities = searcher.searchByType(entityType); console.log(`🔍 Entities of type \"${entityType}\":`);",
    "context_clues": [
      "search",
      "type",
      "searchbytype",
      "searcher",
      "memory",
      "cli"
    ],
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:searchbytype": {
    "category": "context_clues",
    "keyword": "searchbytype",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "searchByType"
    ],
    "description": "Code related to searchbytype",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "function:showRelated": {
    "category": "code_functions",
    "keyword": "showRelated",
    "files": [
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showRelated"
    ],
    "description": "Function showRelated in memory-search-cli.js",
    "context_weight": 0.9,
    "line_number": 146,
    "body_preview": "function showRelated(entityId) { const entity = searcher.getEntity(entityId); if (!entity) {",
    "context_clues": [
      "show",
      "related",
      "searcher",
      "getentity",
      "findrelated",
      "memory",
      "search",
      "cli"
    ],
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:related": {
    "category": "context_clues",
    "keyword": "related",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showRelated"
    ],
    "description": "Code related to related",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:getentity": {
    "category": "context_clues",
    "keyword": "getentity",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showRelated"
    ],
    "description": "Code related to getentity",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:findrelated": {
    "category": "context_clues",
    "keyword": "findrelated",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "showRelated"
    ],
    "description": "Code related to findrelated",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "function:performSearch": {
    "category": "code_functions",
    "keyword": "performSearch",
    "files": [
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "performSearch"
    ],
    "description": "Function performSearch in memory-search-cli.js",
    "context_weight": 0.9,
    "line_number": 172,
    "body_preview": "function performSearch(query) { console.log(`🔍 Searching for: \"${query}\"`); console.log('='.repeat(50));",
    "context_clues": [
      "perform",
      "search",
      "searching",
      "starttime",
      "searcher",
      "searchtime",
      "memory",
      "cli"
    ],
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:perform": {
    "category": "context_clues",
    "keyword": "perform",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "performSearch"
    ],
    "description": "Code related to perform",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:searching": {
    "category": "context_clues",
    "keyword": "searching",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "performSearch"
    ],
    "description": "Code related to searching",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "context:searchtime": {
    "category": "context_clues",
    "keyword": "searchtime",
    "files": [
      "rAgents/rEngine/memory-search-cli.js",
      "rAgents/rLegacy/engine/memory-search-cli.js"
    ],
    "functions": [
      "performSearch"
    ],
    "description": "Code related to searchtime",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.122Z"
  },
  "function:ensure_dirs": {
    "category": "code_functions",
    "keyword": "ensure_dirs",
    "files": [
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "ensure_dirs"
    ],
    "description": "Function ensure_dirs in memory_checkin.py",
    "context_weight": 0.9,
    "line_number": 29,
    "body_preview": "def ensure_dirs(): \"\"\"Ensure all required directories exist.\"\"\" for d in [MEMORY_DIR, EVENTS_DIR, CHECKOUTS_DIR, MEMORY_DIR / \"locks\", SCHEMAS_DIR, ROOT / \"config\"]:",
    "context_clues": [
      "ensure",
      "dirs",
      "checkouts_dir",
      "sort_keys",
      "read_json",
      "memory",
      "checkin"
    ],
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:dirs": {
    "category": "context_clues",
    "keyword": "dirs",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "ensure_dirs"
    ],
    "description": "Code related to dirs",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:checkouts_dir": {
    "category": "context_clues",
    "keyword": "checkouts_dir",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "ensure_dirs"
    ],
    "description": "Code related to checkouts_dir",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:sort_keys": {
    "category": "context_clues",
    "keyword": "sort_keys",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py"
    ],
    "functions": [
      "ensure_dirs",
      "calculate_hash"
    ],
    "description": "Code related to sort_keys",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.231Z"
  },
  "context:read_json": {
    "category": "context_clues",
    "keyword": "read_json",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "ensure_dirs"
    ],
    "description": "Code related to read_json",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:checkin": {
    "category": "context_clues",
    "keyword": "checkin",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "ensure_dirs",
      "write_atomic",
      "initialize_snapshot",
      "find_changes",
      "main"
    ],
    "description": "Code related to checkin",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "file:memory_checkin.py": {
    "category": "file_relationships",
    "keyword": "memory_checkin.py",
    "primary_file": "rAgents/rEngine/memory_checkin.py",
    "functions": [
      "ensure_dirs",
      "write_atomic",
      "initialize_snapshot",
      "find_changes",
      "main"
    ],
    "description": "File containing ensure_dirs and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.438Z"
  },
  "function:write_atomic": {
    "category": "code_functions",
    "keyword": "write_atomic",
    "files": [
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "write_atomic"
    ],
    "description": "Function write_atomic in memory_checkin.py",
    "context_weight": 0.9,
    "line_number": 49,
    "body_preview": "def write_atomic(path: Path, obj: Dict[str, Any]): \"\"\"Write JSON atomically using temp file + rename.\"\"\" path.parent.mkdir(parents=True, exist_ok=True)",
    "context_clues": [
      "write",
      "atomic",
      "write_atomic",
      "memory",
      "checkin"
    ],
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:atomic": {
    "category": "context_clues",
    "keyword": "atomic",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "write_atomic"
    ],
    "description": "Code related to atomic",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:write_atomic": {
    "category": "context_clues",
    "keyword": "write_atomic",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "write_atomic"
    ],
    "description": "Code related to write_atomic",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "function:initialize_snapshot": {
    "category": "code_functions",
    "keyword": "initialize_snapshot",
    "files": [
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "initialize_snapshot"
    ],
    "description": "Function initialize_snapshot in memory_checkin.py",
    "context_weight": 0.9,
    "line_number": 76,
    "body_preview": "def initialize_snapshot(): \"\"\"Initialize snapshot from existing memory files if it doesn't exist.\"\"\" if SNAP.exists():",
    "context_clues": [
      "initialize",
      "snapshot",
      "initialize_snapshot",
      "initializing",
      "memory",
      "checkin"
    ],
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:snapshot": {
    "category": "context_clues",
    "keyword": "snapshot",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py"
    ],
    "functions": [
      "initialize_snapshot",
      "validate_snapshot"
    ],
    "description": "Code related to snapshot",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.231Z"
  },
  "context:initialize_snapshot": {
    "category": "context_clues",
    "keyword": "initialize_snapshot",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "initialize_snapshot"
    ],
    "description": "Code related to initialize_snapshot",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "function:find_changes": {
    "category": "code_functions",
    "keyword": "find_changes",
    "files": [
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "find_changes"
    ],
    "description": "Function find_changes in memory_checkin.py",
    "context_weight": 0.9,
    "line_number": 208,
    "body_preview": "def find_changes(base_obj, new_obj, path=\"\"): if isinstance(new_obj, dict) and isinstance(base_obj, dict): for key, value in new_obj.items():",
    "context_clues": [
      "find",
      "changes",
      "find_changes",
      "append",
      "add",
      "memory",
      "checkin"
    ],
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:find_changes": {
    "category": "context_clues",
    "keyword": "find_changes",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "find_changes"
    ],
    "description": "Code related to find_changes",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:append": {
    "category": "context_clues",
    "keyword": "append",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "find_changes"
    ],
    "description": "Code related to append",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "context:checkout": {
    "category": "context_clues",
    "keyword": "checkout",
    "files": [
      "rAgents/rEngine/memory_checkin.py",
      "rAgents/rLegacy/engine/memory_checkin.py"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to checkout",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.134Z"
  },
  "file:sqlite_memory.py": {
    "category": "file_relationships",
    "keyword": "sqlite_memory.py",
    "primary_file": "rAgents/rEngine/sqlite_memory.py",
    "functions": [
      "__init__",
      "_initialize_database",
      "_get_connection",
      "_update_memory_item",
      "_create_type_specific_entry",
      "_log_activity",
      "cleanup_expired_leases"
    ],
    "description": "File containing __init__ and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.461Z"
  },
  "function:_initialize_database": {
    "category": "code_functions",
    "keyword": "_initialize_database",
    "files": [
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "_initialize_database"
    ],
    "description": "Function _initialize_database in sqlite_memory.py",
    "context_weight": 0.9,
    "line_number": 52,
    "body_preview": "def _initialize_database(self): \"\"\"Initialize database with schema if it doesn't exist.\"\"\" try:",
    "context_clues": [
      "initialize",
      "database",
      "check",
      "initialized",
      "execute",
      "fetchone",
      "initialization",
      "sqlite",
      "memory"
    ],
    "last_updated": "2025-08-20T17:24:10.155Z"
  },
  "context:execute": {
    "category": "context_clues",
    "keyword": "execute",
    "files": [
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "_initialize_database",
      "_update_memory_item",
      "_create_type_specific_entry",
      "_log_activity",
      "cleanup_expired_leases",
      "validate_database_schema",
      "execute_operation"
    ],
    "description": "Code related to execute",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:fetchone": {
    "category": "context_clues",
    "keyword": "fetchone",
    "files": [
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "_initialize_database"
    ],
    "description": "Code related to fetchone",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.155Z"
  },
  "function:_get_connection": {
    "category": "code_functions",
    "keyword": "_get_connection",
    "files": [
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "_get_connection"
    ],
    "description": "Function _get_connection in sqlite_memory.py",
    "context_weight": 0.9,
    "line_number": 75,
    "body_preview": "def _get_connection(self): \"\"\"Get database connection from pool or create new one.\"\"\" conn = None",
    "context_clues": [
      "get",
      "connection",
      "create",
      "connect",
      "sqlite",
      "memory"
    ],
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "function:_update_memory_item": {
    "category": "code_functions",
    "keyword": "_update_memory_item",
    "files": [
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "_update_memory_item"
    ],
    "description": "Private helper methods",
    "context_weight": 0.9,
    "line_number": 456,
    "body_preview": "def _update_memory_item(self, conn: sqlite3.Connection, memory_id: str, memory_data: Dict, updated_by: str): \"\"\"Update memory item data in transaction.\"\"\"",
    "context_clues": [
      "update",
      "memory",
      "item",
      "private",
      "helper",
      "methods",
      "connection",
      "updated_by",
      "execute",
      "set",
      "get",
      "sqlite"
    ],
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:private": {
    "category": "context_clues",
    "keyword": "private",
    "files": [
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "_update_memory_item"
    ],
    "description": "Code related to private",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:updated_by": {
    "category": "context_clues",
    "keyword": "updated_by",
    "files": [
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "_update_memory_item"
    ],
    "description": "Code related to updated_by",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "function:_create_type_specific_entry": {
    "category": "code_functions",
    "keyword": "_create_type_specific_entry",
    "files": [
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "_create_type_specific_entry"
    ],
    "description": "Function _create_type_specific_entry in sqlite_memory.py",
    "context_weight": 0.9,
    "line_number": 465,
    "body_preview": "def _create_type_specific_entry(self, conn: sqlite3.Connection, memory_type: str, memory_id: str, kwargs: Dict): \"\"\"Create entry in type-specific table.\"\"\"",
    "context_clues": [
      "create",
      "type",
      "specific",
      "entry",
      "connection",
      "execute",
      "insert",
      "sqlite",
      "memory"
    ],
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "function:_log_activity": {
    "category": "code_functions",
    "keyword": "_log_activity",
    "files": [
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "_log_activity"
    ],
    "description": "Function _log_activity in sqlite_memory.py",
    "context_weight": 0.9,
    "line_number": 532,
    "body_preview": "def _log_activity(self, conn: sqlite3.Connection, memory_id: Optional[str], agent_name: str, operation: str, details: Dict): \"\"\"Log activity in transaction.\"\"\"",
    "context_clues": [
      "log",
      "activity",
      "connection",
      "execute",
      "insert",
      "sqlite",
      "memory"
    ],
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:activity": {
    "category": "context_clues",
    "keyword": "activity",
    "files": [
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "_log_activity"
    ],
    "description": "Code related to activity",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "function:cleanup_expired_leases": {
    "category": "code_functions",
    "keyword": "cleanup_expired_leases",
    "files": [
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "cleanup_expired_leases"
    ],
    "description": "Function cleanup_expired_leases in sqlite_memory.py",
    "context_weight": 0.9,
    "line_number": 541,
    "body_preview": "def cleanup_expired_leases(self): \"\"\"Clean up expired leases (run periodically).\"\"\" try:",
    "context_clues": [
      "cleanup",
      "expired",
      "leases",
      "run",
      "execute",
      "update",
      "set",
      "sqlite",
      "memory"
    ],
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:expired": {
    "category": "context_clues",
    "keyword": "expired",
    "files": [
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "cleanup_expired_leases"
    ],
    "description": "Code related to expired",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "context:leases": {
    "category": "context_clues",
    "keyword": "leases",
    "files": [
      "rAgents/rEngine/sqlite_memory.py",
      "rAgents/rLegacy/engine/sqlite_memory.py"
    ],
    "functions": [
      "cleanup_expired_leases"
    ],
    "description": "Code related to leases",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.156Z"
  },
  "function:load_schema": {
    "category": "code_functions",
    "keyword": "load_schema",
    "files": [
      "rAgents/rLegacy/engine/validate_schema.py"
    ],
    "functions": [
      "load_schema"
    ],
    "description": "Function load_schema in validate_schema.py",
    "context_weight": 0.9,
    "line_number": 16,
    "body_preview": "def load_schema(schema_name: str): \"\"\"Load a JSON schema by name.\"\"\" schema_path = SCHEMAS_DIR / f\"{schema_name}.json\"",
    "context_clues": [
      "load",
      "schema",
      "load_schema",
      "open",
      "validate_file",
      "validate"
    ],
    "last_updated": "2025-08-20T17:24:10.167Z"
  },
  "context:schema": {
    "category": "context_clues",
    "keyword": "schema",
    "files": [
      "rAgents/rEngine/validate_schema.py",
      "rAgents/rLegacy/engine/validate_schema.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "load_schema",
      "validate_file",
      "main",
      "validate_database_schema"
    ],
    "description": "Code related to schema",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:load_schema": {
    "category": "context_clues",
    "keyword": "load_schema",
    "files": [
      "rAgents/rEngine/validate_schema.py",
      "rAgents/rLegacy/engine/validate_schema.py"
    ],
    "functions": [
      "load_schema",
      "validate_file"
    ],
    "description": "Code related to load_schema",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.167Z"
  },
  "context:validate_file": {
    "category": "context_clues",
    "keyword": "validate_file",
    "files": [
      "rAgents/rEngine/validate_schema.py",
      "rAgents/rLegacy/engine/validate_schema.py"
    ],
    "functions": [
      "load_schema",
      "validate_file"
    ],
    "description": "Code related to validate_file",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.167Z"
  },
  "file:validate_schema.py": {
    "category": "file_relationships",
    "keyword": "validate_schema.py",
    "primary_file": "rAgents/rEngine/validate_schema.py",
    "functions": [
      "load_schema",
      "validate_file",
      "main"
    ],
    "description": "File containing load_schema and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.470Z"
  },
  "function:validate_file": {
    "category": "code_functions",
    "keyword": "validate_file",
    "files": [
      "rAgents/rLegacy/engine/validate_schema.py"
    ],
    "functions": [
      "validate_file"
    ],
    "description": "Function validate_file in validate_schema.py",
    "context_weight": 0.9,
    "line_number": 25,
    "body_preview": "def validate_file(file_path: str, schema_name: str, strict: bool = False): \"\"\"Validate a JSON file against a schema.\"\"\" try:",
    "context_clues": [
      "validate",
      "file",
      "validate_file",
      "open",
      "load",
      "load_schema",
      "schema"
    ],
    "last_updated": "2025-08-20T17:24:10.167Z"
  },
  "context:validate_schema": {
    "category": "context_clues",
    "keyword": "validate_schema",
    "files": [
      "rAgents/rEngine/validate_schema.py",
      "rAgents/rLegacy/engine/validate_schema.py"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to validate_schema",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.167Z"
  },
  "function:startServer": {
    "category": "code_functions",
    "keyword": "startServer",
    "files": [
      "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js"
    ],
    "functions": [
      "startServer"
    ],
    "description": "Initialize connections and start server",
    "context_weight": 0.9,
    "line_number": 178,
    "body_preview": "async function startServer() { try { // Connect to Redis",
    "context_clues": [
      "start",
      "server",
      "initialize",
      "connections",
      "startserver",
      "connect",
      "connected",
      "connection"
    ],
    "last_updated": "2025-08-20T17:24:10.107Z"
  },
  "context:connections": {
    "category": "context_clues",
    "keyword": "connections",
    "files": [
      "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js"
    ],
    "functions": [
      "startServer"
    ],
    "description": "Code related to connections",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.107Z"
  },
  "context:startserver": {
    "category": "context_clues",
    "keyword": "startserver",
    "files": [
      "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js"
    ],
    "functions": [
      "startServer"
    ],
    "description": "Code related to startserver",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.107Z"
  },
  "file:server.js": {
    "category": "file_relationships",
    "keyword": "server.js",
    "primary_file": "rAgents/rLab/serverless-plugin/docker-serverless/api/server.js",
    "functions": [
      "startServer"
    ],
    "description": "File containing startServer and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.499Z"
  },
  "function:calculate_hash": {
    "category": "code_functions",
    "keyword": "calculate_hash",
    "files": [
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py"
    ],
    "functions": [
      "calculate_hash"
    ],
    "description": "Function calculate_hash in apply_json_patch.py",
    "context_weight": 0.9,
    "line_number": 20,
    "body_preview": "def calculate_hash(data): \"\"\"Calculate SHA-256 hash of JSON data\"\"\" json_str = json.dumps(data, sort_keys=True, separators=(',', ':'))",
    "context_clues": [
      "calculate",
      "hash",
      "calculate_hash",
      "sort_keys",
      "create",
      "open",
      "write",
      "read",
      "apply",
      "json",
      "patch"
    ],
    "last_updated": "2025-08-20T17:24:10.231Z"
  },
  "context:hash": {
    "category": "context_clues",
    "keyword": "hash",
    "files": [
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py"
    ],
    "functions": [
      "calculate_hash"
    ],
    "description": "Code related to hash",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.231Z"
  },
  "context:calculate_hash": {
    "category": "context_clues",
    "keyword": "calculate_hash",
    "files": [
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py"
    ],
    "functions": [
      "calculate_hash"
    ],
    "description": "Code related to calculate_hash",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.231Z"
  },
  "context:patch": {
    "category": "context_clues",
    "keyword": "patch",
    "files": [
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "calculate_hash",
      "backup_file",
      "validate_snapshot",
      "main",
      "backup_database",
      "validate_database_schema",
      "execute_operation"
    ],
    "description": "Code related to patch",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "file:apply_json_patch.py": {
    "category": "file_relationships",
    "keyword": "apply_json_patch.py",
    "primary_file": "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
    "functions": [
      "calculate_hash",
      "backup_file",
      "validate_snapshot",
      "main"
    ],
    "description": "File containing calculate_hash and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.572Z"
  },
  "function:backup_file": {
    "category": "code_functions",
    "keyword": "backup_file",
    "files": [
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py"
    ],
    "functions": [
      "backup_file"
    ],
    "description": "Function backup_file in apply_json_patch.py",
    "context_weight": 0.9,
    "line_number": 25,
    "body_preview": "def backup_file(filepath): \"\"\"Create backup of original file\"\"\" backup_path = f\"{filepath}.backup.{int(__import__('time').time())}\"",
    "context_clues": [
      "backup",
      "file",
      "create",
      "open",
      "write",
      "read",
      "validate_snapshot",
      "apply",
      "json",
      "patch"
    ],
    "last_updated": "2025-08-20T17:24:10.231Z"
  },
  "context:validate_snapshot": {
    "category": "context_clues",
    "keyword": "validate_snapshot",
    "files": [
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_json_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py"
    ],
    "functions": [
      "backup_file",
      "validate_snapshot"
    ],
    "description": "Code related to validate_snapshot",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.231Z"
  },
  "function:validate_snapshot": {
    "category": "code_functions",
    "keyword": "validate_snapshot",
    "files": [
      "rAgents/rMemoryBundles/template_bundle/apply/apply_json_patch.py"
    ],
    "functions": [
      "validate_snapshot"
    ],
    "description": "Function validate_snapshot in apply_json_patch.py",
    "context_weight": 0.9,
    "line_number": 32,
    "body_preview": "def validate_snapshot(snapshot, schema_path=None): \"\"\"Basic validation of memory snapshot structure\"\"\" required_fields = ['github_copilot_memories', 'dependencies', 'interactions']",
    "context_clues": [
      "validate",
      "snapshot",
      "validate_snapshot",
      "parser",
      "apply",
      "json",
      "patch"
    ],
    "last_updated": "2025-08-20T17:24:10.231Z"
  },
  "function:backup_database": {
    "category": "code_functions",
    "keyword": "backup_database",
    "files": [
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "backup_database"
    ],
    "description": "Function backup_database in apply_sqlite_patch.py",
    "context_weight": 0.9,
    "line_number": 15,
    "body_preview": "def backup_database(db_path): \"\"\"Create backup of SQLite database\"\"\" backup_path = f\"{db_path}.backup.{int(__import__('time').time())}\"",
    "context_clues": [
      "backup",
      "database",
      "create",
      "connect",
      "validate_database_schema",
      "validate",
      "apply",
      "sqlite",
      "patch"
    ],
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:validate_database_schema": {
    "category": "context_clues",
    "keyword": "validate_database_schema",
    "files": [
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "backup_database",
      "validate_database_schema"
    ],
    "description": "Code related to validate_database_schema",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "file:apply_sqlite_patch.py": {
    "category": "file_relationships",
    "keyword": "apply_sqlite_patch.py",
    "primary_file": "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
    "functions": [
      "backup_database",
      "validate_database_schema",
      "execute_operation",
      "main"
    ],
    "description": "File containing backup_database and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.582Z"
  },
  "function:validate_database_schema": {
    "category": "code_functions",
    "keyword": "validate_database_schema",
    "files": [
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "validate_database_schema"
    ],
    "description": "Function validate_database_schema in apply_sqlite_patch.py",
    "context_weight": 0.9,
    "line_number": 23,
    "body_preview": "def validate_database_schema(conn, required_tables=None): \"\"\"Validate database has expected schema\"\"\" cursor = conn.cursor()",
    "context_clues": [
      "validate",
      "database",
      "schema",
      "validate_database_schema",
      "execute",
      "fetchall",
      "set",
      "apply",
      "sqlite",
      "patch"
    ],
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:fetchall": {
    "category": "context_clues",
    "keyword": "fetchall",
    "files": [
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "validate_database_schema"
    ],
    "description": "Code related to fetchall",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "function:execute_operation": {
    "category": "code_functions",
    "keyword": "execute_operation",
    "files": [
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "execute_operation"
    ],
    "description": "Function execute_operation in apply_sqlite_patch.py",
    "context_weight": 0.9,
    "line_number": 36,
    "body_preview": "def execute_operation(conn, operation): \"\"\"Execute a single SQLite operation from apply plan\"\"\" table = operation['table']",
    "context_clues": [
      "execute",
      "operation",
      "execute_operation",
      "get",
      "insert",
      "apply",
      "sqlite",
      "patch"
    ],
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:operation": {
    "category": "context_clues",
    "keyword": "operation",
    "files": [
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "execute_operation"
    ],
    "description": "Code related to operation",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "context:execute_operation": {
    "category": "context_clues",
    "keyword": "execute_operation",
    "files": [
      "rAgents/rLegacy/memory_bundles/template_bundle/apply/apply_sqlite_patch.py",
      "rAgents/rMemoryBundles/template_bundle/apply/apply_sqlite_patch.py"
    ],
    "functions": [
      "execute_operation"
    ],
    "description": "Code related to execute_operation",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.242Z"
  },
  "file:performance_analysis.py": {
    "category": "file_relationships",
    "keyword": "performance_analysis.py",
    "primary_file": "rAgents/rLegacy/scripts/performance_analysis.py",
    "functions": [
      "__init__",
      "main"
    ],
    "description": "File containing __init__ and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.591Z"
  },
  "context:run_full_benchmark": {
    "category": "context_clues",
    "keyword": "run_full_benchmark",
    "files": [
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rScripts/performance_analysis.py"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to run_full_benchmark",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.287Z"
  },
  "context:generate_report": {
    "category": "context_clues",
    "keyword": "generate_report",
    "files": [
      "rAgents/rLegacy/scripts/performance_analysis.py",
      "rAgents/rScripts/performance_analysis.py"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to generate_report",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.287Z"
  },
  "file:version-manager.js": {
    "category": "file_relationships",
    "keyword": "version-manager.js",
    "primary_file": "rAgents/rLegacy/version-manager.js",
    "functions": [
      "main"
    ],
    "description": "File containing main and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.600Z"
  },
  "context:load_bootstrap_config": {
    "category": "context_clues",
    "keyword": "load_bootstrap_config",
    "files": [
      "rAgents/rTemplates/bootstrap_agent_system.py"
    ],
    "functions": [
      "__init__"
    ],
    "description": "Code related to load_bootstrap_config",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "context:bootstrap": {
    "category": "context_clues",
    "keyword": "bootstrap",
    "files": [
      "rAgents/rTemplates/bootstrap_agent_system.py"
    ],
    "functions": [
      "__init__",
      "main"
    ],
    "description": "Code related to bootstrap",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "file:bootstrap_agent_system.py": {
    "category": "file_relationships",
    "keyword": "bootstrap_agent_system.py",
    "primary_file": "rAgents/rTemplates/bootstrap_agent_system.py",
    "functions": [
      "__init__",
      "main"
    ],
    "description": "File containing __init__ and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T01:47:40.694Z"
  },
  "context:getcwd": {
    "category": "context_clues",
    "keyword": "getcwd",
    "files": [
      "rAgents/rTemplates/bootstrap_agent_system.py"
    ],
    "functions": [
      "main"
    ],
    "description": "Code related to getcwd",
    "context_weight": 0.7999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.309Z"
  },
  "function:askGemini": {
    "category": "code_functions",
    "keyword": "askGemini",
    "files": [
      "scripts/heygemini.js"
    ],
    "functions": [
      "askGemini"
    ],
    "description": "Function askGemini in heygemini.js",
    "context_weight": 0.9,
    "line_number": 27,
    "body_preview": "async function askGemini(question) { const { GoogleGenerativeAI } = await import('@google/generative-ai'); try {",
    "context_clues": [
      "ask",
      "gemini",
      "import",
      "getgenerativemodel",
      "generatecontent",
      "heygemini"
    ],
    "last_updated": "2025-08-20T01:47:40.718Z"
  },
  "function:callGemini": {
    "category": "code_functions",
    "keyword": "callGemini",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "callGemini"
    ],
    "description": " Call Gemini API ",
    "context_weight": 0.9,
    "line_number": 77,
    "body_preview": "async function callGemini(prompt, model = 'gemini-1.5-flash') { const apiKey = process.env.GEMINI_API_KEY; if (!apiKey) throw new Error('GEMINI_API_KEY not found in environment');",
    "context_clues": [
      "call",
      "gemini",
      "process",
      "fetch",
      "llm"
    ],
    "last_updated": "2025-08-20T17:24:08.598Z"
  },
  "context:llm": {
    "category": "context_clues",
    "keyword": "llm",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "callGemini",
      "callClaude",
      "callOpenAI",
      "callGroq",
      "callLLM",
      "showProviders",
      "parseArgs",
      "showHelp",
      "handleMCPMode",
      "logCall",
      "main"
    ],
    "description": "Code related to llm",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.601Z"
  },
  "file:call-llm.js": {
    "category": "file_relationships",
    "keyword": "call-llm.js",
    "primary_file": "rEngine/call-llm.js",
    "functions": [
      "callGemini",
      "callClaude",
      "callOpenAI",
      "callGroq",
      "callLLM",
      "showProviders",
      "parseArgs",
      "showHelp",
      "handleMCPMode",
      "logCall",
      "main"
    ],
    "description": "File containing callGemini and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:21.787Z"
  },
  "function:callClaude": {
    "category": "code_functions",
    "keyword": "callClaude",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "callClaude"
    ],
    "description": " Call Claude API ",
    "context_weight": 0.9,
    "line_number": 105,
    "body_preview": "async function callClaude(prompt, model = 'claude-3-5-sonnet-20241022') { const apiKey = process.env.ANTHROPIC_API_KEY; if (!apiKey) throw new Error('ANTHROPIC_API_KEY not found in environment');",
    "context_clues": [
      "call",
      "claude",
      "process",
      "fetch",
      "llm"
    ],
    "last_updated": "2025-08-20T17:24:08.599Z"
  },
  "function:callOpenAI": {
    "category": "code_functions",
    "keyword": "callOpenAI",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "callOpenAI"
    ],
    "description": " Call OpenAI API ",
    "context_weight": 0.9,
    "line_number": 137,
    "body_preview": "async function callOpenAI(prompt, model = 'gpt-4o') { const apiKey = process.env.OPENAI_API_KEY; if (!apiKey) throw new Error('OPENAI_API_KEY not found in environment');",
    "context_clues": [
      "call",
      "open",
      "openai",
      "process",
      "openai_api_key",
      "fetch",
      "llm"
    ],
    "last_updated": "2025-08-20T17:24:08.599Z"
  },
  "function:callGroq": {
    "category": "code_functions",
    "keyword": "callGroq",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "callGroq"
    ],
    "description": " Call Groq API ",
    "context_weight": 0.9,
    "line_number": 168,
    "body_preview": "async function callGroq(prompt, model = 'llama-3.1-70b-versatile') { const apiKey = process.env.GROQ_API_KEY; if (!apiKey) throw new Error('GROQ_API_KEY not found in environment');",
    "context_clues": [
      "call",
      "groq",
      "process",
      "fetch",
      "llm"
    ],
    "last_updated": "2025-08-20T17:24:08.599Z"
  },
  "function:callLLM": {
    "category": "code_functions",
    "keyword": "callLLM",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "callLLM"
    ],
    "description": " Main LLM caller function ",
    "context_weight": 0.9,
    "line_number": 199,
    "body_preview": "async function callLLM(provider, prompt, model = null) { const startTime = Date.now(); try {",
    "context_clues": [
      "call",
      "main",
      "caller",
      "starttime",
      "reset",
      "llm"
    ],
    "last_updated": "2025-08-20T17:24:08.599Z"
  },
  "context:caller": {
    "category": "context_clues",
    "keyword": "caller",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "callLLM"
    ],
    "description": "Code related to caller",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.599Z"
  },
  "function:showProviders": {
    "category": "code_functions",
    "keyword": "showProviders",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "showProviders"
    ],
    "description": " Show available providers and models ",
    "context_weight": 0.9,
    "line_number": 255,
    "body_preview": "function showProviders() { console.log(`${colors.bright}🤖 Available LLM Providers:${colors.reset}\\n`); for (const [key, provider] of Object.entries(LLM_PROVIDERS)) {",
    "context_clues": [
      "show",
      "providers",
      "available",
      "models",
      "reset",
      "process",
      "configured",
      "call",
      "llm"
    ],
    "last_updated": "2025-08-20T17:24:08.600Z"
  },
  "function:parseArgs": {
    "category": "code_functions",
    "keyword": "parseArgs",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "parseArgs"
    ],
    "description": " Parse command line arguments ",
    "context_weight": 0.9,
    "line_number": 537,
    "body_preview": "function parseArgs() { const args = process.argv.slice(2); const options = {",
    "context_clues": [
      "parse",
      "args",
      "command",
      "line",
      "arguments",
      "parseargs",
      "process",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "context:parseargs": {
    "category": "context_clues",
    "keyword": "parseargs",
    "files": [
      "rEngine/call-llm.js",
      "rEngine/configure-apis.js",
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "parseArgs",
      "main"
    ],
    "description": "Code related to parseargs",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.307Z"
  },
  "function:handleMCPMode": {
    "category": "code_functions",
    "keyword": "handleMCPMode",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "handleMCPMode"
    ],
    "description": " Handle MCP mode (JSON input/output) ",
    "context_weight": 0.9,
    "line_number": 208,
    "body_preview": "async function handleMCPMode() { return new Promise((resolve, reject) => { let data = '';",
    "context_clues": [
      "handle",
      "mode",
      "json",
      "inputoutput",
      "handlemcpmode",
      "process",
      "ragent",
      "search",
      "matrix"
    ],
    "last_updated": "2025-08-20T17:24:09.043Z"
  },
  "context:stdin": {
    "category": "context_clues",
    "keyword": "stdin",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "handleMCPMode"
    ],
    "description": "Code related to stdin",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.601Z"
  },
  "context:handlemcpmode": {
    "category": "context_clues",
    "keyword": "handlemcpmode",
    "files": [
      "rEngine/call-llm.js",
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "handleMCPMode"
    ],
    "description": "Code related to handlemcpmode",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.043Z"
  },
  "function:logCall": {
    "category": "code_functions",
    "keyword": "logCall",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "logCall"
    ],
    "description": " Log call to history ",
    "context_weight": 0.9,
    "line_number": 372,
    "body_preview": "async function logCall(callData) { try { const logDir = path.join(__dirname, '../logs');",
    "context_clues": [
      "log",
      "call",
      "history",
      "appendfile",
      "llm"
    ],
    "last_updated": "2025-08-20T17:24:08.601Z"
  },
  "context:appendfile": {
    "category": "context_clues",
    "keyword": "appendfile",
    "files": [
      "rEngine/call-llm.js"
    ],
    "functions": [
      "logCall"
    ],
    "description": "Code related to appendfile",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.601Z"
  },
  "function:createReadline": {
    "category": "code_functions",
    "keyword": "createReadline",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "createReadline"
    ],
    "description": " Create readline interface for user input ",
    "context_weight": 0.9,
    "line_number": 80,
    "body_preview": "function createReadline() { return createInterface({ input: process.stdin,",
    "context_clues": [
      "create",
      "readline",
      "interface",
      "user",
      "input",
      "createreadline",
      "createinterface",
      "process",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.643Z"
  },
  "context:createreadline": {
    "category": "context_clues",
    "keyword": "createreadline",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "createReadline",
      "promptHidden",
      "prompt"
    ],
    "description": "Code related to createreadline",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.644Z"
  },
  "context:configure": {
    "category": "context_clues",
    "keyword": "configure",
    "files": [
      "rEngine/configure-apis.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "createReadline",
      "promptHidden",
      "prompt",
      "validateApiKey",
      "loadEnvFile",
      "saveEnvFile",
      "testApiKey",
      "showStatus",
      "configureProvider",
      "checkHasApiKey",
      "runWizard",
      "testAllProviders",
      "parseArgs",
      "showHelp",
      "main",
      "onData",
      "quickSetup",
      "configureAPIs"
    ],
    "description": "Code related to configure",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "file:configure-apis.js": {
    "category": "file_relationships",
    "keyword": "configure-apis.js",
    "primary_file": "rEngine/configure-apis.js",
    "functions": [
      "createReadline",
      "promptHidden",
      "prompt",
      "validateApiKey",
      "loadEnvFile",
      "saveEnvFile",
      "testApiKey",
      "showStatus",
      "configureProvider",
      "checkHasApiKey",
      "runWizard",
      "testAllProviders",
      "parseArgs",
      "showHelp",
      "main",
      "onData"
    ],
    "description": "File containing createReadline and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:21.834Z"
  },
  "function:promptHidden": {
    "category": "code_functions",
    "keyword": "promptHidden",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "promptHidden"
    ],
    "description": " Prompt user with hidden input (for passwords/API keys) ",
    "context_weight": 0.9,
    "line_number": 90,
    "body_preview": "function promptHidden(query) { return new Promise((resolve) => { const rl = createReadline();",
    "context_clues": [
      "prompt",
      "hidden",
      "user",
      "with",
      "input",
      "passwordsapi",
      "keys",
      "createreadline",
      "process",
      "write",
      "setrawmode",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.643Z"
  },
  "context:passwordsapi": {
    "category": "context_clues",
    "keyword": "passwordsapi",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "promptHidden",
      "prompt"
    ],
    "description": "Code related to passwordsapi",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.644Z"
  },
  "context:setrawmode": {
    "category": "context_clues",
    "keyword": "setrawmode",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "promptHidden",
      "prompt"
    ],
    "description": "Code related to setrawmode",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.644Z"
  },
  "function:validateApiKey": {
    "category": "code_functions",
    "keyword": "validateApiKey",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "validateApiKey"
    ],
    "description": " Validate API key format ",
    "context_weight": 0.9,
    "line_number": 148,
    "body_preview": "function validateApiKey(provider, key) { const config = LLM_PROVIDERS[provider]; if (!config) return false;",
    "context_clues": [
      "validate",
      "api",
      "key",
      "format",
      "validateapikey",
      "startswith",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.644Z"
  },
  "context:validateapikey": {
    "category": "context_clues",
    "keyword": "validateapikey",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "validateApiKey"
    ],
    "description": "Code related to validateapikey",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.644Z"
  },
  "function:loadEnvFile": {
    "category": "code_functions",
    "keyword": "loadEnvFile",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "loadEnvFile"
    ],
    "description": " Load existing .env file ",
    "context_weight": 0.9,
    "line_number": 162,
    "body_preview": "async function loadEnvFile() { const envPath = path.join(__dirname, '.env'); try {",
    "context_clues": [
      "load",
      "env",
      "file",
      "existing",
      "loadenvfile",
      "readfile",
      "startswith",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.645Z"
  },
  "context:env": {
    "category": "context_clues",
    "keyword": "env",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "loadEnvFile",
      "saveEnvFile"
    ],
    "description": "Code related to env",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.646Z"
  },
  "context:loadenvfile": {
    "category": "context_clues",
    "keyword": "loadenvfile",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "loadEnvFile",
      "showStatus",
      "runWizard",
      "testAllProviders"
    ],
    "description": "Code related to loadenvfile",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.648Z"
  },
  "function:saveEnvFile": {
    "category": "code_functions",
    "keyword": "saveEnvFile",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "saveEnvFile"
    ],
    "description": " Save API keys to .env file ",
    "context_weight": 0.9,
    "line_number": 188,
    "body_preview": "async function saveEnvFile(config) { const envPath = path.join(__dirname, '.env'); let content = `# rEngineMCP API Configuration",
    "context_clues": [
      "save",
      "env",
      "file",
      "keys",
      "saveenvfile",
      "generated",
      "configure",
      "add",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.646Z"
  },
  "context:saveenvfile": {
    "category": "context_clues",
    "keyword": "saveenvfile",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "saveEnvFile"
    ],
    "description": "Code related to saveenvfile",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.646Z"
  },
  "context:generated": {
    "category": "context_clues",
    "keyword": "generated",
    "files": [
      "rEngine/configure-apis.js",
      "scripts/utilities/clean-combined-docs.js",
      "scripts/utilities/cleanup-docs-structure.js",
      "scripts/utilities/update-documentation-links.js"
    ],
    "functions": [
      "saveEnvFile",
      "cleanCombinedDocumentation",
      "createCorrectStructure",
      "calculateCorrectPath",
      "cleanupRecursiveDirectories",
      "verifyStructure",
      "updateDocumentationLinks"
    ],
    "description": "Code related to generated",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.439Z"
  },
  "function:testApiKey": {
    "category": "code_functions",
    "keyword": "testApiKey",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "testApiKey"
    ],
    "description": " Test API key with a simple call ",
    "context_weight": 0.9,
    "line_number": 220,
    "body_preview": "async function testApiKey(provider, apiKey) { try { const testPrompt = 'Hello, this is a test message. Please respond with just \"OK\".';",
    "context_clues": [
      "test",
      "api",
      "key",
      "with",
      "simple",
      "call",
      "import",
      "set",
      "process",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.646Z"
  },
  "function:showStatus": {
    "category": "code_functions",
    "keyword": "showStatus",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "showStatus"
    ],
    "description": " Show configuration status ",
    "context_weight": 0.9,
    "line_number": 251,
    "body_preview": "async function showStatus() { console.log(`${colors.bright}🔧 StackTrackr API Configuration Status${colors.reset}\\n`); const env = await loadEnvFile();",
    "context_clues": [
      "show",
      "status",
      "configuration",
      "reset",
      "loadenvfile",
      "configured",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.647Z"
  },
  "function:configureProvider": {
    "category": "code_functions",
    "keyword": "configureProvider",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "configureProvider"
    ],
    "description": " Configure a specific provider ",
    "context_weight": 0.9,
    "line_number": 271,
    "body_preview": "async function configureProvider(providerKey) { const provider = LLM_PROVIDERS[providerKey]; if (!provider) {",
    "context_clues": [
      "configure",
      "provider",
      "specific",
      "configureprovider",
      "reset",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.647Z"
  },
  "context:configureprovider": {
    "category": "context_clues",
    "keyword": "configureprovider",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "configureProvider"
    ],
    "description": "Code related to configureprovider",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.647Z"
  },
  "function:checkHasApiKey": {
    "category": "code_functions",
    "keyword": "checkHasApiKey",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "checkHasApiKey"
    ],
    "description": " Check if user has API key and offer guidance ",
    "context_weight": 0.9,
    "line_number": 313,
    "body_preview": "async function checkHasApiKey(provider) { const hasKey = await prompt(`${colors.yellow}Do you have a ${provider.name} API key? (y/n): ${colors.reset}`); if (hasKey.toLowerCase() !== 'y' && hasKey.toLowerCase() !== 'yes') {",
    "context_clues": [
      "check",
      "has",
      "api",
      "key",
      "user",
      "offer",
      "guidance",
      "checkhasapikey",
      "reset",
      "get",
      "create",
      "copy",
      "starts",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.647Z"
  },
  "context:offer": {
    "category": "context_clues",
    "keyword": "offer",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "checkHasApiKey"
    ],
    "description": "Code related to offer",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.647Z"
  },
  "context:checkhasapikey": {
    "category": "context_clues",
    "keyword": "checkhasapikey",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "checkHasApiKey"
    ],
    "description": "Code related to checkhasapikey",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.647Z"
  },
  "context:starts": {
    "category": "context_clues",
    "keyword": "starts",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "checkHasApiKey"
    ],
    "description": "Code related to starts",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.647Z"
  },
  "function:runWizard": {
    "category": "code_functions",
    "keyword": "runWizard",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "runWizard"
    ],
    "description": " Interactive configuration wizard ",
    "context_weight": 0.9,
    "line_number": 336,
    "body_preview": "async function runWizard() { console.log(`${colors.bright}🤖 StackTrackr LLM API Configuration Wizard${colors.reset}`); console.log(`${colors.blue}This wizard will help you configure API keys for all LLM providers.${colors.reset}\\n`);",
    "context_clues": [
      "run",
      "wizard",
      "interactive",
      "configuration",
      "runwizard",
      "reset",
      "configure",
      "loadenvfile",
      "configured",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.648Z"
  },
  "context:wizard": {
    "category": "context_clues",
    "keyword": "wizard",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "runWizard"
    ],
    "description": "Code related to wizard",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.648Z"
  },
  "context:runwizard": {
    "category": "context_clues",
    "keyword": "runwizard",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "runWizard"
    ],
    "description": "Code related to runwizard",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.648Z"
  },
  "function:testAllProviders": {
    "category": "code_functions",
    "keyword": "testAllProviders",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "testAllProviders"
    ],
    "description": " Test all configured providers ",
    "context_weight": 0.9,
    "line_number": 379,
    "body_preview": "async function testAllProviders() { console.log(`${colors.bright}🧪 Testing All Configured Providers${colors.reset}\\n`); const env = await loadEnvFile();",
    "context_clues": [
      "test",
      "all",
      "providers",
      "configured",
      "reset",
      "loadenvfile",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.648Z"
  },
  "function:onData": {
    "category": "code_functions",
    "keyword": "onData",
    "files": [
      "rEngine/configure-apis.js"
    ],
    "functions": [
      "onData"
    ],
    "description": "Function onData in configure-apis.js",
    "context_weight": 0.9,
    "line_number": 99,
    "body_preview": "const onData = (char) => { const byte = char[0]; switch (byte) {",
    "context_clues": [
      "data",
      "process",
      "write",
      "configure",
      "apis"
    ],
    "last_updated": "2025-08-20T17:24:08.649Z"
  },
  "function:scanDir": {
    "category": "code_functions",
    "keyword": "scanDir",
    "files": [
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "scanDir"
    ],
    "description": "Function scanDir in clean-combined-docs.js",
    "context_weight": 0.9,
    "line_number": 33,
    "body_preview": "async function scanDir(currentDir) { const entries = await fs.readdir(currentDir, { withFileTypes: true }); for (const entry of entries) {",
    "context_clues": [
      "scan",
      "dir",
      "readdir",
      "clean",
      "combined",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.377Z"
  },
  "file:document-scribe.js": {
    "category": "file_relationships",
    "keyword": "document-scribe.js",
    "primary_file": "rEngine/document-scribe.js",
    "functions": [
      "scanDir"
    ],
    "description": "File containing scanDir and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:21.857Z"
  },
  "file:enhanced-memory-sync.js": {
    "category": "file_relationships",
    "keyword": "enhanced-memory-sync.js",
    "primary_file": "rEngine/enhanced-memory-sync.js",
    "functions": [
      "main"
    ],
    "description": "File containing main and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:21.971Z"
  },
  "function:walk": {
    "category": "code_functions",
    "keyword": "walk",
    "files": [
      "rEngine/mcp-html-converter.js"
    ],
    "functions": [
      "walk"
    ],
    "description": "Function walk in mcp-html-converter.js",
    "context_weight": 0.9,
    "line_number": 684,
    "body_preview": "async function walk(currentDir) { const entries = await fs.readdir(currentDir, { withFileTypes: true }); for (const entry of entries) {",
    "context_clues": [
      "walk",
      "readdir",
      "mcp",
      "html",
      "converter"
    ],
    "last_updated": "2025-08-20T17:24:08.879Z"
  },
  "context:walk": {
    "category": "context_clues",
    "keyword": "walk",
    "files": [
      "rEngine/mcp-html-converter.js"
    ],
    "functions": [
      "walk"
    ],
    "description": "Code related to walk",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:08.879Z"
  },
  "file:mcp-html-converter.js": {
    "category": "file_relationships",
    "keyword": "mcp-html-converter.js",
    "primary_file": "rEngine/mcp-html-converter.js",
    "functions": [
      "walk"
    ],
    "description": "File containing walk and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:22.130Z"
  },
  "function:loadSearchMatrix": {
    "category": "code_functions",
    "keyword": "loadSearchMatrix",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "loadSearchMatrix"
    ],
    "description": " Load search matrix from rMemory ",
    "context_weight": 0.9,
    "line_number": 34,
    "body_preview": "async function loadSearchMatrix() { const matrixPath = path.join(__dirname, '../rMemory/search-matrix/context-matrix.json'); try {",
    "context_clues": [
      "load",
      "search",
      "matrix",
      "from",
      "rmemory",
      "loadsearchmatrix",
      "readfile",
      "parse",
      "reset",
      "run",
      "start",
      "ragent"
    ],
    "last_updated": "2025-08-20T17:24:09.042Z"
  },
  "context:matrix": {
    "category": "context_clues",
    "keyword": "matrix",
    "files": [
      "rEngine/ragent-search-matrix.js",
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "loadSearchMatrix",
      "searchMatrix",
      "formatResults",
      "getUserPreferences",
      "handleMCPMode",
      "parseArgs",
      "showStats",
      "showHelp",
      "main",
      "buildSearchMatrix"
    ],
    "description": "Code related to matrix",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "context:rmemory": {
    "category": "context_clues",
    "keyword": "rmemory",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "loadSearchMatrix"
    ],
    "description": "Code related to rmemory",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.042Z"
  },
  "context:loadsearchmatrix": {
    "category": "context_clues",
    "keyword": "loadsearchmatrix",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "loadSearchMatrix",
      "showStats"
    ],
    "description": "Code related to loadsearchmatrix",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.044Z"
  },
  "context:ragent": {
    "category": "context_clues",
    "keyword": "ragent",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "loadSearchMatrix",
      "searchMatrix",
      "formatResults",
      "getUserPreferences",
      "handleMCPMode",
      "parseArgs",
      "showStats",
      "showHelp",
      "main"
    ],
    "description": "Code related to ragent",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.044Z"
  },
  "file:ragent-search-matrix.js": {
    "category": "file_relationships",
    "keyword": "ragent-search-matrix.js",
    "primary_file": "rEngine/ragent-search-matrix.js",
    "functions": [
      "loadSearchMatrix",
      "searchMatrix",
      "formatResults",
      "getUserPreferences",
      "handleMCPMode",
      "parseArgs",
      "showStats",
      "showHelp",
      "main"
    ],
    "description": "File containing loadSearchMatrix and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:22.301Z"
  },
  "function:searchMatrix": {
    "category": "code_functions",
    "keyword": "searchMatrix",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "searchMatrix"
    ],
    "description": " Search the matrix for relevant entries ",
    "context_weight": 0.9,
    "line_number": 51,
    "body_preview": "function searchMatrix(matrix, query, options = {}) { const { maxResults = 20,",
    "context_clues": [
      "search",
      "matrix",
      "relevant",
      "entries",
      "searchmatrix",
      "filter",
      "ragent"
    ],
    "last_updated": "2025-08-20T17:24:09.042Z"
  },
  "context:relevant": {
    "category": "context_clues",
    "keyword": "relevant",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "searchMatrix"
    ],
    "description": "Code related to relevant",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.042Z"
  },
  "context:searchmatrix": {
    "category": "context_clues",
    "keyword": "searchmatrix",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "searchMatrix"
    ],
    "description": "Code related to searchmatrix",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.042Z"
  },
  "function:formatResults": {
    "category": "code_functions",
    "keyword": "formatResults",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "formatResults"
    ],
    "description": " Format search results for rAgent consumption ",
    "context_weight": 0.9,
    "line_number": 107,
    "body_preview": "function formatResults(results, query, options = {}) { const { format = 'context',",
    "context_clues": [
      "format",
      "results",
      "search",
      "ragent",
      "consumption",
      "matrix"
    ],
    "last_updated": "2025-08-20T17:24:09.043Z"
  },
  "context:consumption": {
    "category": "context_clues",
    "keyword": "consumption",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "formatResults"
    ],
    "description": "Code related to consumption",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.043Z"
  },
  "function:getUserPreferences": {
    "category": "code_functions",
    "keyword": "getUserPreferences",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "getUserPreferences"
    ],
    "description": " Get user preferences for search behavior ",
    "context_weight": 0.9,
    "line_number": 185,
    "body_preview": "async function getUserPreferences() { try { const prefsPath = path.join(__dirname, '../rMemory/rAgentMemories/preferences.json');",
    "context_clues": [
      "get",
      "user",
      "preferences",
      "search",
      "behavior",
      "getuserpreferences",
      "readfile",
      "parse",
      "ragent",
      "matrix"
    ],
    "last_updated": "2025-08-20T17:24:09.043Z"
  },
  "context:preferences": {
    "category": "context_clues",
    "keyword": "preferences",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "getUserPreferences"
    ],
    "description": "Code related to preferences",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.043Z"
  },
  "context:getuserpreferences": {
    "category": "context_clues",
    "keyword": "getuserpreferences",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "getUserPreferences"
    ],
    "description": "Code related to getuserpreferences",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.043Z"
  },
  "context:inputoutput": {
    "category": "context_clues",
    "keyword": "inputoutput",
    "files": [
      "rEngine/ragent-search-matrix.js"
    ],
    "functions": [
      "handleMCPMode"
    ],
    "description": "Code related to inputoutput",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.043Z"
  },
  "function:checkMemoryFreshness": {
    "category": "code_functions",
    "keyword": "checkMemoryFreshness",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "checkMemoryFreshness"
    ],
    "description": " Check memory file freshness and warn if stale ",
    "context_weight": 0.9,
    "line_number": 30,
    "body_preview": "async function checkMemoryFreshness(baseDir) { if (isSilentMode) return; // Skip warnings in silent mode const memoryDir = path.join(baseDir, 'rMemory', 'rAgentMemories');",
    "context_clues": [
      "check",
      "memory",
      "freshness",
      "file",
      "warn",
      "stale",
      "checkmemoryfreshness",
      "recall"
    ],
    "last_updated": "2025-08-20T17:24:09.078Z"
  },
  "context:freshness": {
    "category": "context_clues",
    "keyword": "freshness",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "checkMemoryFreshness"
    ],
    "description": "Code related to freshness",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.078Z"
  },
  "context:warn": {
    "category": "context_clues",
    "keyword": "warn",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "checkMemoryFreshness"
    ],
    "description": "Code related to warn",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.078Z"
  },
  "context:checkmemoryfreshness": {
    "category": "context_clues",
    "keyword": "checkmemoryfreshness",
    "files": [
      "rEngine/recall.js"
    ],
    "functions": [
      "checkMemoryFreshness",
      "fastRecall"
    ],
    "description": "Code related to checkmemoryfreshness",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.079Z"
  },
  "function:autoLoadContext": {
    "category": "code_functions",
    "keyword": "autoLoadContext",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "autoLoadContext"
    ],
    "description": " Auto-generate project context for new sessions ",
    "context_weight": 0.9,
    "line_number": 81,
    "body_preview": "async function autoLoadContext() { console.log(`${colors.bright}🧠 Auto-Loading Project Context${colors.reset}\\n`); const context = {",
    "context_clues": [
      "auto",
      "load",
      "context",
      "autogenerate",
      "project",
      "sessions",
      "loading",
      "reset",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.303Z"
  },
  "context:autogenerate": {
    "category": "context_clues",
    "keyword": "autogenerate",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "autoLoadContext"
    ],
    "description": "Code related to autogenerate",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.303Z"
  },
  "context:project": {
    "category": "context_clues",
    "keyword": "project",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "autoLoadContext"
    ],
    "description": "Code related to project",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.303Z"
  },
  "context:sessions": {
    "category": "context_clues",
    "keyword": "sessions",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "autoLoadContext"
    ],
    "description": "Code related to sessions",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.303Z"
  },
  "context:automation": {
    "category": "context_clues",
    "keyword": "automation",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "autoLoadContext",
      "checkSystemHealth",
      "generateAgentRecommendations",
      "displayContextSummary",
      "smartHandoff",
      "checkDependencies",
      "buildSearchMatrix",
      "configureAPIs",
      "validateMemory",
      "testIntegrations",
      "analyzePainPoints",
      "detectPainPoint",
      "parseArgs",
      "showHelp",
      "main"
    ],
    "description": "Code related to automation",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.307Z"
  },
  "file:workflow-automation.js": {
    "category": "file_relationships",
    "keyword": "workflow-automation.js",
    "primary_file": "rEngine/workflow-automation.js",
    "functions": [
      "autoLoadContext",
      "checkSystemHealth",
      "generateAgentRecommendations",
      "displayContextSummary",
      "smartHandoff",
      "quickSetup",
      "checkDependencies",
      "buildSearchMatrix",
      "configureAPIs",
      "validateMemory",
      "testIntegrations",
      "analyzePainPoints",
      "detectPainPoint",
      "parseArgs",
      "showHelp",
      "main"
    ],
    "description": "File containing autoLoadContext and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:22.557Z"
  },
  "function:checkSystemHealth": {
    "category": "code_functions",
    "keyword": "checkSystemHealth",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "checkSystemHealth"
    ],
    "description": " Check system health and readiness ",
    "context_weight": 0.9,
    "line_number": 158,
    "body_preview": "async function checkSystemHealth() { const health = { search_matrix: false,",
    "context_clues": [
      "check",
      "system",
      "health",
      "readiness",
      "checksystemhealth",
      "search_matrix",
      "search",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.303Z"
  },
  "context:health": {
    "category": "context_clues",
    "keyword": "health",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "checkSystemHealth"
    ],
    "description": "Code related to health",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.303Z"
  },
  "context:readiness": {
    "category": "context_clues",
    "keyword": "readiness",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "checkSystemHealth"
    ],
    "description": "Code related to readiness",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.303Z"
  },
  "context:checksystemhealth": {
    "category": "context_clues",
    "keyword": "checksystemhealth",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "checkSystemHealth"
    ],
    "description": "Code related to checksystemhealth",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.303Z"
  },
  "context:search_matrix": {
    "category": "context_clues",
    "keyword": "search_matrix",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "checkSystemHealth",
      "displayContextSummary"
    ],
    "description": "Code related to search_matrix",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "function:generateAgentRecommendations": {
    "category": "code_functions",
    "keyword": "generateAgentRecommendations",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "generateAgentRecommendations"
    ],
    "description": " Generate intelligent agent recommendations ",
    "context_weight": 0.9,
    "line_number": 204,
    "body_preview": "function generateAgentRecommendations(context) { const recommendations = { suggested_agent: 'claude',",
    "context_clues": [
      "generate",
      "agent",
      "recommendations",
      "intelligent",
      "generateagentrecommendations",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.303Z"
  },
  "context:recommendations": {
    "category": "context_clues",
    "keyword": "recommendations",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "generateAgentRecommendations"
    ],
    "description": "Code related to recommendations",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "context:intelligent": {
    "category": "context_clues",
    "keyword": "intelligent",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "generateAgentRecommendations"
    ],
    "description": "Code related to intelligent",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "context:generateagentrecommendations": {
    "category": "context_clues",
    "keyword": "generateagentrecommendations",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "generateAgentRecommendations"
    ],
    "description": "Code related to generateagentrecommendations",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "function:displayContextSummary": {
    "category": "code_functions",
    "keyword": "displayContextSummary",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "displayContextSummary"
    ],
    "description": " Display context summary for user ",
    "context_weight": 0.9,
    "line_number": 245,
    "body_preview": "function displayContextSummary(context) { console.log(`\\n${colors.bright}📋 Project Context Summary${colors.reset}`); console.log(`${colors.green}🔍 Search Matrix: ${context.project_state.search_matrix.total_entries} entries${colors.reset}`);",
    "context_clues": [
      "display",
      "context",
      "summary",
      "user",
      "reset",
      "search",
      "search_matrix",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "function:smartHandoff": {
    "category": "code_functions",
    "keyword": "smartHandoff",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "smartHandoff"
    ],
    "description": " Prepare smart agent handoff with context ",
    "context_weight": 0.9,
    "line_number": 269,
    "body_preview": "async function smartHandoff(options = {}) { console.log(`${colors.bright}🔄 Preparing Smart Agent Handoff${colors.reset}\\n`); const { targetAgent = 'auto', task = 'continue', priority = 'medium' } = options;",
    "context_clues": [
      "smart",
      "handoff",
      "prepare",
      "agent",
      "with",
      "context",
      "reset",
      "load",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "context:handoff": {
    "category": "context_clues",
    "keyword": "handoff",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "smartHandoff"
    ],
    "description": "Code related to handoff",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "context:prepare": {
    "category": "context_clues",
    "keyword": "prepare",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "smartHandoff"
    ],
    "description": "Code related to prepare",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "function:quickSetup": {
    "category": "code_functions",
    "keyword": "quickSetup",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "quickSetup"
    ],
    "description": " One-command environment setup ",
    "context_weight": 0.9,
    "line_number": 319,
    "body_preview": "async function quickSetup() { console.log(`${colors.bright}🚀 StackTrackr Quick Setup${colors.reset}\\n`); const steps = [",
    "context_clues": [
      "quick",
      "setup",
      "onecommand",
      "environment",
      "reset",
      "check",
      "checkdependencies",
      "build",
      "search",
      "buildsearchmatrix",
      "configure",
      "configureapis",
      "validate",
      "validatememory",
      "workflow"
    ],
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "context:onecommand": {
    "category": "context_clues",
    "keyword": "onecommand",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "quickSetup"
    ],
    "description": "Code related to onecommand",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "context:environment": {
    "category": "context_clues",
    "keyword": "environment",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "quickSetup"
    ],
    "description": "Code related to environment",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.304Z"
  },
  "context:checkdependencies": {
    "category": "context_clues",
    "keyword": "checkdependencies",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "quickSetup",
      "checkDependencies"
    ],
    "description": "Code related to checkdependencies",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "context:buildsearchmatrix": {
    "category": "context_clues",
    "keyword": "buildsearchmatrix",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "quickSetup",
      "buildSearchMatrix"
    ],
    "description": "Code related to buildsearchmatrix",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "context:configureapis": {
    "category": "context_clues",
    "keyword": "configureapis",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "quickSetup",
      "configureAPIs"
    ],
    "description": "Code related to configureapis",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "context:validatememory": {
    "category": "context_clues",
    "keyword": "validatememory",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "quickSetup",
      "validateMemory"
    ],
    "description": "Code related to validatememory",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "function:checkDependencies": {
    "category": "code_functions",
    "keyword": "checkDependencies",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "checkDependencies"
    ],
    "description": " Setup step implementations ",
    "context_weight": 0.9,
    "line_number": 366,
    "body_preview": "async function checkDependencies() { // Check Node.js version const nodeVersion = process.version;",
    "context_clues": [
      "check",
      "dependencies",
      "setup",
      "step",
      "implementations",
      "checkdependencies",
      "process",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "context:dependencies": {
    "category": "context_clues",
    "keyword": "dependencies",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "checkDependencies"
    ],
    "description": "Code related to dependencies",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "context:step": {
    "category": "context_clues",
    "keyword": "step",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "checkDependencies"
    ],
    "description": "Code related to step",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "context:implementations": {
    "category": "context_clues",
    "keyword": "implementations",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "checkDependencies"
    ],
    "description": "Code related to implementations",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "function:buildSearchMatrix": {
    "category": "code_functions",
    "keyword": "buildSearchMatrix",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "buildSearchMatrix"
    ],
    "description": "Function buildSearchMatrix in workflow-automation.js",
    "context_weight": 0.9,
    "line_number": 386,
    "body_preview": "async function buildSearchMatrix() { try { const matrixPath = path.join(__dirname, '../rMemory/search-matrix/context-matrix.json');",
    "context_clues": [
      "build",
      "search",
      "matrix",
      "buildsearchmatrix",
      "building",
      "start",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "context:building": {
    "category": "context_clues",
    "keyword": "building",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "buildSearchMatrix"
    ],
    "description": "Code related to building",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "function:configureAPIs": {
    "category": "code_functions",
    "keyword": "configureAPIs",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "configureAPIs"
    ],
    "description": "Function configureAPIs in workflow-automation.js",
    "context_weight": 0.9,
    "line_number": 405,
    "body_preview": "async function configureAPIs() { try { const envPath = path.join(__dirname, '.env');",
    "context_clues": [
      "configure",
      "configureapis",
      "readfile",
      "openai_api_key",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.305Z"
  },
  "function:validateMemory": {
    "category": "code_functions",
    "keyword": "validateMemory",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "validateMemory"
    ],
    "description": "Function validateMemory in workflow-automation.js",
    "context_weight": 0.9,
    "line_number": 427,
    "body_preview": "async function validateMemory() { try { const memoryPath = path.join(__dirname, '../rMemory/rAgentMemories');",
    "context_clues": [
      "validate",
      "memory",
      "validatememory",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "function:testIntegrations": {
    "category": "code_functions",
    "keyword": "testIntegrations",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "testIntegrations"
    ],
    "description": "Function testIntegrations in workflow-automation.js",
    "context_weight": 0.9,
    "line_number": 439,
    "body_preview": "async function testIntegrations() { // Test search matrix access try {",
    "context_clues": [
      "test",
      "integrations",
      "search",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "context:integrations": {
    "category": "context_clues",
    "keyword": "integrations",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "testIntegrations"
    ],
    "description": "Code related to integrations",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "function:analyzePainPoints": {
    "category": "code_functions",
    "keyword": "analyzePainPoints",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "analyzePainPoints"
    ],
    "description": " Analyze workflow pain points ",
    "context_weight": 0.9,
    "line_number": 454,
    "body_preview": "async function analyzePainPoints() { console.log(`${colors.bright}🔍 Workflow Pain Point Analysis${colors.reset}\\n`); const analysis = {",
    "context_clues": [
      "analyze",
      "pain",
      "points",
      "workflow",
      "reset",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "context:pain": {
    "category": "context_clues",
    "keyword": "pain",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "analyzePainPoints",
      "detectPainPoint"
    ],
    "description": "Code related to pain",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "context:points": {
    "category": "context_clues",
    "keyword": "points",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "analyzePainPoints",
      "detectPainPoint"
    ],
    "description": "Code related to points",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "function:detectPainPoint": {
    "category": "code_functions",
    "keyword": "detectPainPoint",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "detectPainPoint"
    ],
    "description": " Detect specific pain points ",
    "context_weight": 0.9,
    "line_number": 504,
    "body_preview": "async function detectPainPoint(painPointKey) { switch (painPointKey) { case 'slow_context_loading':",
    "context_clues": [
      "detect",
      "pain",
      "point",
      "specific",
      "points",
      "check",
      "workflow",
      "automation"
    ],
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "context:point": {
    "category": "context_clues",
    "keyword": "point",
    "files": [
      "rEngine/workflow-automation.js"
    ],
    "functions": [
      "detectPainPoint"
    ],
    "description": "Code related to point",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:09.306Z"
  },
  "function:analyzeCollectButtons": {
    "category": "code_functions",
    "keyword": "analyzeCollectButtons",
    "files": [
      "scripts/utilities/analyze_collect_buttons.js"
    ],
    "functions": [
      "analyzeCollectButtons"
    ],
    "description": "Function analyzeCollectButtons in analyze_collect_buttons.js",
    "context_weight": 0.9,
    "line_number": 26,
    "body_preview": "async function analyzeCollectButtons() { const { GoogleGenerativeAI } = await import('@google/generative-ai'); try {",
    "context_clues": [
      "analyze",
      "collect",
      "buttons",
      "import",
      "getgenerativemodel",
      "read"
    ],
    "last_updated": "2025-08-20T17:24:10.366Z"
  },
  "context:collect": {
    "category": "context_clues",
    "keyword": "collect",
    "files": [
      "scripts/utilities/analyze_collect_buttons.js"
    ],
    "functions": [
      "analyzeCollectButtons"
    ],
    "description": "Code related to collect",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.366Z"
  },
  "file:analyze_collect_buttons.js": {
    "category": "file_relationships",
    "keyword": "analyze_collect_buttons.js",
    "primary_file": "scripts/utilities/analyze_collect_buttons.js",
    "functions": [
      "analyzeCollectButtons"
    ],
    "description": "File containing analyzeCollectButtons and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:23.663Z"
  },
  "function:cleanCombinedDocumentation": {
    "category": "code_functions",
    "keyword": "cleanCombinedDocumentation",
    "files": [
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "cleanCombinedDocumentation"
    ],
    "description": "Function cleanCombinedDocumentation in clean-combined-docs.js",
    "context_weight": 0.9,
    "line_number": 6,
    "body_preview": "async function cleanCombinedDocumentation() { console.log('🧹 Cleaning Combined Documentation Files...\\n'); const docsDir = '/Volumes/DATA/GitHub/rEngine/docs/generated';",
    "context_clues": [
      "clean",
      "combined",
      "documentation",
      "generated",
      "find",
      "findcombinedfiles",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.377Z"
  },
  "context:combined": {
    "category": "context_clues",
    "keyword": "combined",
    "files": [
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "cleanCombinedDocumentation",
      "findCombinedFiles",
      "scanDir",
      "cleanCombinedFile",
      "regenerateFormats"
    ],
    "description": "Code related to combined",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.378Z"
  },
  "context:findcombinedfiles": {
    "category": "context_clues",
    "keyword": "findcombinedfiles",
    "files": [
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "cleanCombinedDocumentation",
      "findCombinedFiles"
    ],
    "description": "Code related to findcombinedfiles",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.377Z"
  },
  "file:clean-combined-docs.js": {
    "category": "file_relationships",
    "keyword": "clean-combined-docs.js",
    "primary_file": "scripts/utilities/clean-combined-docs.js",
    "functions": [
      "cleanCombinedDocumentation",
      "findCombinedFiles",
      "scanDir",
      "cleanCombinedFile",
      "regenerateFormats"
    ],
    "description": "File containing cleanCombinedDocumentation and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:23.676Z"
  },
  "function:findCombinedFiles": {
    "category": "code_functions",
    "keyword": "findCombinedFiles",
    "files": [
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "findCombinedFiles"
    ],
    "description": "Function findCombinedFiles in clean-combined-docs.js",
    "context_weight": 0.9,
    "line_number": 30,
    "body_preview": "async function findCombinedFiles(dir) { const files = []; async function scanDir(currentDir) {",
    "context_clues": [
      "find",
      "combined",
      "files",
      "findcombinedfiles",
      "readdir",
      "clean",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.377Z"
  },
  "function:cleanCombinedFile": {
    "category": "code_functions",
    "keyword": "cleanCombinedFile",
    "files": [
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "cleanCombinedFile"
    ],
    "description": "Function cleanCombinedFile in clean-combined-docs.js",
    "context_weight": 0.9,
    "line_number": 51,
    "body_preview": "async function cleanCombinedFile(filePath) { const filename = path.basename(filePath); console.log(`🔧 Cleaning: ${filename}`);",
    "context_clues": [
      "clean",
      "combined",
      "file",
      "read",
      "readfile",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.377Z"
  },
  "function:regenerateFormats": {
    "category": "code_functions",
    "keyword": "regenerateFormats",
    "files": [
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "regenerateFormats"
    ],
    "description": "Function regenerateFormats in clean-combined-docs.js",
    "context_weight": 0.9,
    "line_number": 127,
    "body_preview": "async function regenerateFormats(markdownPath) { const SmartDocumentManager = (await import('/Volumes/DATA/GitHub/rEngine/rEngine/smart-document-generator.js')).default; try {",
    "context_clues": [
      "regenerate",
      "formats",
      "import",
      "manager",
      "readfile",
      "generate",
      "clean",
      "combined",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.378Z"
  },
  "context:regenerate": {
    "category": "context_clues",
    "keyword": "regenerate",
    "files": [
      "scripts/utilities/clean-combined-docs.js"
    ],
    "functions": [
      "regenerateFormats"
    ],
    "description": "Code related to regenerate",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.378Z"
  },
  "function:cleanupDocumentationStructure": {
    "category": "code_functions",
    "keyword": "cleanupDocumentationStructure",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "cleanupDocumentationStructure"
    ],
    "description": "Function cleanupDocumentationStructure in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 6,
    "body_preview": "async function cleanupDocumentationStructure() { console.log('🧹 Cleaning up Documentation Directory Structure...\\n'); const docsDir = '/Volumes/DATA/GitHub/rEngine/docs';",
    "context_clues": [
      "cleanup",
      "documentation",
      "structure",
      "create",
      "createcorrectstructure",
      "move",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.388Z"
  },
  "context:createcorrectstructure": {
    "category": "context_clues",
    "keyword": "createcorrectstructure",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "cleanupDocumentationStructure",
      "createCorrectStructure"
    ],
    "description": "Code related to createcorrectstructure",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:move": {
    "category": "context_clues",
    "keyword": "move",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "cleanupDocumentationStructure",
      "moveFilesToCorrectLocations",
      "moveFileWithBackup"
    ],
    "description": "Code related to move",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "file:cleanup-docs-structure.js": {
    "category": "file_relationships",
    "keyword": "cleanup-docs-structure.js",
    "primary_file": "scripts/utilities/cleanup-docs-structure.js",
    "functions": [
      "cleanupDocumentationStructure",
      "createCorrectStructure",
      "moveFilesToCorrectLocations",
      "calculateCorrectPath",
      "moveFileWithBackup",
      "findFilesRecursively",
      "cleanupRecursiveDirectories",
      "findRecursiveDirectories",
      "verifyStructure",
      "countFiles"
    ],
    "description": "File containing cleanupDocumentationStructure and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:23.691Z"
  },
  "function:createCorrectStructure": {
    "category": "code_functions",
    "keyword": "createCorrectStructure",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "createCorrectStructure"
    ],
    "description": "Function createCorrectStructure in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 31,
    "body_preview": "async function createCorrectStructure(docsDir) { console.log('📁 Creating correct directory structure...'); const requiredDirs = [",
    "context_clues": [
      "create",
      "correct",
      "structure",
      "createcorrectstructure",
      "generated",
      "cleanup",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:correct": {
    "category": "context_clues",
    "keyword": "correct",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "createCorrectStructure",
      "moveFilesToCorrectLocations",
      "calculateCorrectPath"
    ],
    "description": "Code related to correct",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "function:moveFilesToCorrectLocations": {
    "category": "code_functions",
    "keyword": "moveFilesToCorrectLocations",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "moveFilesToCorrectLocations"
    ],
    "description": "Function moveFilesToCorrectLocations in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 46,
    "body_preview": "async function moveFilesToCorrectLocations(docsDir) { console.log('\\n📦 Moving files to correct locations...'); // Find all misplaced files",
    "context_clues": [
      "move",
      "files",
      "correct",
      "locations",
      "movefilestocorrectlocations",
      "find",
      "findfilesrecursively",
      "movedcount",
      "cleanup",
      "docs",
      "structure"
    ],
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:locations": {
    "category": "context_clues",
    "keyword": "locations",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "moveFilesToCorrectLocations"
    ],
    "description": "Code related to locations",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:movefilestocorrectlocations": {
    "category": "context_clues",
    "keyword": "movefilestocorrectlocations",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "moveFilesToCorrectLocations"
    ],
    "description": "Code related to movefilestocorrectlocations",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:findfilesrecursively": {
    "category": "context_clues",
    "keyword": "findfilesrecursively",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "moveFilesToCorrectLocations",
      "findFilesRecursively",
      "countFiles"
    ],
    "description": "Code related to findfilesrecursively",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:movedcount": {
    "category": "context_clues",
    "keyword": "movedcount",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "moveFilesToCorrectLocations"
    ],
    "description": "Code related to movedcount",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "function:calculateCorrectPath": {
    "category": "code_functions",
    "keyword": "calculateCorrectPath",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "calculateCorrectPath"
    ],
    "description": "Function calculateCorrectPath in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 92,
    "body_preview": "async function calculateCorrectPath(filePath, docsDir, type) { const fileName = path.basename(filePath); const relativePath = path.relative(docsDir, filePath);",
    "context_clues": [
      "calculate",
      "correct",
      "path",
      "calculatecorrectpath",
      "remove",
      "generated",
      "cleanup",
      "docs",
      "structure"
    ],
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:path": {
    "category": "context_clues",
    "keyword": "path",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "calculateCorrectPath"
    ],
    "description": "Code related to path",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:calculatecorrectpath": {
    "category": "context_clues",
    "keyword": "calculatecorrectpath",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "calculateCorrectPath"
    ],
    "description": "Code related to calculatecorrectpath",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "function:moveFileWithBackup": {
    "category": "code_functions",
    "keyword": "moveFileWithBackup",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "moveFileWithBackup"
    ],
    "description": "Function moveFileWithBackup in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 122,
    "body_preview": "async function moveFileWithBackup(sourcePath, targetPath) { try { await fs.ensureDir(path.dirname(targetPath));",
    "context_clues": [
      "move",
      "file",
      "with",
      "backup",
      "movefilewithbackup",
      "cleanup",
      "docs",
      "structure"
    ],
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "context:movefilewithbackup": {
    "category": "context_clues",
    "keyword": "movefilewithbackup",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "moveFileWithBackup"
    ],
    "description": "Code related to movefilewithbackup",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.389Z"
  },
  "function:findFilesRecursively": {
    "category": "code_functions",
    "keyword": "findFilesRecursively",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "findFilesRecursively"
    ],
    "description": "Function findFilesRecursively in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 139,
    "body_preview": "async function findFilesRecursively(dir, extension) { const files = []; try {",
    "context_clues": [
      "find",
      "files",
      "recursively",
      "findfilesrecursively",
      "readdir",
      "cleanup",
      "docs",
      "structure"
    ],
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:recursively": {
    "category": "context_clues",
    "keyword": "recursively",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "findFilesRecursively"
    ],
    "description": "Code related to recursively",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "function:cleanupRecursiveDirectories": {
    "category": "code_functions",
    "keyword": "cleanupRecursiveDirectories",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "cleanupRecursiveDirectories"
    ],
    "description": "Function cleanupRecursiveDirectories in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 161,
    "body_preview": "async function cleanupRecursiveDirectories(docsDir) { console.log('\\n🗑️  Cleaning up recursive directories...'); try {",
    "context_clues": [
      "cleanup",
      "recursive",
      "directories",
      "find",
      "remove",
      "generated",
      "findrecursivedirectories",
      "readdir",
      "docs",
      "structure"
    ],
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:recursive": {
    "category": "context_clues",
    "keyword": "recursive",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "cleanupRecursiveDirectories",
      "findRecursiveDirectories"
    ],
    "description": "Code related to recursive",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:directories": {
    "category": "context_clues",
    "keyword": "directories",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "cleanupRecursiveDirectories",
      "findRecursiveDirectories"
    ],
    "description": "Code related to directories",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:findrecursivedirectories": {
    "category": "context_clues",
    "keyword": "findrecursivedirectories",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "cleanupRecursiveDirectories",
      "findRecursiveDirectories"
    ],
    "description": "Code related to findrecursivedirectories",
    "context_weight": 0.8999999999999999,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "function:findRecursiveDirectories": {
    "category": "code_functions",
    "keyword": "findRecursiveDirectories",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "findRecursiveDirectories"
    ],
    "description": "Function findRecursiveDirectories in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 181,
    "body_preview": "async function findRecursiveDirectories(dir) { const recursiveDirs = []; try {",
    "context_clues": [
      "find",
      "recursive",
      "directories",
      "findrecursivedirectories",
      "readdir",
      "cleanup",
      "docs",
      "structure"
    ],
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "function:verifyStructure": {
    "category": "code_functions",
    "keyword": "verifyStructure",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "verifyStructure"
    ],
    "description": "Function verifyStructure in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 208,
    "body_preview": "async function verifyStructure(docsDir) { console.log('\\n📋 Verifying final structure:'); const structure = {",
    "context_clues": [
      "verify",
      "structure",
      "generated",
      "cleanup",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "context:verify": {
    "category": "context_clues",
    "keyword": "verify",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "verifyStructure"
    ],
    "description": "Code related to verify",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "function:countFiles": {
    "category": "code_functions",
    "keyword": "countFiles",
    "files": [
      "scripts/utilities/cleanup-docs-structure.js"
    ],
    "functions": [
      "countFiles"
    ],
    "description": "Function countFiles in cleanup-docs-structure.js",
    "context_weight": 0.9,
    "line_number": 222,
    "body_preview": "async function countFiles(dir, extension) { try { const files = await findFilesRecursively(dir, extension);",
    "context_clues": [
      "count",
      "files",
      "findfilesrecursively",
      "run",
      "cleanup",
      "docs",
      "structure"
    ],
    "last_updated": "2025-08-20T17:24:10.390Z"
  },
  "function:fixDocumentationLinks": {
    "category": "code_functions",
    "keyword": "fixDocumentationLinks",
    "files": [
      "scripts/utilities/fix-documentation-links.js"
    ],
    "functions": [
      "fixDocumentationLinks"
    ],
    "description": "Function fixDocumentationLinks in fix-documentation-links.js",
    "context_weight": 0.9,
    "line_number": 6,
    "body_preview": "async function fixDocumentationLinks() { console.log('🔗 Fixing Documentation Links...\\n'); const htmlDocsDir = '/Volumes/DATA/GitHub/rEngine/html-docs';",
    "context_clues": [
      "fix",
      "documentation",
      "links"
    ],
    "last_updated": "2025-08-20T17:24:10.401Z"
  },
  "context:links": {
    "category": "context_clues",
    "keyword": "links",
    "files": [
      "scripts/utilities/fix-documentation-links.js",
      "scripts/utilities/update-documentation-links.js"
    ],
    "functions": [
      "fixDocumentationLinks",
      "fixFileLinks",
      "updateDocumentationLinks"
    ],
    "description": "Code related to links",
    "context_weight": 1,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.439Z"
  },
  "file:fix-documentation-links.js": {
    "category": "file_relationships",
    "keyword": "fix-documentation-links.js",
    "primary_file": "scripts/utilities/fix-documentation-links.js",
    "functions": [
      "fixDocumentationLinks",
      "fixFileLinks"
    ],
    "description": "File containing fixDocumentationLinks and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:23.704Z"
  },
  "function:fixFileLinks": {
    "category": "code_functions",
    "keyword": "fixFileLinks",
    "files": [
      "scripts/utilities/fix-documentation-links.js"
    ],
    "functions": [
      "fixFileLinks"
    ],
    "description": "Function fixFileLinks in fix-documentation-links.js",
    "context_weight": 0.9,
    "line_number": 42,
    "body_preview": "async function fixFileLinks(filePath, mappings) { const filename = path.basename(filePath); console.log(`🔧 Fixing links in: ${filename}`);",
    "context_clues": [
      "fix",
      "file",
      "links",
      "readfile",
      "documentation"
    ],
    "last_updated": "2025-08-20T17:24:10.401Z"
  },
  "function:syncApplicationDocs": {
    "category": "code_functions",
    "keyword": "syncApplicationDocs",
    "files": [
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "syncApplicationDocs"
    ],
    "description": "Function syncApplicationDocs in sync-app-docs.js",
    "context_weight": 0.9,
    "line_number": 43,
    "body_preview": "async function syncApplicationDocs(appName) { const app = APPLICATIONS[appName]; if (!app) {",
    "context_clues": [
      "sync",
      "application",
      "docs",
      "app"
    ],
    "last_updated": "2025-08-20T17:24:10.416Z"
  },
  "file:sync-app-docs.js": {
    "category": "file_relationships",
    "keyword": "sync-app-docs.js",
    "primary_file": "scripts/utilities/sync-app-docs.js",
    "functions": [
      "syncApplicationDocs",
      "generateIndexHTML",
      "main"
    ],
    "description": "File containing syncApplicationDocs and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:23.719Z"
  },
  "function:generateIndexHTML": {
    "category": "code_functions",
    "keyword": "generateIndexHTML",
    "files": [
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "generateIndexHTML"
    ],
    "description": "Function generateIndexHTML in sync-app-docs.js",
    "context_weight": 0.9,
    "line_number": 86,
    "body_preview": "function generateIndexHTML(appName, fileCount) { return `<!DOCTYPE html> <html lang=\"en\">",
    "context_clues": [
      "generate",
      "index",
      "generateindexhtml",
      "initial",
      "sync",
      "app",
      "docs"
    ],
    "last_updated": "2025-08-20T17:24:10.416Z"
  },
  "context:generateindexhtml": {
    "category": "context_clues",
    "keyword": "generateindexhtml",
    "files": [
      "scripts/utilities/sync-app-docs.js"
    ],
    "functions": [
      "generateIndexHTML"
    ],
    "description": "Code related to generateindexhtml",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.416Z"
  },
  "function:updateDocumentationLinks": {
    "category": "code_functions",
    "keyword": "updateDocumentationLinks",
    "files": [
      "scripts/utilities/update-documentation-links.js"
    ],
    "functions": [
      "updateDocumentationLinks"
    ],
    "description": "Function updateDocumentationLinks in update-documentation-links.js",
    "context_weight": 0.9,
    "line_number": 6,
    "body_preview": "async function updateDocumentationLinks() { console.log('🔗 Updating Documentation Links to Generated HTML Files...\\n'); const htmlDocsDir = '/Volumes/DATA/GitHub/rEngine/html-docs';",
    "context_clues": [
      "update",
      "documentation",
      "links",
      "updatedocumentationlinks",
      "generated",
      "read",
      "readfile"
    ],
    "last_updated": "2025-08-20T17:24:10.439Z"
  },
  "context:updatedocumentationlinks": {
    "category": "context_clues",
    "keyword": "updatedocumentationlinks",
    "files": [
      "scripts/utilities/update-documentation-links.js"
    ],
    "functions": [
      "updateDocumentationLinks"
    ],
    "description": "Code related to updatedocumentationlinks",
    "context_weight": 0.7,
    "context_type": "auto_generated",
    "last_updated": "2025-08-20T17:24:10.439Z"
  },
  "file:update-documentation-links.js": {
    "category": "file_relationships",
    "keyword": "update-documentation-links.js",
    "primary_file": "scripts/utilities/update-documentation-links.js",
    "functions": [
      "updateDocumentationLinks"
    ],
    "description": "File containing updateDocumentationLinks and other functions",
    "context_weight": 0.7,
    "last_updated": "2025-08-20T17:18:23.747Z"
  }
}
