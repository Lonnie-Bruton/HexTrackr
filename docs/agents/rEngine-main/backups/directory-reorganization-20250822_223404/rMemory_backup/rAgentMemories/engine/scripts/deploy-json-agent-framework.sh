#!/bin/bash

# StackTrackr JSON-First Agent Framework Deployment Script
# Deploy the complete JSON-first agentic operating system to any new project

set -e

# Configuration
SOURCE_PROJECT="/Volumes/DATA/GitHub/rEngine"
TARGET_PROJECT="${1:-}"
PROJECT_NAME="${2:-NewProject}"

if [ -z "$TARGET_PROJECT" ]; then
    echo "Usage: $0 <target_project_path> [project_name]"
    echo "Example: $0 /path/to/MyNewProject MyNewProject"
    exit 1
fi

echo "🚀 Deploying StackTrackr JSON-First Agent Framework to: $TARGET_PROJECT"
echo "📝 Project Name: $PROJECT_NAME"

# Create target directory if it doesn't exist
mkdir -p "$TARGET_PROJECT"

# Core JSON Files to Copy
JSON_FILES=(
    "agents/agents.json"
    "agents/decisions.json"
    "agents/errors.json"
    "agents/functions.json"
    "agents/memory.json"
    "agents/performance.json"
    "agents/preferences.json"
    "agents/recentissues.json"
    "agents/structure.json"
    "agents/styles.json"
    "agents/tasks.json"
    "agents/variables.json"
)

# Core Documentation Files
DOCS_FILES=(
    "agents/unified-workflow.md"
    "agents/notes/naming-guidelines.md"
    "agents/notes/consolidated-development-guide.md"
    "agents/notes/patch-notes-guidelines.md"
    "docs/roadmap.md"
    "docs/changelog.md"
    "docs/bug_resolution_template.md"
    "AGENTS.md"
)

# Engine and Scripts
ENGINE_FILES=(
    "agents/engine/backup/json_backup_system.py"
    "agents/scripts/sync_tasks.py"
)

# Directory Structure
DIRECTORIES=(
    "agents/debug"
    "agents/lab"
    "agents/notes" 
    "agents/test"
    "agents/scripts"
    "agents/engine/backup"
    "agents/engine/scripts"
    "agents/engine/sync"
    "docs"
    "patchnotes"
    "backups/agents_json"
)

echo "📁 Creating directory structure..."
for dir in "${DIRECTORIES[@]}"; do
    mkdir -p "$TARGET_PROJECT/$dir"
    echo "   Created: $dir"
done

echo "📄 Copying core JSON files..."
for file in "${JSON_FILES[@]}"; do
    if [ -f "$SOURCE_PROJECT/$file" ]; then
        cp "$SOURCE_PROJECT/$file" "$TARGET_PROJECT/$file"
        echo "   ✅ $file"
    else
        echo "   ⚠️  Missing: $file"
    fi
done

echo "📚 Copying documentation files..."
for file in "${DOCS_FILES[@]}"; do
    if [ -f "$SOURCE_PROJECT/$file" ]; then
        cp "$SOURCE_PROJECT/$file" "$TARGET_PROJECT/$file"
        echo "   ✅ $file"
    else
        echo "   ⚠️  Missing: $file"
    fi
done

echo "🔧 Copying engine and scripts..."
for file in "${ENGINE_FILES[@]}"; do
    if [ -f "$SOURCE_PROJECT/$file" ]; then
        cp "$SOURCE_PROJECT/$file" "$TARGET_PROJECT/$file"
        echo "   ✅ $file"
    else
        echo "   ⚠️  Missing: $file"
    fi
done

# Create customized files for new project
echo "⚙️  Customizing files for $PROJECT_NAME..."

# Update agents.json with project name
if [ -f "$TARGET_PROJECT/agents/agents.json" ]; then
    sed -i.bak "s/StackTrackr/$PROJECT_NAME/g" "$TARGET_PROJECT/agents/agents.json"
    rm "$TARGET_PROJECT/agents/agents.json.bak"
    echo "   ✅ Updated agents.json project references"
fi

# Update memory.json with project name
if [ -f "$TARGET_PROJECT/agents/memory.json" ]; then
    sed -i.bak "s/StackTrackr/$PROJECT_NAME/g" "$TARGET_PROJECT/agents/memory.json"
    rm "$TARGET_PROJECT/agents/memory.json.bak"
    echo "   ✅ Updated memory.json project references"
fi

# Update workflow file with project name
if [ -f "$TARGET_PROJECT/agents/unified-workflow.md" ]; then
    sed -i.bak "s/StackTrackr/$PROJECT_NAME/g" "$TARGET_PROJECT/agents/unified-workflow.md"
    rm "$TARGET_PROJECT/agents/unified-workflow.md.bak"
    echo "   ✅ Updated unified-workflow.md project references"
fi

# Create initial roadmap
cat > "$TARGET_PROJECT/docs/roadmap.md" << EOF
# $PROJECT_NAME Roadmap

## 🎯 Project Overview
$PROJECT_NAME is powered by the StackTrackr JSON-first agentic operating system.

## 📋 Current Tasks
- [ ] Project initialization complete
- [ ] Customize agent protocols for project needs  
- [ ] Define project-specific goals and features
- [ ] Set up development environment

## 🚀 Next Steps
1. Review agents/unified-workflow.md for agent protocols
2. Customize JSON files for project requirements
3. Begin development with agent assistance

---
*Generated by StackTrackr Agent Framework Deployment*
EOF

# Create backup script for new project
cat > "$TARGET_PROJECT/backup_system.sh" << 'EOF'
#!/bin/bash
# Project JSON Backup System
echo "🔄 Backing up JSON-first agent system..."
python3 agents/engine/backup/json_backup_system.py
echo "✅ Backup complete!"
EOF

chmod +x "$TARGET_PROJECT/backup_system.sh"

# Create quick start guide
cat > "$TARGET_PROJECT/QUICK_START.md" << EOF
# $PROJECT_NAME - Quick Start Guide

## 🚀 Getting Started

Your project now includes the complete StackTrackr JSON-first agentic operating system!

### 1. Agent Initialization
Tell any AI agent:
\`\`\`
"I'm working on $PROJECT_NAME. Please read the agents/unified-workflow.md file and check agents/tasks.json for current work."
\`\`\`

### 2. Core System Files
- **agents/*.json** - All project data and agent coordination
- **agents/unified-workflow.md** - Master agent protocols
- **docs/roadmap.md** - Project roadmap and tasks
- **patchnotes/** - Version history and changes

### 3. Directory Structure
- **agents/debug/** - Debugging files and logs
- **agents/lab/** - Experimental HTML prototypes
- **agents/test/** - Test files and validation
- **agents/notes/** - Documentation and guides

### 4. Backup System
Run backup anytime: \`./backup_system.sh\`

## 🎯 Key Benefits
- ✅ **JSON-first operation** - Works with or without MCP
- ✅ **Complete fallback** - Autonomous agent operation
- ✅ **Structured organization** - Clear file organization
- ✅ **Cross-agent coordination** - Seamless handoffs

## 📚 Documentation
- Review \`agents/notes/consolidated-development-guide.md\` for complete workflows
- Check \`agents/notes/naming-guidelines.md\` for file organization
- See \`agents/notes/patch-notes-guidelines.md\` for version tracking

---

**Your $PROJECT_NAME is ready for productive development with AI agents!**
EOF

echo ""
echo "🎉 Framework deployment complete!"
echo ""
echo "📋 Deployment Summary:"
echo "   • JSON files: ${#JSON_FILES[@]} core system files"
echo "   • Documentation: ${#DOCS_FILES[@]} guide files"
echo "   • Directories: ${#DIRECTORIES[@]} organized folders"
echo "   • Backup system: Ready for use"
echo ""
echo "🚀 Next Steps:"
echo "   1. cd $TARGET_PROJECT"
echo "   2. Review QUICK_START.md"
echo "   3. Tell any agent: 'Check agents/tasks.json for work'"
echo "   4. Begin development with full agent assistance"
echo ""
echo "✅ $PROJECT_NAME is ready for JSON-first agentic development!"