{
  "metadata": {
    "version": "2.0", 
    "created": "2025-08-16",
    "purpose": "User interaction flows and system communication patterns",
    "description": "Complete user journey mapping across StackTrackr application",
    "total_interactions_mapped": 25,
    "last_updated": "2025-08-16T18:00:00Z",
    "memory_type": "interactions"
  },
  "user_interaction_flows": {
    "table_interaction_flow": {
      "description": "Primary data viewing and manipulation workflow",
      "trigger": "Page load or data refresh",
      "steps": [
        "loadInventory() → loads data from localStorage",
        "renderTable() → displays data in sortable/filterable table",
        "setupEventListeners() → attaches all interaction handlers",
        "User clicks column header → triggers sort via events.js",
        "sortInventory() → reorders data",
        "renderTable() → updates display with sorted data"
      ],
      "ui_elements": ["table headers", "table cells", "pagination controls"],
      "performance_impact": "high",
      "frequency": "very_high"
    },
    "search_interaction_flow": {
      "description": "Real-time search and filtering workflow",
      "trigger": "User types in search input",
      "steps": [
        "User input → triggers debounced search handler",
        "setupSearch() → processes input with debouncing",
        "filterInventory() → applies search query",
        "filterInventoryAdvanced() → applies complex filtering logic",
        "renderTable() → updates display with filtered results",
        "updateItemCount() → updates result counters",
        "renderActiveFilters() → shows active filter chips"
      ],
      "ui_elements": ["search input", "filter chips", "result counter"],
      "performance_impact": "medium",
      "frequency": "high"
    },
    "item_edit_flow": {
      "description": "Item editing and persistence workflow",
      "trigger": "User clicks edit icon or double-clicks cell",
      "steps": [
        "Click edit → startCellEdit() or editItem()",
        "Modal opens → populateEditModal()",
        "User modifies data → form validation",
        "Save → validateFieldValue()",
        "logItemChanges() → records changes",
        "recalcItem() → recalculates derived values",
        "saveInventory() → persists to localStorage",
        "renderTable() → refreshes display"
      ],
      "ui_elements": ["edit icons", "modal dialogs", "form inputs"],
      "performance_impact": "low",
      "frequency": "medium"
    },
    "filtering_interaction_flow": {
      "description": "Advanced filtering and chip management",
      "trigger": "User clicks filter links or applies column filters",
      "steps": [
        "Click filter link → applyQuickFilter()",
        "activeFilters updated → state management",
        "filterInventoryAdvanced() → applies all filters",
        "renderActiveFilters() → updates filter chips UI",
        "renderTable() → displays filtered results",
        "User clicks chip 'X' → removeFilter()",
        "Clear all → clearAllFilters()"
      ],
      "ui_elements": ["filter links", "filter chips", "clear buttons"],
      "performance_impact": "medium",
      "frequency": "medium"
    },
    "spot_price_flow": {
      "description": "Spot price fetching and display workflow",
      "trigger": "Page load, manual refresh, or scheduled update",
      "steps": [
        "fetchSpotPrice() → calls external APIs",
        "updateLastTimestamps() → records fetch time",
        "recordSpot() → logs price history",
        "updateSpotCardColor() → visual price change indicators",
        "renderTable() → updates calculated values",
        "saveSpotHistory() → persists price data"
      ],
      "ui_elements": ["spot price cards", "price change indicators"],
      "performance_impact": "low",
      "frequency": "scheduled"
    },
    "export_flow": {
      "description": "Data export workflow for various formats",
      "trigger": "User clicks export buttons",
      "steps": [
        "Click export → exportCsv()/exportJson()/exportPdf()",
        "sortInventoryByDateNewestFirst() → orders data",
        "Format data → specific format processing",
        "Generate file → create downloadable content",
        "Trigger download → browser download dialog"
      ],
      "ui_elements": ["export buttons", "download dialogs"],
      "performance_impact": "medium",
      "frequency": "low"
    }
  },
  "event_propagation_patterns": {
    "dom_event_flow": {
      "table_events": {
        "click": "→ events.js → specific handler → action function",
        "sort_header_click": "→ events.js → sortInventory() → renderTable()",
        "filter_link_click": "→ events.js → applyQuickFilter() → renderTable()",
        "edit_cell_click": "→ events.js → startCellEdit() → modal display"
      },
      "input_events": {
        "search_input": "→ debounced handler → filterInventory() → renderTable()",
        "pagination_input": "→ events.js → goToPage() → renderTable()",
        "theme_toggle": "→ events.js → toggleTheme() → UI update"
      }
    },
    "custom_event_patterns": {
      "state_changes": "Direct function calls between modules",
      "data_updates": "Function chaining through core modules",
      "ui_updates": "Cascading renders from data changes"
    }
  },
  "state_change_triggers": {
    "inventory_data_changes": [
      "addItem() → saveInventory() → renderTable()",
      "editItem() → logItemChanges() → saveInventory() → renderTable()",
      "deleteItem() → saveInventory() → renderTable()",
      "importData() → loadInventory() → renderTable()"
    ],
    "ui_state_changes": [
      "sortColumn/sortDirection → renderTable()",
      "currentPage → renderPagination()",
      "searchQuery → filterInventory() → renderTable()",
      "activeFilters → filterInventoryAdvanced() → renderTable()"
    ],
    "external_data_changes": [
      "spotPrices → updateSpotCardColor() → renderTable()",
      "apiConfig → refreshProviderStatuses()",
      "theme → setTheme() → UI color updates"
    ]
  },
  "component_interactions": {
    "table_system": {
      "core_components": ["table", "headers", "cells", "pagination"],
      "interaction_pattern": "Central hub - all data flows through table rendering",
      "dependencies": ["search", "filters", "sorting", "pagination"],
      "update_frequency": "high"
    },
    "modal_system": {
      "core_components": ["edit modal", "add modal", "details modal", "about modal"],
      "interaction_pattern": "Overlay system - independent of main table",
      "dependencies": ["form validation", "data persistence"],
      "update_frequency": "low"
    },
    "search_filter_system": {
      "core_components": ["search input", "filter chips", "column filters"],
      "interaction_pattern": "Real-time feedback - immediate UI updates",
      "dependencies": ["debouncing", "state management"],
      "update_frequency": "high"
    }
  },
  "api_integration_points": {
    "spot_price_apis": {
      "trigger": "Scheduled or manual refresh",
      "flow": "fetchSpotPrice() → external API → updateSpotCardColor() → UI update",
      "error_handling": "Provider fallback system",
      "caching": "Time-based cache with configurable duration"
    },
    "catalog_apis": {
      "trigger": "Item lookup or autocomplete",
      "flow": "User input → catalogAPI → autocomplete suggestions → UI update",
      "error_handling": "Graceful degradation",
      "caching": "Result caching for performance"
    }
  },
  "performance_interaction_analysis": {
    "high_frequency_interactions": [
      "Table rendering on data changes",
      "Search input processing",
      "Filter application",
      "Sort operations"
    ],
    "optimization_strategies": [
      "Debounced search input reduces API calls",
      "DocumentFragment usage minimizes DOM reflows",
      "Efficient filter caching reduces recalculation",
      "Virtual scrolling for large datasets"
    ],
    "bottleneck_identification": [
      "Large inventory rendering",
      "Complex filter combinations",
      "Frequent sort operations",
      "Real-time search on large datasets"
    ]
  }
}