# Python/Ansible Service for HexTrackr Automation
FROM python:3.11-alpine

# Install system dependencies for Ansible and networking tools
RUN apk add --no-cache \
    openssh-client \
    sshpass \
    curl \
    wget \
    git \
    bash \
    sudo \
    gcc \
    musl-dev \
    libffi-dev \
    openssl-dev \
    python3-dev \
    rust \
    cargo

# Set working directory
WORKDIR /app

# Create requirements file for Python dependencies
COPY automation/requirements.txt* ./

# Install Python packages
RUN pip install --no-cache-dir \
    flask==2.3.3 \
    flask-cors==4.0.0 \
    celery==5.3.4 \
    redis==5.0.1 \
    ansible==8.5.0 \
    ansible-core==2.15.5 \
    paramiko==3.3.1 \
    netmiko==4.2.0 \
    requests==2.31.0 \
    pyyaml==6.0.1 \
    jinja2==3.1.2 \
    cryptography==41.0.7 \
    psycopg2-binary==2.9.7 \
    sqlalchemy==2.0.23

# Create app directories
RUN mkdir -p /app/automation /app/playbooks /app/inventory /app/logs

# Copy automation service files
COPY automation/ ./automation/
COPY playbooks/ ./playbooks/

# Create ansible user and setup
RUN adduser -D -s /bin/bash ansible && \
    echo "ansible ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/ansible && \
    mkdir -p /home/ansible/.ssh && \
    chown -R ansible:ansible /home/ansible

# Set proper permissions
RUN chmod +x /app/automation/app.py

# Environment variables
ENV PYTHONPATH=/app
ENV ANSIBLE_HOST_KEY_CHECKING=False
ENV ANSIBLE_RETRY_FILES_ENABLED=False
ENV ANSIBLE_SSH_PIPELINING=True

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Expose port
EXPOSE 5000

# Start the Flask application
CMD ["python", "/app/automation/app.py"]
